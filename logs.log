2023-06-07 11:57:02,156:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-07 11:57:02,156:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-07 11:57:02,156:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-07 11:57:02,157:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-07 11:57:03,893:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-07 11:58:04,585:INFO:PyCaret ClassificationExperiment
2023-06-07 11:58:04,587:INFO:Logging name: clf-default-name
2023-06-07 11:58:04,587:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-07 11:58:04,587:INFO:version 3.0.2
2023-06-07 11:58:04,587:INFO:Initializing setup()
2023-06-07 11:58:04,587:INFO:self.USI: 16b5
2023-06-07 11:58:04,587:INFO:self._variable_keys: {'logging_param', 'y_train', 'memory', 'y', 'exp_name_log', 'exp_id', 'y_test', 'seed', 'n_jobs_param', 'pipeline', 'X', 'data', 'fold_shuffle_param', 'fold_generator', 'html_param', 'gpu_n_jobs_param', 'fix_imbalance', '_available_plots', 'is_multiclass', '_ml_usecase', 'log_plots_param', 'fold_groups_param', 'target_param', 'X_test', 'gpu_param', 'X_train', 'idx', 'USI'}
2023-06-07 11:58:04,588:INFO:Checking environment
2023-06-07 11:58:04,588:INFO:python_version: 3.10.9
2023-06-07 11:58:04,588:INFO:python_build: ('main', 'Mar  1 2023 18:18:15')
2023-06-07 11:58:04,589:INFO:machine: AMD64
2023-06-07 11:58:04,589:INFO:platform: Windows-10-10.0.19041-SP0
2023-06-07 11:58:04,591:INFO:Memory: svmem(total=6378106880, available=540340224, percent=91.5, used=5837766656, free=540340224)
2023-06-07 11:58:04,591:INFO:Physical Core: 4
2023-06-07 11:58:04,591:INFO:Logical Core: 8
2023-06-07 11:58:04,592:INFO:Checking libraries
2023-06-07 11:58:04,592:INFO:System:
2023-06-07 11:58:04,592:INFO:    python: 3.10.9 | packaged by Anaconda, Inc. | (main, Mar  1 2023, 18:18:15) [MSC v.1916 64 bit (AMD64)]
2023-06-07 11:58:04,592:INFO:executable: c:\Users\Crossddelta\anaconda3\python.exe
2023-06-07 11:58:04,592:INFO:   machine: Windows-10-10.0.19041-SP0
2023-06-07 11:58:04,592:INFO:PyCaret required dependencies:
2023-06-07 11:58:04,594:INFO:                 pip: 22.3.1
2023-06-07 11:58:04,594:INFO:          setuptools: 65.6.3
2023-06-07 11:58:04,595:INFO:             pycaret: 3.0.2
2023-06-07 11:58:04,595:INFO:             IPython: 8.10.0
2023-06-07 11:58:04,595:INFO:          ipywidgets: 7.6.5
2023-06-07 11:58:04,595:INFO:                tqdm: 4.64.1
2023-06-07 11:58:04,595:INFO:               numpy: 1.23.5
2023-06-07 11:58:04,595:INFO:              pandas: 1.5.3
2023-06-07 11:58:04,595:INFO:              jinja2: 3.1.2
2023-06-07 11:58:04,595:INFO:               scipy: 1.10.0
2023-06-07 11:58:04,596:INFO:              joblib: 1.2.0
2023-06-07 11:58:04,596:INFO:             sklearn: 1.2.1
2023-06-07 11:58:04,596:INFO:                pyod: 1.0.9
2023-06-07 11:58:04,596:INFO:            imblearn: 0.10.1
2023-06-07 11:58:04,596:INFO:   category_encoders: 2.6.1
2023-06-07 11:58:04,596:INFO:            lightgbm: 3.3.5
2023-06-07 11:58:04,596:INFO:               numba: 0.56.4
2023-06-07 11:58:04,596:INFO:            requests: 2.28.1
2023-06-07 11:58:04,596:INFO:          matplotlib: 3.7.0
2023-06-07 11:58:04,596:INFO:          scikitplot: 0.3.7
2023-06-07 11:58:04,597:INFO:         yellowbrick: 1.5
2023-06-07 11:58:04,597:INFO:              plotly: 5.9.0
2023-06-07 11:58:04,597:INFO:             kaleido: 0.2.1
2023-06-07 11:58:04,597:INFO:         statsmodels: 0.13.5
2023-06-07 11:58:04,597:INFO:              sktime: 0.17.0
2023-06-07 11:58:04,597:INFO:               tbats: 1.1.3
2023-06-07 11:58:04,597:INFO:            pmdarima: 2.0.3
2023-06-07 11:58:04,598:INFO:              psutil: 5.9.0
2023-06-07 11:58:04,598:INFO:PyCaret optional dependencies:
2023-06-07 11:58:04,633:INFO:                shap: Not installed
2023-06-07 11:58:04,634:INFO:           interpret: Not installed
2023-06-07 11:58:04,634:INFO:                umap: Not installed
2023-06-07 11:58:04,634:INFO:    pandas_profiling: Not installed
2023-06-07 11:58:04,634:INFO:  explainerdashboard: Not installed
2023-06-07 11:58:04,634:INFO:             autoviz: Not installed
2023-06-07 11:58:04,634:INFO:           fairlearn: Not installed
2023-06-07 11:58:04,634:INFO:             xgboost: Not installed
2023-06-07 11:58:04,634:INFO:            catboost: Not installed
2023-06-07 11:58:04,634:INFO:              kmodes: Not installed
2023-06-07 11:58:04,634:INFO:             mlxtend: Not installed
2023-06-07 11:58:04,634:INFO:       statsforecast: Not installed
2023-06-07 11:58:04,634:INFO:        tune_sklearn: Not installed
2023-06-07 11:58:04,634:INFO:                 ray: Not installed
2023-06-07 11:58:04,634:INFO:            hyperopt: Not installed
2023-06-07 11:58:04,635:INFO:              optuna: Not installed
2023-06-07 11:58:04,635:INFO:               skopt: Not installed
2023-06-07 11:58:04,635:INFO:              mlflow: Not installed
2023-06-07 11:58:04,635:INFO:              gradio: Not installed
2023-06-07 11:58:04,635:INFO:             fastapi: Not installed
2023-06-07 11:58:04,635:INFO:             uvicorn: Not installed
2023-06-07 11:58:04,635:INFO:              m2cgen: Not installed
2023-06-07 11:58:04,635:INFO:           evidently: Not installed
2023-06-07 11:58:04,635:INFO:               fugue: Not installed
2023-06-07 11:58:04,635:INFO:           streamlit: Not installed
2023-06-07 11:58:04,635:INFO:             prophet: Not installed
2023-06-07 11:58:04,635:INFO:None
2023-06-07 11:58:04,636:INFO:Set up data.
2023-06-07 11:58:14,717:INFO:Set up train/test split.
2023-06-07 12:09:47,630:INFO:PyCaret ClassificationExperiment
2023-06-07 12:09:47,631:INFO:Logging name: clf-default-name
2023-06-07 12:09:47,633:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-07 12:09:47,634:INFO:version 3.0.2
2023-06-07 12:09:47,634:INFO:Initializing setup()
2023-06-07 12:09:47,634:INFO:self.USI: 1976
2023-06-07 12:09:47,634:INFO:self._variable_keys: {'logging_param', 'y_train', 'memory', 'y', 'exp_name_log', 'exp_id', 'y_test', 'seed', 'n_jobs_param', 'pipeline', 'X', 'data', 'fold_shuffle_param', 'fold_generator', 'html_param', 'gpu_n_jobs_param', 'fix_imbalance', '_available_plots', 'is_multiclass', '_ml_usecase', 'log_plots_param', 'fold_groups_param', 'target_param', 'X_test', 'gpu_param', 'X_train', 'idx', 'USI'}
2023-06-07 12:09:47,634:INFO:Checking environment
2023-06-07 12:09:47,635:INFO:python_version: 3.10.9
2023-06-07 12:09:47,636:INFO:python_build: ('main', 'Mar  1 2023 18:18:15')
2023-06-07 12:09:47,636:INFO:machine: AMD64
2023-06-07 12:09:47,637:INFO:platform: Windows-10-10.0.19041-SP0
2023-06-07 12:09:47,641:INFO:Memory: svmem(total=6378106880, available=449486848, percent=93.0, used=5928620032, free=449486848)
2023-06-07 12:09:47,641:INFO:Physical Core: 4
2023-06-07 12:09:47,641:INFO:Logical Core: 8
2023-06-07 12:09:47,641:INFO:Checking libraries
2023-06-07 12:09:47,642:INFO:System:
2023-06-07 12:09:47,642:INFO:    python: 3.10.9 | packaged by Anaconda, Inc. | (main, Mar  1 2023, 18:18:15) [MSC v.1916 64 bit (AMD64)]
2023-06-07 12:09:47,642:INFO:executable: c:\Users\Crossddelta\anaconda3\python.exe
2023-06-07 12:09:47,642:INFO:   machine: Windows-10-10.0.19041-SP0
2023-06-07 12:09:47,642:INFO:PyCaret required dependencies:
2023-06-07 12:09:47,645:INFO:                 pip: 22.3.1
2023-06-07 12:09:47,645:INFO:          setuptools: 65.6.3
2023-06-07 12:09:47,645:INFO:             pycaret: 3.0.2
2023-06-07 12:09:47,645:INFO:             IPython: 8.10.0
2023-06-07 12:09:47,645:INFO:          ipywidgets: 7.6.5
2023-06-07 12:09:47,645:INFO:                tqdm: 4.64.1
2023-06-07 12:09:47,646:INFO:               numpy: 1.23.5
2023-06-07 12:09:47,646:INFO:              pandas: 1.5.3
2023-06-07 12:09:47,646:INFO:              jinja2: 3.1.2
2023-06-07 12:09:47,646:INFO:               scipy: 1.10.0
2023-06-07 12:09:47,646:INFO:              joblib: 1.2.0
2023-06-07 12:09:47,646:INFO:             sklearn: 1.2.1
2023-06-07 12:09:47,646:INFO:                pyod: 1.0.9
2023-06-07 12:09:47,646:INFO:            imblearn: 0.10.1
2023-06-07 12:09:47,646:INFO:   category_encoders: 2.6.1
2023-06-07 12:09:47,646:INFO:            lightgbm: 3.3.5
2023-06-07 12:09:47,646:INFO:               numba: 0.56.4
2023-06-07 12:09:47,646:INFO:            requests: 2.28.1
2023-06-07 12:09:47,646:INFO:          matplotlib: 3.7.0
2023-06-07 12:09:47,647:INFO:          scikitplot: 0.3.7
2023-06-07 12:09:47,647:INFO:         yellowbrick: 1.5
2023-06-07 12:09:47,647:INFO:              plotly: 5.9.0
2023-06-07 12:09:47,647:INFO:             kaleido: 0.2.1
2023-06-07 12:09:47,647:INFO:         statsmodels: 0.13.5
2023-06-07 12:09:47,647:INFO:              sktime: 0.17.0
2023-06-07 12:09:47,647:INFO:               tbats: 1.1.3
2023-06-07 12:09:47,647:INFO:            pmdarima: 2.0.3
2023-06-07 12:09:47,647:INFO:              psutil: 5.9.0
2023-06-07 12:09:47,647:INFO:PyCaret optional dependencies:
2023-06-07 12:09:47,647:INFO:                shap: Not installed
2023-06-07 12:09:47,647:INFO:           interpret: Not installed
2023-06-07 12:09:47,647:INFO:                umap: Not installed
2023-06-07 12:09:47,648:INFO:    pandas_profiling: Not installed
2023-06-07 12:09:47,648:INFO:  explainerdashboard: Not installed
2023-06-07 12:09:47,648:INFO:             autoviz: Not installed
2023-06-07 12:09:47,648:INFO:           fairlearn: Not installed
2023-06-07 12:09:47,648:INFO:             xgboost: Not installed
2023-06-07 12:09:47,648:INFO:            catboost: Not installed
2023-06-07 12:09:47,648:INFO:              kmodes: Not installed
2023-06-07 12:09:47,648:INFO:             mlxtend: Not installed
2023-06-07 12:09:47,648:INFO:       statsforecast: Not installed
2023-06-07 12:09:47,648:INFO:        tune_sklearn: Not installed
2023-06-07 12:09:47,649:INFO:                 ray: Not installed
2023-06-07 12:09:47,649:INFO:            hyperopt: Not installed
2023-06-07 12:09:47,649:INFO:              optuna: Not installed
2023-06-07 12:09:47,649:INFO:               skopt: Not installed
2023-06-07 12:09:47,649:INFO:              mlflow: Not installed
2023-06-07 12:09:47,649:INFO:              gradio: Not installed
2023-06-07 12:09:47,649:INFO:             fastapi: Not installed
2023-06-07 12:09:47,649:INFO:             uvicorn: Not installed
2023-06-07 12:09:47,649:INFO:              m2cgen: Not installed
2023-06-07 12:09:47,649:INFO:           evidently: Not installed
2023-06-07 12:09:47,649:INFO:               fugue: Not installed
2023-06-07 12:09:47,650:INFO:           streamlit: Not installed
2023-06-07 12:09:47,650:INFO:             prophet: Not installed
2023-06-07 12:09:47,650:INFO:None
2023-06-07 12:09:47,652:INFO:Set up data.
2023-06-07 12:09:54,992:INFO:Set up train/test split.
2023-06-07 12:14:53,926:INFO:PyCaret ClassificationExperiment
2023-06-07 12:14:53,927:INFO:Logging name: clf-default-name
2023-06-07 12:14:53,950:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-07 12:14:53,951:INFO:version 3.0.2
2023-06-07 12:14:53,951:INFO:Initializing setup()
2023-06-07 12:14:53,951:INFO:self.USI: 0e4d
2023-06-07 12:14:53,952:INFO:self._variable_keys: {'logging_param', 'y_train', 'memory', 'y', 'exp_name_log', 'exp_id', 'y_test', 'seed', 'n_jobs_param', 'pipeline', 'X', 'data', 'fold_shuffle_param', 'fold_generator', 'html_param', 'gpu_n_jobs_param', 'fix_imbalance', '_available_plots', 'is_multiclass', '_ml_usecase', 'log_plots_param', 'fold_groups_param', 'target_param', 'X_test', 'gpu_param', 'X_train', 'idx', 'USI'}
2023-06-07 12:14:54,001:INFO:Checking environment
2023-06-07 12:14:54,077:INFO:python_version: 3.10.9
2023-06-07 12:14:54,077:INFO:python_build: ('main', 'Mar  1 2023 18:18:15')
2023-06-07 12:14:54,125:INFO:machine: AMD64
2023-06-07 12:14:54,125:INFO:platform: Windows-10-10.0.19041-SP0
2023-06-07 12:14:54,375:INFO:Memory: svmem(total=6378106880, available=749928448, percent=88.2, used=5628178432, free=749928448)
2023-06-07 12:14:54,375:INFO:Physical Core: 4
2023-06-07 12:14:54,376:INFO:Logical Core: 8
2023-06-07 12:14:54,376:INFO:Checking libraries
2023-06-07 12:14:54,376:INFO:System:
2023-06-07 12:14:54,425:INFO:    python: 3.10.9 | packaged by Anaconda, Inc. | (main, Mar  1 2023, 18:18:15) [MSC v.1916 64 bit (AMD64)]
2023-06-07 12:14:54,425:INFO:executable: c:\Users\Crossddelta\anaconda3\python.exe
2023-06-07 12:14:54,425:INFO:   machine: Windows-10-10.0.19041-SP0
2023-06-07 12:14:54,426:INFO:PyCaret required dependencies:
2023-06-07 12:14:54,476:INFO:                 pip: 22.3.1
2023-06-07 12:14:54,477:INFO:          setuptools: 65.6.3
2023-06-07 12:14:54,477:INFO:             pycaret: 3.0.2
2023-06-07 12:14:54,477:INFO:             IPython: 8.10.0
2023-06-07 12:14:54,477:INFO:          ipywidgets: 7.6.5
2023-06-07 12:14:54,477:INFO:                tqdm: 4.64.1
2023-06-07 12:14:54,477:INFO:               numpy: 1.23.5
2023-06-07 12:14:54,477:INFO:              pandas: 1.5.3
2023-06-07 12:14:54,477:INFO:              jinja2: 3.1.2
2023-06-07 12:14:54,477:INFO:               scipy: 1.10.0
2023-06-07 12:14:54,477:INFO:              joblib: 1.2.0
2023-06-07 12:14:54,477:INFO:             sklearn: 1.2.1
2023-06-07 12:14:54,478:INFO:                pyod: 1.0.9
2023-06-07 12:14:54,478:INFO:            imblearn: 0.10.1
2023-06-07 12:14:54,478:INFO:   category_encoders: 2.6.1
2023-06-07 12:14:54,478:INFO:            lightgbm: 3.3.5
2023-06-07 12:14:54,478:INFO:               numba: 0.56.4
2023-06-07 12:14:54,478:INFO:            requests: 2.28.1
2023-06-07 12:14:54,478:INFO:          matplotlib: 3.7.0
2023-06-07 12:14:54,478:INFO:          scikitplot: 0.3.7
2023-06-07 12:14:54,478:INFO:         yellowbrick: 1.5
2023-06-07 12:14:54,478:INFO:              plotly: 5.9.0
2023-06-07 12:14:54,478:INFO:             kaleido: 0.2.1
2023-06-07 12:14:54,478:INFO:         statsmodels: 0.13.5
2023-06-07 12:14:54,478:INFO:              sktime: 0.17.0
2023-06-07 12:14:54,478:INFO:               tbats: 1.1.3
2023-06-07 12:14:54,478:INFO:            pmdarima: 2.0.3
2023-06-07 12:14:54,479:INFO:              psutil: 5.9.0
2023-06-07 12:14:54,479:INFO:PyCaret optional dependencies:
2023-06-07 12:14:54,479:INFO:                shap: Not installed
2023-06-07 12:14:54,479:INFO:           interpret: Not installed
2023-06-07 12:14:54,479:INFO:                umap: Not installed
2023-06-07 12:14:54,479:INFO:    pandas_profiling: Not installed
2023-06-07 12:14:54,479:INFO:  explainerdashboard: Not installed
2023-06-07 12:14:54,479:INFO:             autoviz: Not installed
2023-06-07 12:14:54,479:INFO:           fairlearn: Not installed
2023-06-07 12:14:54,479:INFO:             xgboost: Not installed
2023-06-07 12:14:54,479:INFO:            catboost: Not installed
2023-06-07 12:14:54,479:INFO:              kmodes: Not installed
2023-06-07 12:14:54,479:INFO:             mlxtend: Not installed
2023-06-07 12:14:54,479:INFO:       statsforecast: Not installed
2023-06-07 12:14:54,480:INFO:        tune_sklearn: Not installed
2023-06-07 12:14:54,480:INFO:                 ray: Not installed
2023-06-07 12:14:54,480:INFO:            hyperopt: Not installed
2023-06-07 12:14:54,480:INFO:              optuna: Not installed
2023-06-07 12:14:54,480:INFO:               skopt: Not installed
2023-06-07 12:14:54,480:INFO:              mlflow: Not installed
2023-06-07 12:14:54,480:INFO:              gradio: Not installed
2023-06-07 12:14:54,480:INFO:             fastapi: Not installed
2023-06-07 12:14:54,480:INFO:             uvicorn: Not installed
2023-06-07 12:14:54,480:INFO:              m2cgen: Not installed
2023-06-07 12:14:54,480:INFO:           evidently: Not installed
2023-06-07 12:14:54,480:INFO:               fugue: Not installed
2023-06-07 12:14:54,480:INFO:           streamlit: Not installed
2023-06-07 12:14:54,480:INFO:             prophet: Not installed
2023-06-07 12:14:54,480:INFO:None
2023-06-07 12:14:54,481:INFO:Set up data.
2023-06-07 12:15:01,896:INFO:Set up train/test split.
2023-06-07 12:22:59,447:INFO:PyCaret ClassificationExperiment
2023-06-07 12:22:59,447:INFO:Logging name: clf-default-name
2023-06-07 12:22:59,447:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-07 12:22:59,448:INFO:version 3.0.2
2023-06-07 12:22:59,448:INFO:Initializing setup()
2023-06-07 12:22:59,448:INFO:self.USI: 8dfa
2023-06-07 12:22:59,448:INFO:self._variable_keys: {'logging_param', 'y_train', 'memory', 'y', 'exp_name_log', 'exp_id', 'y_test', 'seed', 'n_jobs_param', 'pipeline', 'X', 'data', 'fold_shuffle_param', 'fold_generator', 'html_param', 'gpu_n_jobs_param', 'fix_imbalance', '_available_plots', 'is_multiclass', '_ml_usecase', 'log_plots_param', 'fold_groups_param', 'target_param', 'X_test', 'gpu_param', 'X_train', 'idx', 'USI'}
2023-06-07 12:22:59,448:INFO:Checking environment
2023-06-07 12:22:59,448:INFO:python_version: 3.10.9
2023-06-07 12:22:59,448:INFO:python_build: ('main', 'Mar  1 2023 18:18:15')
2023-06-07 12:22:59,448:INFO:machine: AMD64
2023-06-07 12:22:59,448:INFO:platform: Windows-10-10.0.19041-SP0
2023-06-07 12:22:59,450:INFO:Memory: svmem(total=6378106880, available=965996544, percent=84.9, used=5412110336, free=965996544)
2023-06-07 12:22:59,450:INFO:Physical Core: 4
2023-06-07 12:22:59,451:INFO:Logical Core: 8
2023-06-07 12:22:59,451:INFO:Checking libraries
2023-06-07 12:22:59,451:INFO:System:
2023-06-07 12:22:59,451:INFO:    python: 3.10.9 | packaged by Anaconda, Inc. | (main, Mar  1 2023, 18:18:15) [MSC v.1916 64 bit (AMD64)]
2023-06-07 12:22:59,451:INFO:executable: c:\Users\Crossddelta\anaconda3\python.exe
2023-06-07 12:22:59,451:INFO:   machine: Windows-10-10.0.19041-SP0
2023-06-07 12:22:59,451:INFO:PyCaret required dependencies:
2023-06-07 12:22:59,451:INFO:                 pip: 22.3.1
2023-06-07 12:22:59,452:INFO:          setuptools: 65.6.3
2023-06-07 12:22:59,452:INFO:             pycaret: 3.0.2
2023-06-07 12:22:59,452:INFO:             IPython: 8.10.0
2023-06-07 12:22:59,452:INFO:          ipywidgets: 7.6.5
2023-06-07 12:22:59,453:INFO:                tqdm: 4.64.1
2023-06-07 12:22:59,453:INFO:               numpy: 1.23.5
2023-06-07 12:22:59,453:INFO:              pandas: 1.5.3
2023-06-07 12:22:59,454:INFO:              jinja2: 3.1.2
2023-06-07 12:22:59,454:INFO:               scipy: 1.10.0
2023-06-07 12:22:59,454:INFO:              joblib: 1.2.0
2023-06-07 12:22:59,454:INFO:             sklearn: 1.2.1
2023-06-07 12:22:59,454:INFO:                pyod: 1.0.9
2023-06-07 12:22:59,454:INFO:            imblearn: 0.10.1
2023-06-07 12:22:59,454:INFO:   category_encoders: 2.6.1
2023-06-07 12:22:59,454:INFO:            lightgbm: 3.3.5
2023-06-07 12:22:59,454:INFO:               numba: 0.56.4
2023-06-07 12:22:59,454:INFO:            requests: 2.28.1
2023-06-07 12:22:59,454:INFO:          matplotlib: 3.7.0
2023-06-07 12:22:59,454:INFO:          scikitplot: 0.3.7
2023-06-07 12:22:59,454:INFO:         yellowbrick: 1.5
2023-06-07 12:22:59,455:INFO:              plotly: 5.9.0
2023-06-07 12:22:59,455:INFO:             kaleido: 0.2.1
2023-06-07 12:22:59,455:INFO:         statsmodels: 0.13.5
2023-06-07 12:22:59,455:INFO:              sktime: 0.17.0
2023-06-07 12:22:59,455:INFO:               tbats: 1.1.3
2023-06-07 12:22:59,455:INFO:            pmdarima: 2.0.3
2023-06-07 12:22:59,455:INFO:              psutil: 5.9.0
2023-06-07 12:22:59,455:INFO:PyCaret optional dependencies:
2023-06-07 12:22:59,455:INFO:                shap: Not installed
2023-06-07 12:22:59,455:INFO:           interpret: Not installed
2023-06-07 12:22:59,455:INFO:                umap: Not installed
2023-06-07 12:22:59,455:INFO:    pandas_profiling: Not installed
2023-06-07 12:22:59,455:INFO:  explainerdashboard: Not installed
2023-06-07 12:22:59,455:INFO:             autoviz: Not installed
2023-06-07 12:22:59,456:INFO:           fairlearn: Not installed
2023-06-07 12:22:59,456:INFO:             xgboost: Not installed
2023-06-07 12:22:59,456:INFO:            catboost: Not installed
2023-06-07 12:22:59,456:INFO:              kmodes: Not installed
2023-06-07 12:22:59,456:INFO:             mlxtend: Not installed
2023-06-07 12:22:59,456:INFO:       statsforecast: Not installed
2023-06-07 12:22:59,456:INFO:        tune_sklearn: Not installed
2023-06-07 12:22:59,456:INFO:                 ray: Not installed
2023-06-07 12:22:59,456:INFO:            hyperopt: Not installed
2023-06-07 12:22:59,456:INFO:              optuna: Not installed
2023-06-07 12:22:59,456:INFO:               skopt: Not installed
2023-06-07 12:22:59,457:INFO:              mlflow: Not installed
2023-06-07 12:22:59,457:INFO:              gradio: Not installed
2023-06-07 12:22:59,457:INFO:             fastapi: Not installed
2023-06-07 12:22:59,457:INFO:             uvicorn: Not installed
2023-06-07 12:22:59,457:INFO:              m2cgen: Not installed
2023-06-07 12:22:59,457:INFO:           evidently: Not installed
2023-06-07 12:22:59,457:INFO:               fugue: Not installed
2023-06-07 12:22:59,457:INFO:           streamlit: Not installed
2023-06-07 12:22:59,457:INFO:             prophet: Not installed
2023-06-07 12:22:59,457:INFO:None
2023-06-07 12:22:59,458:INFO:Set up data.
2023-06-07 12:23:06,218:INFO:Set up train/test split.
2023-06-07 12:29:54,977:INFO:PyCaret ClassificationExperiment
2023-06-07 12:29:54,978:INFO:Logging name: clf-default-name
2023-06-07 12:29:54,978:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-07 12:29:54,978:INFO:version 3.0.2
2023-06-07 12:29:54,978:INFO:Initializing setup()
2023-06-07 12:29:54,978:INFO:self.USI: 3a71
2023-06-07 12:29:54,978:INFO:self._variable_keys: {'logging_param', 'y_train', 'memory', 'y', 'exp_name_log', 'exp_id', 'y_test', 'seed', 'n_jobs_param', 'pipeline', 'X', 'data', 'fold_shuffle_param', 'fold_generator', 'html_param', 'gpu_n_jobs_param', 'fix_imbalance', '_available_plots', 'is_multiclass', '_ml_usecase', 'log_plots_param', 'fold_groups_param', 'target_param', 'X_test', 'gpu_param', 'X_train', 'idx', 'USI'}
2023-06-07 12:29:54,979:INFO:Checking environment
2023-06-07 12:29:54,979:INFO:python_version: 3.10.9
2023-06-07 12:29:54,979:INFO:python_build: ('main', 'Mar  1 2023 18:18:15')
2023-06-07 12:29:54,979:INFO:machine: AMD64
2023-06-07 12:29:54,979:INFO:platform: Windows-10-10.0.19041-SP0
2023-06-07 12:29:54,981:INFO:Memory: svmem(total=6378106880, available=842231808, percent=86.8, used=5535875072, free=842231808)
2023-06-07 12:29:54,981:INFO:Physical Core: 4
2023-06-07 12:29:54,981:INFO:Logical Core: 8
2023-06-07 12:29:54,981:INFO:Checking libraries
2023-06-07 12:29:54,981:INFO:System:
2023-06-07 12:29:54,981:INFO:    python: 3.10.9 | packaged by Anaconda, Inc. | (main, Mar  1 2023, 18:18:15) [MSC v.1916 64 bit (AMD64)]
2023-06-07 12:29:54,982:INFO:executable: c:\Users\Crossddelta\anaconda3\python.exe
2023-06-07 12:29:54,982:INFO:   machine: Windows-10-10.0.19041-SP0
2023-06-07 12:29:54,982:INFO:PyCaret required dependencies:
2023-06-07 12:29:54,983:INFO:                 pip: 22.3.1
2023-06-07 12:29:54,983:INFO:          setuptools: 65.6.3
2023-06-07 12:29:54,983:INFO:             pycaret: 3.0.2
2023-06-07 12:29:54,983:INFO:             IPython: 8.10.0
2023-06-07 12:29:54,983:INFO:          ipywidgets: 7.6.5
2023-06-07 12:29:54,983:INFO:                tqdm: 4.64.1
2023-06-07 12:29:54,983:INFO:               numpy: 1.23.5
2023-06-07 12:29:54,983:INFO:              pandas: 1.5.3
2023-06-07 12:29:54,983:INFO:              jinja2: 3.1.2
2023-06-07 12:29:54,983:INFO:               scipy: 1.10.0
2023-06-07 12:29:54,983:INFO:              joblib: 1.2.0
2023-06-07 12:29:54,983:INFO:             sklearn: 1.2.1
2023-06-07 12:29:54,984:INFO:                pyod: 1.0.9
2023-06-07 12:29:54,984:INFO:            imblearn: 0.10.1
2023-06-07 12:29:54,984:INFO:   category_encoders: 2.6.1
2023-06-07 12:29:54,984:INFO:            lightgbm: 3.3.5
2023-06-07 12:29:54,984:INFO:               numba: 0.56.4
2023-06-07 12:29:54,984:INFO:            requests: 2.28.1
2023-06-07 12:29:54,984:INFO:          matplotlib: 3.7.0
2023-06-07 12:29:54,984:INFO:          scikitplot: 0.3.7
2023-06-07 12:29:54,984:INFO:         yellowbrick: 1.5
2023-06-07 12:29:54,984:INFO:              plotly: 5.9.0
2023-06-07 12:29:54,984:INFO:             kaleido: 0.2.1
2023-06-07 12:29:54,984:INFO:         statsmodels: 0.13.5
2023-06-07 12:29:54,984:INFO:              sktime: 0.17.0
2023-06-07 12:29:54,985:INFO:               tbats: 1.1.3
2023-06-07 12:29:54,985:INFO:            pmdarima: 2.0.3
2023-06-07 12:29:54,985:INFO:              psutil: 5.9.0
2023-06-07 12:29:54,985:INFO:PyCaret optional dependencies:
2023-06-07 12:29:54,985:INFO:                shap: Not installed
2023-06-07 12:29:54,985:INFO:           interpret: Not installed
2023-06-07 12:29:54,985:INFO:                umap: Not installed
2023-06-07 12:29:54,985:INFO:    pandas_profiling: Not installed
2023-06-07 12:29:54,985:INFO:  explainerdashboard: Not installed
2023-06-07 12:29:54,985:INFO:             autoviz: Not installed
2023-06-07 12:29:54,985:INFO:           fairlearn: Not installed
2023-06-07 12:29:54,985:INFO:             xgboost: Not installed
2023-06-07 12:29:54,985:INFO:            catboost: Not installed
2023-06-07 12:29:54,985:INFO:              kmodes: Not installed
2023-06-07 12:29:54,986:INFO:             mlxtend: Not installed
2023-06-07 12:29:54,986:INFO:       statsforecast: Not installed
2023-06-07 12:29:54,986:INFO:        tune_sklearn: Not installed
2023-06-07 12:29:54,986:INFO:                 ray: Not installed
2023-06-07 12:29:54,986:INFO:            hyperopt: Not installed
2023-06-07 12:29:54,986:INFO:              optuna: Not installed
2023-06-07 12:29:54,986:INFO:               skopt: Not installed
2023-06-07 12:29:54,986:INFO:              mlflow: Not installed
2023-06-07 12:29:54,986:INFO:              gradio: Not installed
2023-06-07 12:29:54,986:INFO:             fastapi: Not installed
2023-06-07 12:29:54,986:INFO:             uvicorn: Not installed
2023-06-07 12:29:54,986:INFO:              m2cgen: Not installed
2023-06-07 12:29:54,986:INFO:           evidently: Not installed
2023-06-07 12:29:54,986:INFO:               fugue: Not installed
2023-06-07 12:29:54,986:INFO:           streamlit: Not installed
2023-06-07 12:29:54,987:INFO:             prophet: Not installed
2023-06-07 12:29:54,987:INFO:None
2023-06-07 12:29:54,987:INFO:Set up data.
2023-06-07 12:30:03,745:INFO:Set up train/test split.
2023-06-07 12:32:32,155:INFO:PyCaret ClassificationExperiment
2023-06-07 12:32:32,156:INFO:Logging name: clf-default-name
2023-06-07 12:32:32,156:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-07 12:32:32,156:INFO:version 3.0.2
2023-06-07 12:32:32,156:INFO:Initializing setup()
2023-06-07 12:32:32,156:INFO:self.USI: 460e
2023-06-07 12:32:32,156:INFO:self._variable_keys: {'logging_param', 'y_train', 'memory', 'y', 'exp_name_log', 'exp_id', 'y_test', 'seed', 'n_jobs_param', 'pipeline', 'X', 'data', 'fold_shuffle_param', 'fold_generator', 'html_param', 'gpu_n_jobs_param', 'fix_imbalance', '_available_plots', 'is_multiclass', '_ml_usecase', 'log_plots_param', 'fold_groups_param', 'target_param', 'X_test', 'gpu_param', 'X_train', 'idx', 'USI'}
2023-06-07 12:32:32,157:INFO:Checking environment
2023-06-07 12:32:32,157:INFO:python_version: 3.10.9
2023-06-07 12:32:32,158:INFO:python_build: ('main', 'Mar  1 2023 18:18:15')
2023-06-07 12:32:32,158:INFO:machine: AMD64
2023-06-07 12:32:32,159:INFO:platform: Windows-10-10.0.19041-SP0
2023-06-07 12:32:32,160:INFO:Memory: svmem(total=6378106880, available=1426837504, percent=77.6, used=4951269376, free=1426837504)
2023-06-07 12:32:32,161:INFO:Physical Core: 4
2023-06-07 12:32:32,161:INFO:Logical Core: 8
2023-06-07 12:32:32,161:INFO:Checking libraries
2023-06-07 12:32:32,161:INFO:System:
2023-06-07 12:32:32,161:INFO:    python: 3.10.9 | packaged by Anaconda, Inc. | (main, Mar  1 2023, 18:18:15) [MSC v.1916 64 bit (AMD64)]
2023-06-07 12:32:32,161:INFO:executable: c:\Users\Crossddelta\anaconda3\python.exe
2023-06-07 12:32:32,162:INFO:   machine: Windows-10-10.0.19041-SP0
2023-06-07 12:32:32,162:INFO:PyCaret required dependencies:
2023-06-07 12:32:32,163:INFO:                 pip: 22.3.1
2023-06-07 12:32:32,163:INFO:          setuptools: 65.6.3
2023-06-07 12:32:32,163:INFO:             pycaret: 3.0.2
2023-06-07 12:32:32,164:INFO:             IPython: 8.10.0
2023-06-07 12:32:32,164:INFO:          ipywidgets: 7.6.5
2023-06-07 12:32:32,164:INFO:                tqdm: 4.64.1
2023-06-07 12:32:32,164:INFO:               numpy: 1.23.5
2023-06-07 12:32:32,164:INFO:              pandas: 1.5.3
2023-06-07 12:32:32,164:INFO:              jinja2: 3.1.2
2023-06-07 12:32:32,164:INFO:               scipy: 1.10.0
2023-06-07 12:32:32,164:INFO:              joblib: 1.2.0
2023-06-07 12:32:32,164:INFO:             sklearn: 1.2.1
2023-06-07 12:32:32,164:INFO:                pyod: 1.0.9
2023-06-07 12:32:32,164:INFO:            imblearn: 0.10.1
2023-06-07 12:32:32,165:INFO:   category_encoders: 2.6.1
2023-06-07 12:32:32,165:INFO:            lightgbm: 3.3.5
2023-06-07 12:32:32,165:INFO:               numba: 0.56.4
2023-06-07 12:32:32,165:INFO:            requests: 2.28.1
2023-06-07 12:32:32,165:INFO:          matplotlib: 3.7.0
2023-06-07 12:32:32,165:INFO:          scikitplot: 0.3.7
2023-06-07 12:32:32,165:INFO:         yellowbrick: 1.5
2023-06-07 12:32:32,165:INFO:              plotly: 5.9.0
2023-06-07 12:32:32,165:INFO:             kaleido: 0.2.1
2023-06-07 12:32:32,165:INFO:         statsmodels: 0.13.5
2023-06-07 12:32:32,165:INFO:              sktime: 0.17.0
2023-06-07 12:32:32,165:INFO:               tbats: 1.1.3
2023-06-07 12:32:32,165:INFO:            pmdarima: 2.0.3
2023-06-07 12:32:32,165:INFO:              psutil: 5.9.0
2023-06-07 12:32:32,166:INFO:PyCaret optional dependencies:
2023-06-07 12:32:32,166:INFO:                shap: Not installed
2023-06-07 12:32:32,166:INFO:           interpret: Not installed
2023-06-07 12:32:32,166:INFO:                umap: Not installed
2023-06-07 12:32:32,166:INFO:    pandas_profiling: Not installed
2023-06-07 12:32:32,166:INFO:  explainerdashboard: Not installed
2023-06-07 12:32:32,166:INFO:             autoviz: Not installed
2023-06-07 12:32:32,166:INFO:           fairlearn: Not installed
2023-06-07 12:32:32,166:INFO:             xgboost: Not installed
2023-06-07 12:32:32,166:INFO:            catboost: Not installed
2023-06-07 12:32:32,166:INFO:              kmodes: Not installed
2023-06-07 12:32:32,166:INFO:             mlxtend: Not installed
2023-06-07 12:32:32,166:INFO:       statsforecast: Not installed
2023-06-07 12:32:32,167:INFO:        tune_sklearn: Not installed
2023-06-07 12:32:32,167:INFO:                 ray: Not installed
2023-06-07 12:32:32,167:INFO:            hyperopt: Not installed
2023-06-07 12:32:32,167:INFO:              optuna: Not installed
2023-06-07 12:32:32,167:INFO:               skopt: Not installed
2023-06-07 12:32:32,167:INFO:              mlflow: Not installed
2023-06-07 12:32:32,167:INFO:              gradio: Not installed
2023-06-07 12:32:32,167:INFO:             fastapi: Not installed
2023-06-07 12:32:32,167:INFO:             uvicorn: Not installed
2023-06-07 12:32:32,167:INFO:              m2cgen: Not installed
2023-06-07 12:32:32,167:INFO:           evidently: Not installed
2023-06-07 12:32:32,167:INFO:               fugue: Not installed
2023-06-07 12:32:32,167:INFO:           streamlit: Not installed
2023-06-07 12:32:32,167:INFO:             prophet: Not installed
2023-06-07 12:32:32,167:INFO:None
2023-06-07 12:32:32,168:INFO:Set up data.
2023-06-07 12:32:39,701:INFO:Set up train/test split.
2023-06-07 12:32:42,562:INFO:Set up index.
2023-06-07 12:32:42,765:INFO:Set up folding strategy.
2023-06-07 12:32:42,768:INFO:Assigning column types.
2023-06-07 12:32:44,075:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-07 12:32:44,185:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-07 12:32:44,282:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-07 12:32:44,414:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 12:32:45,337:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 12:32:45,409:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-07 12:32:45,411:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-07 12:32:45,458:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 12:32:45,459:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 12:32:45,459:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-07 12:32:45,531:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-07 12:32:45,579:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 12:32:45,579:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 12:32:45,652:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-07 12:32:45,695:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 12:32:45,695:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 12:32:45,695:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-07 12:32:45,820:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 12:32:45,820:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 12:32:45,948:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 12:32:45,949:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 12:32:45,966:INFO:Preparing preprocessing pipeline...
2023-06-07 12:32:46,187:INFO:Set up label encoding.
2023-06-07 12:32:46,188:INFO:Set up date feature engineering.
2023-06-07 12:32:46,190:INFO:Set up simple imputation.
2023-06-07 12:32:46,906:INFO:Set up encoding of categorical features.
2023-06-07 12:32:46,928:INFO:Set up removing outliers.
2023-06-07 12:34:04,042:INFO:PyCaret ClassificationExperiment
2023-06-07 12:34:04,043:INFO:Logging name: clf-default-name
2023-06-07 12:34:04,043:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-07 12:34:04,043:INFO:version 3.0.2
2023-06-07 12:34:04,043:INFO:Initializing setup()
2023-06-07 12:34:04,043:INFO:self.USI: 79cc
2023-06-07 12:34:04,043:INFO:self._variable_keys: {'logging_param', 'y_train', 'memory', 'y', 'exp_name_log', 'exp_id', 'y_test', 'seed', 'n_jobs_param', 'pipeline', 'X', 'data', 'fold_shuffle_param', 'fold_generator', 'html_param', 'gpu_n_jobs_param', 'fix_imbalance', '_available_plots', 'is_multiclass', '_ml_usecase', 'log_plots_param', 'fold_groups_param', 'target_param', 'X_test', 'gpu_param', 'X_train', 'idx', 'USI'}
2023-06-07 12:34:04,044:INFO:Checking environment
2023-06-07 12:34:04,044:INFO:python_version: 3.10.9
2023-06-07 12:34:04,044:INFO:python_build: ('main', 'Mar  1 2023 18:18:15')
2023-06-07 12:34:04,044:INFO:machine: AMD64
2023-06-07 12:34:04,044:INFO:platform: Windows-10-10.0.19041-SP0
2023-06-07 12:34:04,044:INFO:Memory: svmem(total=6378106880, available=2188505088, percent=65.7, used=4189601792, free=2188505088)
2023-06-07 12:34:04,045:INFO:Physical Core: 4
2023-06-07 12:34:04,045:INFO:Logical Core: 8
2023-06-07 12:34:04,045:INFO:Checking libraries
2023-06-07 12:34:04,045:INFO:System:
2023-06-07 12:34:04,045:INFO:    python: 3.10.9 | packaged by Anaconda, Inc. | (main, Mar  1 2023, 18:18:15) [MSC v.1916 64 bit (AMD64)]
2023-06-07 12:34:04,045:INFO:executable: c:\Users\Crossddelta\anaconda3\python.exe
2023-06-07 12:34:04,045:INFO:   machine: Windows-10-10.0.19041-SP0
2023-06-07 12:34:04,045:INFO:PyCaret required dependencies:
2023-06-07 12:34:04,045:INFO:                 pip: 22.3.1
2023-06-07 12:34:04,045:INFO:          setuptools: 65.6.3
2023-06-07 12:34:04,046:INFO:             pycaret: 3.0.2
2023-06-07 12:34:04,046:INFO:             IPython: 8.10.0
2023-06-07 12:34:04,046:INFO:          ipywidgets: 7.6.5
2023-06-07 12:34:04,046:INFO:                tqdm: 4.64.1
2023-06-07 12:34:04,046:INFO:               numpy: 1.23.5
2023-06-07 12:34:04,046:INFO:              pandas: 1.5.3
2023-06-07 12:34:04,046:INFO:              jinja2: 3.1.2
2023-06-07 12:34:04,046:INFO:               scipy: 1.10.0
2023-06-07 12:34:04,046:INFO:              joblib: 1.2.0
2023-06-07 12:34:04,046:INFO:             sklearn: 1.2.1
2023-06-07 12:34:04,046:INFO:                pyod: 1.0.9
2023-06-07 12:34:04,046:INFO:            imblearn: 0.10.1
2023-06-07 12:34:04,046:INFO:   category_encoders: 2.6.1
2023-06-07 12:34:04,046:INFO:            lightgbm: 3.3.5
2023-06-07 12:34:04,046:INFO:               numba: 0.56.4
2023-06-07 12:34:04,047:INFO:            requests: 2.28.1
2023-06-07 12:34:04,047:INFO:          matplotlib: 3.7.0
2023-06-07 12:34:04,047:INFO:          scikitplot: 0.3.7
2023-06-07 12:34:04,047:INFO:         yellowbrick: 1.5
2023-06-07 12:34:04,047:INFO:              plotly: 5.9.0
2023-06-07 12:34:04,047:INFO:             kaleido: 0.2.1
2023-06-07 12:34:04,047:INFO:         statsmodels: 0.13.5
2023-06-07 12:34:04,047:INFO:              sktime: 0.17.0
2023-06-07 12:34:04,047:INFO:               tbats: 1.1.3
2023-06-07 12:34:04,047:INFO:            pmdarima: 2.0.3
2023-06-07 12:34:04,047:INFO:              psutil: 5.9.0
2023-06-07 12:34:04,047:INFO:PyCaret optional dependencies:
2023-06-07 12:34:04,047:INFO:                shap: Not installed
2023-06-07 12:34:04,047:INFO:           interpret: Not installed
2023-06-07 12:34:04,048:INFO:                umap: Not installed
2023-06-07 12:34:04,048:INFO:    pandas_profiling: Not installed
2023-06-07 12:34:04,048:INFO:  explainerdashboard: Not installed
2023-06-07 12:34:04,048:INFO:             autoviz: Not installed
2023-06-07 12:34:04,048:INFO:           fairlearn: Not installed
2023-06-07 12:34:04,048:INFO:             xgboost: Not installed
2023-06-07 12:34:04,048:INFO:            catboost: Not installed
2023-06-07 12:34:04,048:INFO:              kmodes: Not installed
2023-06-07 12:34:04,048:INFO:             mlxtend: Not installed
2023-06-07 12:34:04,048:INFO:       statsforecast: Not installed
2023-06-07 12:34:04,048:INFO:        tune_sklearn: Not installed
2023-06-07 12:34:04,048:INFO:                 ray: Not installed
2023-06-07 12:34:04,048:INFO:            hyperopt: Not installed
2023-06-07 12:34:04,048:INFO:              optuna: Not installed
2023-06-07 12:34:04,049:INFO:               skopt: Not installed
2023-06-07 12:34:04,049:INFO:              mlflow: Not installed
2023-06-07 12:34:04,049:INFO:              gradio: Not installed
2023-06-07 12:34:04,049:INFO:             fastapi: Not installed
2023-06-07 12:34:04,049:INFO:             uvicorn: Not installed
2023-06-07 12:34:04,049:INFO:              m2cgen: Not installed
2023-06-07 12:34:04,049:INFO:           evidently: Not installed
2023-06-07 12:34:04,049:INFO:               fugue: Not installed
2023-06-07 12:34:04,049:INFO:           streamlit: Not installed
2023-06-07 12:34:04,049:INFO:             prophet: Not installed
2023-06-07 12:34:04,049:INFO:None
2023-06-07 12:34:04,049:INFO:Set up data.
2023-06-07 12:34:11,570:INFO:Set up train/test split.
2023-06-07 15:12:53,031:INFO:PyCaret ClassificationExperiment
2023-06-07 15:12:53,033:INFO:Logging name: clf-default-name
2023-06-07 15:12:53,034:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-07 15:12:53,034:INFO:version 3.0.2
2023-06-07 15:12:53,034:INFO:Initializing setup()
2023-06-07 15:12:53,034:INFO:self.USI: 9e6b
2023-06-07 15:12:53,035:INFO:self._variable_keys: {'logging_param', 'y_train', 'memory', 'y', 'exp_name_log', 'exp_id', 'y_test', 'seed', 'n_jobs_param', 'pipeline', 'X', 'data', 'fold_shuffle_param', 'fold_generator', 'html_param', 'gpu_n_jobs_param', 'fix_imbalance', '_available_plots', 'is_multiclass', '_ml_usecase', 'log_plots_param', 'fold_groups_param', 'target_param', 'X_test', 'gpu_param', 'X_train', 'idx', 'USI'}
2023-06-07 15:12:53,035:INFO:Checking environment
2023-06-07 15:12:53,036:INFO:python_version: 3.10.9
2023-06-07 15:12:53,036:INFO:python_build: ('main', 'Mar  1 2023 18:18:15')
2023-06-07 15:12:53,036:INFO:machine: AMD64
2023-06-07 15:12:53,038:INFO:platform: Windows-10-10.0.19041-SP0
2023-06-07 15:12:53,040:INFO:Memory: svmem(total=6378106880, available=957689856, percent=85.0, used=5420417024, free=957689856)
2023-06-07 15:12:53,041:INFO:Physical Core: 4
2023-06-07 15:12:53,041:INFO:Logical Core: 8
2023-06-07 15:12:53,041:INFO:Checking libraries
2023-06-07 15:12:53,042:INFO:System:
2023-06-07 15:12:53,042:INFO:    python: 3.10.9 | packaged by Anaconda, Inc. | (main, Mar  1 2023, 18:18:15) [MSC v.1916 64 bit (AMD64)]
2023-06-07 15:12:53,042:INFO:executable: c:\Users\Crossddelta\anaconda3\python.exe
2023-06-07 15:12:53,042:INFO:   machine: Windows-10-10.0.19041-SP0
2023-06-07 15:12:53,042:INFO:PyCaret required dependencies:
2023-06-07 15:12:53,045:INFO:                 pip: 22.3.1
2023-06-07 15:12:53,045:INFO:          setuptools: 65.6.3
2023-06-07 15:12:53,045:INFO:             pycaret: 3.0.2
2023-06-07 15:12:53,046:INFO:             IPython: 8.10.0
2023-06-07 15:12:53,046:INFO:          ipywidgets: 7.6.5
2023-06-07 15:12:53,046:INFO:                tqdm: 4.64.1
2023-06-07 15:12:53,046:INFO:               numpy: 1.23.5
2023-06-07 15:12:53,046:INFO:              pandas: 1.5.3
2023-06-07 15:12:53,046:INFO:              jinja2: 3.1.2
2023-06-07 15:12:53,046:INFO:               scipy: 1.10.0
2023-06-07 15:12:53,046:INFO:              joblib: 1.2.0
2023-06-07 15:12:53,046:INFO:             sklearn: 1.2.1
2023-06-07 15:12:53,046:INFO:                pyod: 1.0.9
2023-06-07 15:12:53,046:INFO:            imblearn: 0.10.1
2023-06-07 15:12:53,046:INFO:   category_encoders: 2.6.1
2023-06-07 15:12:53,046:INFO:            lightgbm: 3.3.5
2023-06-07 15:12:53,046:INFO:               numba: 0.56.4
2023-06-07 15:12:53,046:INFO:            requests: 2.28.1
2023-06-07 15:12:53,046:INFO:          matplotlib: 3.7.0
2023-06-07 15:12:53,047:INFO:          scikitplot: 0.3.7
2023-06-07 15:12:53,047:INFO:         yellowbrick: 1.5
2023-06-07 15:12:53,047:INFO:              plotly: 5.9.0
2023-06-07 15:12:53,047:INFO:             kaleido: 0.2.1
2023-06-07 15:12:53,047:INFO:         statsmodels: 0.13.5
2023-06-07 15:12:53,047:INFO:              sktime: 0.17.0
2023-06-07 15:12:53,047:INFO:               tbats: 1.1.3
2023-06-07 15:12:53,047:INFO:            pmdarima: 2.0.3
2023-06-07 15:12:53,047:INFO:              psutil: 5.9.0
2023-06-07 15:12:53,047:INFO:PyCaret optional dependencies:
2023-06-07 15:12:53,047:INFO:                shap: Not installed
2023-06-07 15:12:53,047:INFO:           interpret: Not installed
2023-06-07 15:12:53,047:INFO:                umap: Not installed
2023-06-07 15:12:53,047:INFO:    pandas_profiling: Not installed
2023-06-07 15:12:53,048:INFO:  explainerdashboard: Not installed
2023-06-07 15:12:53,048:INFO:             autoviz: Not installed
2023-06-07 15:12:53,048:INFO:           fairlearn: Not installed
2023-06-07 15:12:53,048:INFO:             xgboost: Not installed
2023-06-07 15:12:53,048:INFO:            catboost: Not installed
2023-06-07 15:12:53,048:INFO:              kmodes: Not installed
2023-06-07 15:12:53,048:INFO:             mlxtend: Not installed
2023-06-07 15:12:53,048:INFO:       statsforecast: Not installed
2023-06-07 15:12:53,048:INFO:        tune_sklearn: Not installed
2023-06-07 15:12:53,048:INFO:                 ray: Not installed
2023-06-07 15:12:53,048:INFO:            hyperopt: Not installed
2023-06-07 15:12:53,048:INFO:              optuna: Not installed
2023-06-07 15:12:53,048:INFO:               skopt: Not installed
2023-06-07 15:12:53,048:INFO:              mlflow: Not installed
2023-06-07 15:12:53,048:INFO:              gradio: Not installed
2023-06-07 15:12:53,048:INFO:             fastapi: Not installed
2023-06-07 15:12:53,049:INFO:             uvicorn: Not installed
2023-06-07 15:12:53,049:INFO:              m2cgen: Not installed
2023-06-07 15:12:53,049:INFO:           evidently: Not installed
2023-06-07 15:12:53,049:INFO:               fugue: Not installed
2023-06-07 15:12:53,049:INFO:           streamlit: Not installed
2023-06-07 15:12:53,049:INFO:             prophet: Not installed
2023-06-07 15:12:53,049:INFO:None
2023-06-07 15:12:53,051:INFO:Set up data.
2023-06-07 15:12:53,116:INFO:Set up train/test split.
2023-06-07 15:20:05,772:INFO:PyCaret RegressionExperiment
2023-06-07 15:20:05,772:INFO:Logging name: reg-default-name
2023-06-07 15:20:05,773:INFO:ML Usecase: MLUsecase.REGRESSION
2023-06-07 15:20:05,773:INFO:version 3.0.2
2023-06-07 15:20:05,774:INFO:Initializing setup()
2023-06-07 15:20:05,774:INFO:self.USI: 733e
2023-06-07 15:20:05,774:INFO:self._variable_keys: {'logging_param', 'y_train', 'memory', 'y', 'exp_name_log', 'exp_id', 'y_test', 'seed', 'n_jobs_param', 'pipeline', 'X', 'data', 'fold_shuffle_param', 'fold_generator', 'html_param', 'gpu_n_jobs_param', '_available_plots', 'transform_target_param', '_ml_usecase', 'log_plots_param', 'fold_groups_param', 'target_param', 'X_test', 'gpu_param', 'X_train', 'idx', 'USI'}
2023-06-07 15:20:05,774:INFO:Checking environment
2023-06-07 15:20:05,774:INFO:python_version: 3.10.9
2023-06-07 15:20:05,774:INFO:python_build: ('main', 'Mar  1 2023 18:18:15')
2023-06-07 15:20:05,774:INFO:machine: AMD64
2023-06-07 15:20:05,774:INFO:platform: Windows-10-10.0.19041-SP0
2023-06-07 15:20:05,774:INFO:Memory: svmem(total=6378106880, available=1055977472, percent=83.4, used=5322129408, free=1055977472)
2023-06-07 15:20:05,775:INFO:Physical Core: 4
2023-06-07 15:20:05,775:INFO:Logical Core: 8
2023-06-07 15:20:05,775:INFO:Checking libraries
2023-06-07 15:20:05,775:INFO:System:
2023-06-07 15:20:05,775:INFO:    python: 3.10.9 | packaged by Anaconda, Inc. | (main, Mar  1 2023, 18:18:15) [MSC v.1916 64 bit (AMD64)]
2023-06-07 15:20:05,775:INFO:executable: c:\Users\Crossddelta\anaconda3\python.exe
2023-06-07 15:20:05,775:INFO:   machine: Windows-10-10.0.19041-SP0
2023-06-07 15:20:05,775:INFO:PyCaret required dependencies:
2023-06-07 15:20:05,776:INFO:                 pip: 22.3.1
2023-06-07 15:20:05,776:INFO:          setuptools: 65.6.3
2023-06-07 15:20:05,776:INFO:             pycaret: 3.0.2
2023-06-07 15:20:05,776:INFO:             IPython: 8.10.0
2023-06-07 15:20:05,776:INFO:          ipywidgets: 7.6.5
2023-06-07 15:20:05,776:INFO:                tqdm: 4.64.1
2023-06-07 15:20:05,776:INFO:               numpy: 1.23.5
2023-06-07 15:20:05,776:INFO:              pandas: 1.5.3
2023-06-07 15:20:05,776:INFO:              jinja2: 3.1.2
2023-06-07 15:20:05,776:INFO:               scipy: 1.10.0
2023-06-07 15:20:05,776:INFO:              joblib: 1.2.0
2023-06-07 15:20:05,776:INFO:             sklearn: 1.2.1
2023-06-07 15:20:05,776:INFO:                pyod: 1.0.9
2023-06-07 15:20:05,776:INFO:            imblearn: 0.10.1
2023-06-07 15:20:05,777:INFO:   category_encoders: 2.6.1
2023-06-07 15:20:05,777:INFO:            lightgbm: 3.3.5
2023-06-07 15:20:05,777:INFO:               numba: 0.56.4
2023-06-07 15:20:05,777:INFO:            requests: 2.28.1
2023-06-07 15:20:05,777:INFO:          matplotlib: 3.7.0
2023-06-07 15:20:05,777:INFO:          scikitplot: 0.3.7
2023-06-07 15:20:05,777:INFO:         yellowbrick: 1.5
2023-06-07 15:20:05,777:INFO:              plotly: 5.9.0
2023-06-07 15:20:05,777:INFO:             kaleido: 0.2.1
2023-06-07 15:20:05,777:INFO:         statsmodels: 0.13.5
2023-06-07 15:20:05,777:INFO:              sktime: 0.17.0
2023-06-07 15:20:05,777:INFO:               tbats: 1.1.3
2023-06-07 15:20:05,777:INFO:            pmdarima: 2.0.3
2023-06-07 15:20:05,777:INFO:              psutil: 5.9.0
2023-06-07 15:20:05,777:INFO:PyCaret optional dependencies:
2023-06-07 15:20:05,778:INFO:                shap: Not installed
2023-06-07 15:20:05,778:INFO:           interpret: Not installed
2023-06-07 15:20:05,778:INFO:                umap: Not installed
2023-06-07 15:20:05,778:INFO:    pandas_profiling: Not installed
2023-06-07 15:20:05,778:INFO:  explainerdashboard: Not installed
2023-06-07 15:20:05,778:INFO:             autoviz: Not installed
2023-06-07 15:20:05,778:INFO:           fairlearn: Not installed
2023-06-07 15:20:05,778:INFO:             xgboost: Not installed
2023-06-07 15:20:05,778:INFO:            catboost: Not installed
2023-06-07 15:20:05,778:INFO:              kmodes: Not installed
2023-06-07 15:20:05,778:INFO:             mlxtend: Not installed
2023-06-07 15:20:05,778:INFO:       statsforecast: Not installed
2023-06-07 15:20:05,778:INFO:        tune_sklearn: Not installed
2023-06-07 15:20:05,779:INFO:                 ray: Not installed
2023-06-07 15:20:05,779:INFO:            hyperopt: Not installed
2023-06-07 15:20:05,779:INFO:              optuna: Not installed
2023-06-07 15:20:05,779:INFO:               skopt: Not installed
2023-06-07 15:20:05,779:INFO:              mlflow: Not installed
2023-06-07 15:20:05,779:INFO:              gradio: Not installed
2023-06-07 15:20:05,779:INFO:             fastapi: Not installed
2023-06-07 15:20:05,779:INFO:             uvicorn: Not installed
2023-06-07 15:20:05,779:INFO:              m2cgen: Not installed
2023-06-07 15:20:05,779:INFO:           evidently: Not installed
2023-06-07 15:20:05,779:INFO:               fugue: Not installed
2023-06-07 15:20:05,779:INFO:           streamlit: Not installed
2023-06-07 15:20:05,779:INFO:             prophet: Not installed
2023-06-07 15:20:05,779:INFO:None
2023-06-07 15:20:05,780:INFO:Set up data.
2023-06-07 15:20:05,798:INFO:Set up train/test split.
2023-06-07 15:20:05,825:INFO:Set up index.
2023-06-07 15:20:05,826:INFO:Set up folding strategy.
2023-06-07 15:20:05,828:INFO:Assigning column types.
2023-06-07 15:20:05,838:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-07 15:20:05,849:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-07 15:20:05,863:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-07 15:20:05,875:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-07 15:20:06,011:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 15:20:06,084:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-07 15:20:06,094:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 15:20:06,096:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 15:20:06,098:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-07 15:20:06,106:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-07 15:20:06,114:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-07 15:20:06,212:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 15:20:06,295:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-07 15:20:06,296:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 15:20:06,296:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 15:20:06,297:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-06-07 15:20:06,304:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-07 15:20:06,313:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-07 15:20:06,423:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 15:20:06,499:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-07 15:20:06,500:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 15:20:06,500:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 15:20:06,508:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-07 15:20:06,515:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-07 15:20:06,616:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 15:20:06,691:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-07 15:20:06,693:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 15:20:06,694:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 15:20:06,694:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-06-07 15:20:06,712:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-07 15:20:06,804:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 15:20:06,883:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-07 15:20:06,884:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 15:20:06,884:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 15:20:06,902:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-07 15:20:07,000:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 15:20:07,077:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-07 15:20:07,078:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 15:20:07,078:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 15:20:07,078:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-06-07 15:20:07,193:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 15:20:07,269:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-07 15:20:07,269:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 15:20:07,270:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 15:20:07,381:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 15:20:07,463:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-07 15:20:07,464:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 15:20:07,464:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 15:20:07,465:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-07 15:20:07,585:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 15:20:07,661:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 15:20:07,662:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 15:20:07,780:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 15:20:07,860:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 15:20:07,860:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 15:20:07,861:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-06-07 15:20:08,052:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 15:20:08,052:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 15:20:08,248:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 15:20:08,248:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 15:20:08,265:INFO:Preparing preprocessing pipeline...
2023-06-07 15:20:08,266:INFO:Set up simple imputation.
2023-06-07 15:20:08,276:INFO:Set up encoding of categorical features.
2023-06-07 15:20:08,278:INFO:Set up removing outliers.
2023-06-07 15:20:08,637:INFO:Finished creating preprocessing pipeline.
2023-06-07 15:20:08,659:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\CROSSD~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper...
                                    transformer=TargetEncoder(cols=['year',
                                                                    'category'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('remove_outliers',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=RemoveOutliers(method='iforest',
                                                               n_jobs=1,
                                                               random_state=123,
                                                               threshold=0.05)))],
         verbose=False)
2023-06-07 15:20:08,660:INFO:Creating final display dataframe.
2023-06-07 15:20:11,589:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target             value
2                   Target type        Regression
3           Original data shape        (10603, 6)
4        Transformed data shape       (10232, 19)
5   Transformed train set shape        (7051, 19)
6    Transformed test set shape        (3181, 19)
7          Categorical features                 5
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12     Maximum one-hot encoding                25
13              Encoding method              None
14              Remove outliers              True
15           Outliers threshold              0.05
16               Fold Generator             KFold
17                  Fold Number                10
18                     CPU Jobs                -1
19                      Use GPU             False
20               Log Experiment             False
21              Experiment Name  reg-default-name
22                          USI              733e
2023-06-07 15:20:11,850:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 15:20:11,850:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 15:20:12,045:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 15:20:12,046:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 15:20:12,054:INFO:setup() successfully completed in 6.29s...............
2023-06-07 15:23:10,200:INFO:Initializing compare_models()
2023-06-07 15:23:10,201:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D15A5A3DC0>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000001D15A5A3DC0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2023-06-07 15:23:10,201:INFO:Checking exceptions
2023-06-07 15:23:10,204:INFO:Preparing display monitor
2023-06-07 15:23:10,296:INFO:Initializing Linear Regression
2023-06-07 15:23:10,296:INFO:Total runtime is 0.0 minutes
2023-06-07 15:23:10,302:INFO:SubProcess create_model() called ==================================
2023-06-07 15:23:10,304:INFO:Initializing create_model()
2023-06-07 15:23:10,304:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D15A5A3DC0>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D152300BE0>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 15:23:10,304:INFO:Checking exceptions
2023-06-07 15:23:10,305:INFO:Importing libraries
2023-06-07 15:23:10,305:INFO:Copying training dataset
2023-06-07 15:23:10,319:INFO:Defining folds
2023-06-07 15:23:10,319:INFO:Declaring metric variables
2023-06-07 15:23:10,325:INFO:Importing untrained model
2023-06-07 15:23:10,331:INFO:Linear Regression Imported successfully
2023-06-07 15:23:10,342:INFO:Starting cross validation
2023-06-07 15:23:10,387:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 15:23:27,971:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\sklearn\base.py:420: UserWarning: X does not have valid feature names, but IsolationForest was fitted with feature names
  warnings.warn(

2023-06-07 15:23:27,983:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\sklearn\base.py:420: UserWarning: X does not have valid feature names, but IsolationForest was fitted with feature names
  warnings.warn(

2023-06-07 15:23:27,984:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\sklearn\base.py:420: UserWarning: X does not have valid feature names, but IsolationForest was fitted with feature names
  warnings.warn(

2023-06-07 15:23:28,123:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\sklearn\base.py:420: UserWarning: X does not have valid feature names, but IsolationForest was fitted with feature names
  warnings.warn(

2023-06-07 15:23:28,150:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\sklearn\base.py:420: UserWarning: X does not have valid feature names, but IsolationForest was fitted with feature names
  warnings.warn(

2023-06-07 15:23:28,170:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\sklearn\base.py:420: UserWarning: X does not have valid feature names, but IsolationForest was fitted with feature names
  warnings.warn(

2023-06-07 15:23:28,184:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\sklearn\base.py:420: UserWarning: X does not have valid feature names, but IsolationForest was fitted with feature names
  warnings.warn(

2023-06-07 15:23:28,240:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\sklearn\base.py:420: UserWarning: X does not have valid feature names, but IsolationForest was fitted with feature names
  warnings.warn(

2023-06-07 15:23:31,031:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\sklearn\base.py:420: UserWarning: X does not have valid feature names, but IsolationForest was fitted with feature names
  warnings.warn(

2023-06-07 15:23:31,055:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\sklearn\base.py:420: UserWarning: X does not have valid feature names, but IsolationForest was fitted with feature names
  warnings.warn(

2023-06-07 15:23:31,938:INFO:Calculating mean and std
2023-06-07 15:23:31,942:INFO:Creating metrics dataframe
2023-06-07 15:23:31,970:INFO:Uploading results into container
2023-06-07 15:23:31,972:INFO:Uploading model into container now
2023-06-07 15:23:31,972:INFO:_master_model_container: 1
2023-06-07 15:23:31,972:INFO:_display_container: 2
2023-06-07 15:23:31,972:INFO:LinearRegression(copy_X=True, fit_intercept=True, n_jobs=-1, positive=False)
2023-06-07 15:23:31,973:INFO:create_model() successfully completed......................................
2023-06-07 15:23:34,483:INFO:SubProcess create_model() end ==================================
2023-06-07 15:23:34,483:INFO:Creating metrics dataframe
2023-06-07 15:23:34,511:INFO:Initializing Lasso Regression
2023-06-07 15:23:34,511:INFO:Total runtime is 0.40358261664708456 minutes
2023-06-07 15:23:34,517:INFO:SubProcess create_model() called ==================================
2023-06-07 15:23:34,517:INFO:Initializing create_model()
2023-06-07 15:23:34,517:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D15A5A3DC0>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D152300BE0>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 15:23:34,517:INFO:Checking exceptions
2023-06-07 15:23:34,518:INFO:Importing libraries
2023-06-07 15:23:34,518:INFO:Copying training dataset
2023-06-07 15:23:34,527:INFO:Defining folds
2023-06-07 15:23:34,527:INFO:Declaring metric variables
2023-06-07 15:23:34,532:INFO:Importing untrained model
2023-06-07 15:23:34,536:INFO:Lasso Regression Imported successfully
2023-06-07 15:23:34,547:INFO:Starting cross validation
2023-06-07 15:23:34,571:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 15:23:35,242:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.667e+16, tolerance: 1.854e+13
  model = cd_fast.enet_coordinate_descent(

2023-06-07 15:23:35,313:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.278e+16, tolerance: 1.785e+13
  model = cd_fast.enet_coordinate_descent(

2023-06-07 15:23:35,320:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.725e+16, tolerance: 1.953e+13
  model = cd_fast.enet_coordinate_descent(

2023-06-07 15:23:35,324:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.569e+16, tolerance: 1.883e+13
  model = cd_fast.enet_coordinate_descent(

2023-06-07 15:23:35,335:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.534e+16, tolerance: 1.915e+13
  model = cd_fast.enet_coordinate_descent(

2023-06-07 15:23:35,431:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.862e+16, tolerance: 1.936e+13
  model = cd_fast.enet_coordinate_descent(

2023-06-07 15:23:35,543:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.412e+16, tolerance: 1.848e+13
  model = cd_fast.enet_coordinate_descent(

2023-06-07 15:23:35,569:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.452e+16, tolerance: 1.814e+13
  model = cd_fast.enet_coordinate_descent(

2023-06-07 15:23:36,242:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.356e+16, tolerance: 1.781e+13
  model = cd_fast.enet_coordinate_descent(

2023-06-07 15:23:36,246:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.604e+16, tolerance: 1.896e+13
  model = cd_fast.enet_coordinate_descent(

2023-06-07 15:23:36,385:INFO:Calculating mean and std
2023-06-07 15:23:36,387:INFO:Creating metrics dataframe
2023-06-07 15:23:36,425:INFO:Uploading results into container
2023-06-07 15:23:36,427:INFO:Uploading model into container now
2023-06-07 15:23:36,428:INFO:_master_model_container: 2
2023-06-07 15:23:36,428:INFO:_display_container: 2
2023-06-07 15:23:36,428:INFO:Lasso(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=1000, positive=False,
      precompute=False, random_state=123, selection='cyclic', tol=0.0001,
      warm_start=False)
2023-06-07 15:23:36,429:INFO:create_model() successfully completed......................................
2023-06-07 15:23:36,732:INFO:SubProcess create_model() end ==================================
2023-06-07 15:23:36,733:INFO:Creating metrics dataframe
2023-06-07 15:23:36,749:INFO:Initializing Ridge Regression
2023-06-07 15:23:36,749:INFO:Total runtime is 0.44088491598765056 minutes
2023-06-07 15:23:36,753:INFO:SubProcess create_model() called ==================================
2023-06-07 15:23:36,754:INFO:Initializing create_model()
2023-06-07 15:23:36,754:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D15A5A3DC0>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D152300BE0>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 15:23:36,754:INFO:Checking exceptions
2023-06-07 15:23:36,754:INFO:Importing libraries
2023-06-07 15:23:36,755:INFO:Copying training dataset
2023-06-07 15:23:36,764:INFO:Defining folds
2023-06-07 15:23:36,764:INFO:Declaring metric variables
2023-06-07 15:23:36,768:INFO:Importing untrained model
2023-06-07 15:23:36,773:INFO:Ridge Regression Imported successfully
2023-06-07 15:23:36,782:INFO:Starting cross validation
2023-06-07 15:23:36,800:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 15:23:37,216:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.16157e-17): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-06-07 15:23:37,227:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.28125e-17): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-06-07 15:23:37,268:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.13806e-17): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-06-07 15:23:37,296:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.42524e-17): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-06-07 15:23:37,485:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.10906e-17): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-06-07 15:23:37,496:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.19723e-17): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-06-07 15:23:37,527:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.19784e-17): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-06-07 15:23:37,529:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.17563e-17): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-06-07 15:23:38,108:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.15608e-17): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-06-07 15:23:38,230:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.27004e-17): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-06-07 15:23:38,340:INFO:Calculating mean and std
2023-06-07 15:23:38,342:INFO:Creating metrics dataframe
2023-06-07 15:23:38,389:INFO:Uploading results into container
2023-06-07 15:23:38,390:INFO:Uploading model into container now
2023-06-07 15:23:38,391:INFO:_master_model_container: 3
2023-06-07 15:23:38,391:INFO:_display_container: 2
2023-06-07 15:23:38,392:INFO:Ridge(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=None, positive=False,
      random_state=123, solver='auto', tol=0.0001)
2023-06-07 15:23:38,392:INFO:create_model() successfully completed......................................
2023-06-07 15:23:38,686:INFO:SubProcess create_model() end ==================================
2023-06-07 15:23:38,687:INFO:Creating metrics dataframe
2023-06-07 15:23:38,701:INFO:Initializing Elastic Net
2023-06-07 15:23:38,701:INFO:Total runtime is 0.47342063983281457 minutes
2023-06-07 15:23:38,706:INFO:SubProcess create_model() called ==================================
2023-06-07 15:23:38,706:INFO:Initializing create_model()
2023-06-07 15:23:38,706:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D15A5A3DC0>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D152300BE0>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 15:23:38,707:INFO:Checking exceptions
2023-06-07 15:23:38,707:INFO:Importing libraries
2023-06-07 15:23:38,708:INFO:Copying training dataset
2023-06-07 15:23:38,714:INFO:Defining folds
2023-06-07 15:23:38,715:INFO:Declaring metric variables
2023-06-07 15:23:38,719:INFO:Importing untrained model
2023-06-07 15:23:38,726:INFO:Elastic Net Imported successfully
2023-06-07 15:23:38,735:INFO:Starting cross validation
2023-06-07 15:23:38,753:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 15:23:39,956:INFO:Calculating mean and std
2023-06-07 15:23:39,958:INFO:Creating metrics dataframe
2023-06-07 15:23:40,008:INFO:Uploading results into container
2023-06-07 15:23:40,010:INFO:Uploading model into container now
2023-06-07 15:23:40,011:INFO:_master_model_container: 4
2023-06-07 15:23:40,011:INFO:_display_container: 2
2023-06-07 15:23:40,011:INFO:ElasticNet(alpha=1.0, copy_X=True, fit_intercept=True, l1_ratio=0.5,
           max_iter=1000, positive=False, precompute=False, random_state=123,
           selection='cyclic', tol=0.0001, warm_start=False)
2023-06-07 15:23:40,011:INFO:create_model() successfully completed......................................
2023-06-07 15:23:40,340:INFO:SubProcess create_model() end ==================================
2023-06-07 15:23:40,340:INFO:Creating metrics dataframe
2023-06-07 15:23:40,356:INFO:Initializing Least Angle Regression
2023-06-07 15:23:40,356:INFO:Total runtime is 0.5009979724884034 minutes
2023-06-07 15:23:40,363:INFO:SubProcess create_model() called ==================================
2023-06-07 15:23:40,363:INFO:Initializing create_model()
2023-06-07 15:23:40,363:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D15A5A3DC0>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D152300BE0>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 15:23:40,364:INFO:Checking exceptions
2023-06-07 15:23:40,364:INFO:Importing libraries
2023-06-07 15:23:40,364:INFO:Copying training dataset
2023-06-07 15:23:40,370:INFO:Defining folds
2023-06-07 15:23:40,370:INFO:Declaring metric variables
2023-06-07 15:23:40,376:INFO:Importing untrained model
2023-06-07 15:23:40,380:INFO:Least Angle Regression Imported successfully
2023-06-07 15:23:40,388:INFO:Starting cross validation
2023-06-07 15:23:40,406:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 15:23:41,579:INFO:Calculating mean and std
2023-06-07 15:23:41,580:INFO:Creating metrics dataframe
2023-06-07 15:23:41,634:INFO:Uploading results into container
2023-06-07 15:23:41,635:INFO:Uploading model into container now
2023-06-07 15:23:41,636:INFO:_master_model_container: 5
2023-06-07 15:23:41,636:INFO:_display_container: 2
2023-06-07 15:23:41,642:INFO:Lars(copy_X=True, eps=2.220446049250313e-16, fit_intercept=True, fit_path=True,
     jitter=None, n_nonzero_coefs=500, normalize='deprecated',
     precompute='auto', random_state=123, verbose=False)
2023-06-07 15:23:41,642:INFO:create_model() successfully completed......................................
2023-06-07 15:23:41,929:INFO:SubProcess create_model() end ==================================
2023-06-07 15:23:41,929:INFO:Creating metrics dataframe
2023-06-07 15:23:41,945:INFO:Initializing Lasso Least Angle Regression
2023-06-07 15:23:41,945:INFO:Total runtime is 0.5274920264879863 minutes
2023-06-07 15:23:41,951:INFO:SubProcess create_model() called ==================================
2023-06-07 15:23:41,951:INFO:Initializing create_model()
2023-06-07 15:23:41,951:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D15A5A3DC0>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D152300BE0>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 15:23:41,951:INFO:Checking exceptions
2023-06-07 15:23:41,952:INFO:Importing libraries
2023-06-07 15:23:41,952:INFO:Copying training dataset
2023-06-07 15:23:41,960:INFO:Defining folds
2023-06-07 15:23:41,960:INFO:Declaring metric variables
2023-06-07 15:23:41,964:INFO:Importing untrained model
2023-06-07 15:23:41,969:INFO:Lasso Least Angle Regression Imported successfully
2023-06-07 15:23:41,977:INFO:Starting cross validation
2023-06-07 15:23:41,994:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 15:23:43,236:INFO:Calculating mean and std
2023-06-07 15:23:43,237:INFO:Creating metrics dataframe
2023-06-07 15:23:43,299:INFO:Uploading results into container
2023-06-07 15:23:43,300:INFO:Uploading model into container now
2023-06-07 15:23:43,301:INFO:_master_model_container: 6
2023-06-07 15:23:43,301:INFO:_display_container: 2
2023-06-07 15:23:43,301:INFO:LassoLars(alpha=1.0, copy_X=True, eps=2.220446049250313e-16, fit_intercept=True,
          fit_path=True, jitter=None, max_iter=500, normalize='deprecated',
          positive=False, precompute='auto', random_state=123, verbose=False)
2023-06-07 15:23:43,301:INFO:create_model() successfully completed......................................
2023-06-07 15:23:43,637:INFO:SubProcess create_model() end ==================================
2023-06-07 15:23:43,637:INFO:Creating metrics dataframe
2023-06-07 15:23:43,656:INFO:Initializing Orthogonal Matching Pursuit
2023-06-07 15:23:43,656:INFO:Total runtime is 0.5560004512468975 minutes
2023-06-07 15:23:43,665:INFO:SubProcess create_model() called ==================================
2023-06-07 15:23:43,666:INFO:Initializing create_model()
2023-06-07 15:23:43,666:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D15A5A3DC0>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D152300BE0>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 15:23:43,666:INFO:Checking exceptions
2023-06-07 15:23:43,667:INFO:Importing libraries
2023-06-07 15:23:43,667:INFO:Copying training dataset
2023-06-07 15:23:43,680:INFO:Defining folds
2023-06-07 15:23:43,680:INFO:Declaring metric variables
2023-06-07 15:23:43,687:INFO:Importing untrained model
2023-06-07 15:23:43,695:INFO:Orthogonal Matching Pursuit Imported successfully
2023-06-07 15:23:43,709:INFO:Starting cross validation
2023-06-07 15:23:43,736:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 15:23:45,056:INFO:Calculating mean and std
2023-06-07 15:23:45,059:INFO:Creating metrics dataframe
2023-06-07 15:23:45,125:INFO:Uploading results into container
2023-06-07 15:23:45,127:INFO:Uploading model into container now
2023-06-07 15:23:45,128:INFO:_master_model_container: 7
2023-06-07 15:23:45,128:INFO:_display_container: 2
2023-06-07 15:23:45,129:INFO:OrthogonalMatchingPursuit(fit_intercept=True, n_nonzero_coefs=None,
                          normalize='deprecated', precompute='auto', tol=None)
2023-06-07 15:23:45,129:INFO:create_model() successfully completed......................................
2023-06-07 15:23:45,478:INFO:SubProcess create_model() end ==================================
2023-06-07 15:23:45,478:INFO:Creating metrics dataframe
2023-06-07 15:23:45,503:INFO:Initializing Bayesian Ridge
2023-06-07 15:23:45,504:INFO:Total runtime is 0.5868027329444886 minutes
2023-06-07 15:23:45,511:INFO:SubProcess create_model() called ==================================
2023-06-07 15:23:45,512:INFO:Initializing create_model()
2023-06-07 15:23:45,512:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D15A5A3DC0>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D152300BE0>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 15:23:45,512:INFO:Checking exceptions
2023-06-07 15:23:45,513:INFO:Importing libraries
2023-06-07 15:23:45,513:INFO:Copying training dataset
2023-06-07 15:23:45,526:INFO:Defining folds
2023-06-07 15:23:45,527:INFO:Declaring metric variables
2023-06-07 15:23:45,536:INFO:Importing untrained model
2023-06-07 15:23:45,547:INFO:Bayesian Ridge Imported successfully
2023-06-07 15:23:45,565:INFO:Starting cross validation
2023-06-07 15:23:45,587:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 15:23:47,043:INFO:Calculating mean and std
2023-06-07 15:23:47,045:INFO:Creating metrics dataframe
2023-06-07 15:23:47,133:INFO:Uploading results into container
2023-06-07 15:23:47,135:INFO:Uploading model into container now
2023-06-07 15:23:47,136:INFO:_master_model_container: 8
2023-06-07 15:23:47,136:INFO:_display_container: 2
2023-06-07 15:23:47,136:INFO:BayesianRidge(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
              compute_score=False, copy_X=True, fit_intercept=True,
              lambda_1=1e-06, lambda_2=1e-06, lambda_init=None, n_iter=300,
              tol=0.001, verbose=False)
2023-06-07 15:23:47,136:INFO:create_model() successfully completed......................................
2023-06-07 15:23:47,558:INFO:SubProcess create_model() end ==================================
2023-06-07 15:23:47,559:INFO:Creating metrics dataframe
2023-06-07 15:23:47,583:INFO:Initializing Passive Aggressive Regressor
2023-06-07 15:23:47,583:INFO:Total runtime is 0.6214553356170655 minutes
2023-06-07 15:23:47,589:INFO:SubProcess create_model() called ==================================
2023-06-07 15:23:47,589:INFO:Initializing create_model()
2023-06-07 15:23:47,590:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D15A5A3DC0>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D152300BE0>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 15:23:47,590:INFO:Checking exceptions
2023-06-07 15:23:47,591:INFO:Importing libraries
2023-06-07 15:23:47,591:INFO:Copying training dataset
2023-06-07 15:23:47,601:INFO:Defining folds
2023-06-07 15:23:47,602:INFO:Declaring metric variables
2023-06-07 15:23:47,609:INFO:Importing untrained model
2023-06-07 15:23:47,617:INFO:Passive Aggressive Regressor Imported successfully
2023-06-07 15:23:47,633:INFO:Starting cross validation
2023-06-07 15:23:47,661:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 15:23:49,208:INFO:Calculating mean and std
2023-06-07 15:23:49,210:INFO:Creating metrics dataframe
2023-06-07 15:23:49,281:INFO:Uploading results into container
2023-06-07 15:23:49,282:INFO:Uploading model into container now
2023-06-07 15:23:49,283:INFO:_master_model_container: 9
2023-06-07 15:23:49,283:INFO:_display_container: 2
2023-06-07 15:23:49,283:INFO:PassiveAggressiveRegressor(C=1.0, average=False, early_stopping=False,
                           epsilon=0.1, fit_intercept=True,
                           loss='epsilon_insensitive', max_iter=1000,
                           n_iter_no_change=5, random_state=123, shuffle=True,
                           tol=0.001, validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-06-07 15:23:49,284:INFO:create_model() successfully completed......................................
2023-06-07 15:23:49,580:INFO:SubProcess create_model() end ==================================
2023-06-07 15:23:49,581:INFO:Creating metrics dataframe
2023-06-07 15:23:49,598:INFO:Initializing Huber Regressor
2023-06-07 15:23:49,598:INFO:Total runtime is 0.65504443248113 minutes
2023-06-07 15:23:49,603:INFO:SubProcess create_model() called ==================================
2023-06-07 15:23:49,603:INFO:Initializing create_model()
2023-06-07 15:23:49,604:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D15A5A3DC0>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D152300BE0>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 15:23:49,604:INFO:Checking exceptions
2023-06-07 15:23:49,604:INFO:Importing libraries
2023-06-07 15:23:49,604:INFO:Copying training dataset
2023-06-07 15:23:49,613:INFO:Defining folds
2023-06-07 15:23:49,614:INFO:Declaring metric variables
2023-06-07 15:23:49,618:INFO:Importing untrained model
2023-06-07 15:23:49,622:INFO:Huber Regressor Imported successfully
2023-06-07 15:23:49,632:INFO:Starting cross validation
2023-06-07 15:23:49,648:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 15:23:51,070:INFO:Calculating mean and std
2023-06-07 15:23:51,072:INFO:Creating metrics dataframe
2023-06-07 15:23:51,148:INFO:Uploading results into container
2023-06-07 15:23:51,149:INFO:Uploading model into container now
2023-06-07 15:23:51,149:INFO:_master_model_container: 10
2023-06-07 15:23:51,149:INFO:_display_container: 2
2023-06-07 15:23:51,150:INFO:HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False)
2023-06-07 15:23:51,150:INFO:create_model() successfully completed......................................
2023-06-07 15:23:51,436:INFO:SubProcess create_model() end ==================================
2023-06-07 15:23:51,436:INFO:Creating metrics dataframe
2023-06-07 15:23:51,454:INFO:Initializing K Neighbors Regressor
2023-06-07 15:23:51,455:INFO:Total runtime is 0.6859871268272401 minutes
2023-06-07 15:23:51,461:INFO:SubProcess create_model() called ==================================
2023-06-07 15:23:51,461:INFO:Initializing create_model()
2023-06-07 15:23:51,461:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D15A5A3DC0>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D152300BE0>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 15:23:51,462:INFO:Checking exceptions
2023-06-07 15:23:51,462:INFO:Importing libraries
2023-06-07 15:23:51,462:INFO:Copying training dataset
2023-06-07 15:23:51,468:INFO:Defining folds
2023-06-07 15:23:51,468:INFO:Declaring metric variables
2023-06-07 15:23:51,473:INFO:Importing untrained model
2023-06-07 15:23:51,478:INFO:K Neighbors Regressor Imported successfully
2023-06-07 15:23:51,487:INFO:Starting cross validation
2023-06-07 15:23:51,503:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 15:23:53,076:INFO:Calculating mean and std
2023-06-07 15:23:53,077:INFO:Creating metrics dataframe
2023-06-07 15:23:53,153:INFO:Uploading results into container
2023-06-07 15:23:53,154:INFO:Uploading model into container now
2023-06-07 15:23:53,154:INFO:_master_model_container: 11
2023-06-07 15:23:53,154:INFO:_display_container: 2
2023-06-07 15:23:53,155:INFO:KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                    weights='uniform')
2023-06-07 15:23:53,155:INFO:create_model() successfully completed......................................
2023-06-07 15:23:53,428:INFO:SubProcess create_model() end ==================================
2023-06-07 15:23:53,428:INFO:Creating metrics dataframe
2023-06-07 15:23:53,450:INFO:Initializing Decision Tree Regressor
2023-06-07 15:23:53,450:INFO:Total runtime is 0.719239632288615 minutes
2023-06-07 15:23:53,456:INFO:SubProcess create_model() called ==================================
2023-06-07 15:23:53,456:INFO:Initializing create_model()
2023-06-07 15:23:53,457:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D15A5A3DC0>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D152300BE0>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 15:23:53,457:INFO:Checking exceptions
2023-06-07 15:23:53,457:INFO:Importing libraries
2023-06-07 15:23:53,458:INFO:Copying training dataset
2023-06-07 15:23:53,465:INFO:Defining folds
2023-06-07 15:23:53,465:INFO:Declaring metric variables
2023-06-07 15:23:53,470:INFO:Importing untrained model
2023-06-07 15:23:53,475:INFO:Decision Tree Regressor Imported successfully
2023-06-07 15:23:53,484:INFO:Starting cross validation
2023-06-07 15:23:53,499:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 15:23:54,913:INFO:Calculating mean and std
2023-06-07 15:23:54,915:INFO:Creating metrics dataframe
2023-06-07 15:23:54,998:INFO:Uploading results into container
2023-06-07 15:23:54,999:INFO:Uploading model into container now
2023-06-07 15:23:55,000:INFO:_master_model_container: 12
2023-06-07 15:23:55,000:INFO:_display_container: 2
2023-06-07 15:23:55,000:INFO:DecisionTreeRegressor(ccp_alpha=0.0, criterion='squared_error', max_depth=None,
                      max_features=None, max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_samples_leaf=1,
                      min_samples_split=2, min_weight_fraction_leaf=0.0,
                      random_state=123, splitter='best')
2023-06-07 15:23:55,000:INFO:create_model() successfully completed......................................
2023-06-07 15:23:55,274:INFO:SubProcess create_model() end ==================================
2023-06-07 15:23:55,275:INFO:Creating metrics dataframe
2023-06-07 15:23:55,293:INFO:Initializing Random Forest Regressor
2023-06-07 15:23:55,293:INFO:Total runtime is 0.7499485770861308 minutes
2023-06-07 15:23:55,299:INFO:SubProcess create_model() called ==================================
2023-06-07 15:23:55,300:INFO:Initializing create_model()
2023-06-07 15:23:55,300:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D15A5A3DC0>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D152300BE0>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 15:23:55,300:INFO:Checking exceptions
2023-06-07 15:23:55,300:INFO:Importing libraries
2023-06-07 15:23:55,300:INFO:Copying training dataset
2023-06-07 15:23:55,306:INFO:Defining folds
2023-06-07 15:23:55,306:INFO:Declaring metric variables
2023-06-07 15:23:55,313:INFO:Importing untrained model
2023-06-07 15:23:55,317:INFO:Random Forest Regressor Imported successfully
2023-06-07 15:23:55,326:INFO:Starting cross validation
2023-06-07 15:23:55,342:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 15:23:58,179:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.57s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-07 15:23:58,403:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.89s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-07 15:24:01,062:INFO:Calculating mean and std
2023-06-07 15:24:01,063:INFO:Creating metrics dataframe
2023-06-07 15:24:01,153:INFO:Uploading results into container
2023-06-07 15:24:01,154:INFO:Uploading model into container now
2023-06-07 15:24:01,154:INFO:_master_model_container: 13
2023-06-07 15:24:01,154:INFO:_display_container: 2
2023-06-07 15:24:01,155:INFO:RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='squared_error',
                      max_depth=None, max_features=1.0, max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                      oob_score=False, random_state=123, verbose=0,
                      warm_start=False)
2023-06-07 15:24:01,155:INFO:create_model() successfully completed......................................
2023-06-07 15:24:01,431:INFO:SubProcess create_model() end ==================================
2023-06-07 15:24:01,431:INFO:Creating metrics dataframe
2023-06-07 15:24:01,450:INFO:Initializing Extra Trees Regressor
2023-06-07 15:24:01,450:INFO:Total runtime is 0.8525767405827841 minutes
2023-06-07 15:24:01,454:INFO:SubProcess create_model() called ==================================
2023-06-07 15:24:01,455:INFO:Initializing create_model()
2023-06-07 15:24:01,455:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D15A5A3DC0>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D152300BE0>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 15:24:01,455:INFO:Checking exceptions
2023-06-07 15:24:01,455:INFO:Importing libraries
2023-06-07 15:24:01,455:INFO:Copying training dataset
2023-06-07 15:24:01,463:INFO:Defining folds
2023-06-07 15:24:01,463:INFO:Declaring metric variables
2023-06-07 15:24:01,467:INFO:Importing untrained model
2023-06-07 15:24:01,472:INFO:Extra Trees Regressor Imported successfully
2023-06-07 15:24:01,482:INFO:Starting cross validation
2023-06-07 15:24:01,498:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 15:24:04,185:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.55s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-07 15:24:07,221:INFO:Calculating mean and std
2023-06-07 15:24:07,222:INFO:Creating metrics dataframe
2023-06-07 15:24:07,328:INFO:Uploading results into container
2023-06-07 15:24:07,329:INFO:Uploading model into container now
2023-06-07 15:24:07,330:INFO:_master_model_container: 14
2023-06-07 15:24:07,330:INFO:_display_container: 2
2023-06-07 15:24:07,331:INFO:ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='squared_error',
                    max_depth=None, max_features=1.0, max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_samples_leaf=1, min_samples_split=2,
                    min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                    oob_score=False, random_state=123, verbose=0,
                    warm_start=False)
2023-06-07 15:24:07,331:INFO:create_model() successfully completed......................................
2023-06-07 15:24:07,687:INFO:SubProcess create_model() end ==================================
2023-06-07 15:24:07,688:INFO:Creating metrics dataframe
2023-06-07 15:24:07,709:INFO:Initializing AdaBoost Regressor
2023-06-07 15:24:07,709:INFO:Total runtime is 0.9568914810816448 minutes
2023-06-07 15:24:07,714:INFO:SubProcess create_model() called ==================================
2023-06-07 15:24:07,715:INFO:Initializing create_model()
2023-06-07 15:24:07,715:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D15A5A3DC0>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D152300BE0>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 15:24:07,715:INFO:Checking exceptions
2023-06-07 15:24:07,715:INFO:Importing libraries
2023-06-07 15:24:07,716:INFO:Copying training dataset
2023-06-07 15:24:07,723:INFO:Defining folds
2023-06-07 15:24:07,723:INFO:Declaring metric variables
2023-06-07 15:24:07,730:INFO:Importing untrained model
2023-06-07 15:24:07,734:INFO:AdaBoost Regressor Imported successfully
2023-06-07 15:24:07,744:INFO:Starting cross validation
2023-06-07 15:24:07,761:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 15:24:10,345:INFO:Calculating mean and std
2023-06-07 15:24:10,347:INFO:Creating metrics dataframe
2023-06-07 15:24:10,471:INFO:Uploading results into container
2023-06-07 15:24:10,472:INFO:Uploading model into container now
2023-06-07 15:24:10,473:INFO:_master_model_container: 15
2023-06-07 15:24:10,473:INFO:_display_container: 2
2023-06-07 15:24:10,474:INFO:AdaBoostRegressor(base_estimator='deprecated', estimator=None,
                  learning_rate=1.0, loss='linear', n_estimators=50,
                  random_state=123)
2023-06-07 15:24:10,474:INFO:create_model() successfully completed......................................
2023-06-07 15:24:10,848:INFO:SubProcess create_model() end ==================================
2023-06-07 15:24:10,848:INFO:Creating metrics dataframe
2023-06-07 15:24:10,870:INFO:Initializing Gradient Boosting Regressor
2023-06-07 15:24:10,870:INFO:Total runtime is 1.0095654129981995 minutes
2023-06-07 15:24:10,877:INFO:SubProcess create_model() called ==================================
2023-06-07 15:24:10,877:INFO:Initializing create_model()
2023-06-07 15:24:10,877:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D15A5A3DC0>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D152300BE0>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 15:24:10,878:INFO:Checking exceptions
2023-06-07 15:24:10,878:INFO:Importing libraries
2023-06-07 15:24:10,878:INFO:Copying training dataset
2023-06-07 15:24:10,885:INFO:Defining folds
2023-06-07 15:24:10,885:INFO:Declaring metric variables
2023-06-07 15:24:10,890:INFO:Importing untrained model
2023-06-07 15:24:10,896:INFO:Gradient Boosting Regressor Imported successfully
2023-06-07 15:24:10,904:INFO:Starting cross validation
2023-06-07 15:24:10,920:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 15:24:13,811:INFO:Calculating mean and std
2023-06-07 15:24:13,813:INFO:Creating metrics dataframe
2023-06-07 15:24:13,941:INFO:Uploading results into container
2023-06-07 15:24:13,943:INFO:Uploading model into container now
2023-06-07 15:24:13,943:INFO:_master_model_container: 16
2023-06-07 15:24:13,943:INFO:_display_container: 2
2023-06-07 15:24:13,945:INFO:GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.1, loss='squared_error',
                          max_depth=3, max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_samples_leaf=1,
                          min_samples_split=2, min_weight_fraction_leaf=0.0,
                          n_estimators=100, n_iter_no_change=None,
                          random_state=123, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False)
2023-06-07 15:24:13,945:INFO:create_model() successfully completed......................................
2023-06-07 15:24:14,221:INFO:SubProcess create_model() end ==================================
2023-06-07 15:24:14,221:INFO:Creating metrics dataframe
2023-06-07 15:24:14,243:INFO:Initializing Light Gradient Boosting Machine
2023-06-07 15:24:14,244:INFO:Total runtime is 1.0658016602198284 minutes
2023-06-07 15:24:14,250:INFO:SubProcess create_model() called ==================================
2023-06-07 15:24:14,250:INFO:Initializing create_model()
2023-06-07 15:24:14,250:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D15A5A3DC0>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D152300BE0>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 15:24:14,251:INFO:Checking exceptions
2023-06-07 15:24:14,251:INFO:Importing libraries
2023-06-07 15:24:14,251:INFO:Copying training dataset
2023-06-07 15:24:14,260:INFO:Defining folds
2023-06-07 15:24:14,261:INFO:Declaring metric variables
2023-06-07 15:24:14,265:INFO:Importing untrained model
2023-06-07 15:24:14,270:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-07 15:24:14,279:INFO:Starting cross validation
2023-06-07 15:24:14,295:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 15:24:18,886:INFO:Calculating mean and std
2023-06-07 15:24:18,888:INFO:Creating metrics dataframe
2023-06-07 15:24:19,023:INFO:Uploading results into container
2023-06-07 15:24:19,025:INFO:Uploading model into container now
2023-06-07 15:24:19,026:INFO:_master_model_container: 17
2023-06-07 15:24:19,026:INFO:_display_container: 2
2023-06-07 15:24:19,026:INFO:LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              importance_type='split', learning_rate=0.1, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
              n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
              random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
              subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-06-07 15:24:19,027:INFO:create_model() successfully completed......................................
2023-06-07 15:24:19,304:INFO:SubProcess create_model() end ==================================
2023-06-07 15:24:19,305:INFO:Creating metrics dataframe
2023-06-07 15:24:19,332:INFO:Initializing Dummy Regressor
2023-06-07 15:24:19,332:INFO:Total runtime is 1.1506036361058554 minutes
2023-06-07 15:24:19,337:INFO:SubProcess create_model() called ==================================
2023-06-07 15:24:19,338:INFO:Initializing create_model()
2023-06-07 15:24:19,338:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D15A5A3DC0>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D152300BE0>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 15:24:19,338:INFO:Checking exceptions
2023-06-07 15:24:19,338:INFO:Importing libraries
2023-06-07 15:24:19,338:INFO:Copying training dataset
2023-06-07 15:24:19,346:INFO:Defining folds
2023-06-07 15:24:19,347:INFO:Declaring metric variables
2023-06-07 15:24:19,351:INFO:Importing untrained model
2023-06-07 15:24:19,355:INFO:Dummy Regressor Imported successfully
2023-06-07 15:24:19,365:INFO:Starting cross validation
2023-06-07 15:24:19,383:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 15:24:21,291:INFO:Calculating mean and std
2023-06-07 15:24:21,293:INFO:Creating metrics dataframe
2023-06-07 15:24:21,430:INFO:Uploading results into container
2023-06-07 15:24:21,431:INFO:Uploading model into container now
2023-06-07 15:24:21,431:INFO:_master_model_container: 18
2023-06-07 15:24:21,431:INFO:_display_container: 2
2023-06-07 15:24:21,432:INFO:DummyRegressor(constant=None, quantile=None, strategy='mean')
2023-06-07 15:24:21,432:INFO:create_model() successfully completed......................................
2023-06-07 15:24:21,708:INFO:SubProcess create_model() end ==================================
2023-06-07 15:24:21,708:INFO:Creating metrics dataframe
2023-06-07 15:24:21,746:INFO:Initializing create_model()
2023-06-07 15:24:21,747:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D15A5A3DC0>, estimator=DecisionTreeRegressor(ccp_alpha=0.0, criterion='squared_error', max_depth=None,
                      max_features=None, max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_samples_leaf=1,
                      min_samples_split=2, min_weight_fraction_leaf=0.0,
                      random_state=123, splitter='best'), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-07 15:24:21,747:INFO:Checking exceptions
2023-06-07 15:24:21,753:INFO:Importing libraries
2023-06-07 15:24:21,753:INFO:Copying training dataset
2023-06-07 15:24:21,760:INFO:Defining folds
2023-06-07 15:24:21,760:INFO:Declaring metric variables
2023-06-07 15:24:21,761:INFO:Importing untrained model
2023-06-07 15:24:21,761:INFO:Declaring custom model
2023-06-07 15:24:21,761:INFO:Decision Tree Regressor Imported successfully
2023-06-07 15:24:21,777:INFO:Cross validation set to False
2023-06-07 15:24:21,777:INFO:Fitting Model
2023-06-07 15:24:22,199:INFO:DecisionTreeRegressor(ccp_alpha=0.0, criterion='squared_error', max_depth=None,
                      max_features=None, max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_samples_leaf=1,
                      min_samples_split=2, min_weight_fraction_leaf=0.0,
                      random_state=123, splitter='best')
2023-06-07 15:24:22,200:INFO:create_model() successfully completed......................................
2023-06-07 15:24:22,527:INFO:_master_model_container: 18
2023-06-07 15:24:22,528:INFO:_display_container: 2
2023-06-07 15:24:22,528:INFO:DecisionTreeRegressor(ccp_alpha=0.0, criterion='squared_error', max_depth=None,
                      max_features=None, max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_samples_leaf=1,
                      min_samples_split=2, min_weight_fraction_leaf=0.0,
                      random_state=123, splitter='best')
2023-06-07 15:24:22,528:INFO:compare_models() successfully completed......................................
2023-06-07 15:47:10,625:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-07 15:47:10,625:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-07 15:47:10,625:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-07 15:47:10,625:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-07 15:47:12,207:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-07 15:53:54,172:INFO:PyCaret RegressionExperiment
2023-06-07 15:53:54,173:INFO:Logging name: reg-default-name
2023-06-07 15:53:54,173:INFO:ML Usecase: MLUsecase.REGRESSION
2023-06-07 15:53:54,173:INFO:version 3.0.2
2023-06-07 15:53:54,173:INFO:Initializing setup()
2023-06-07 15:53:54,173:INFO:self.USI: 9da3
2023-06-07 15:53:54,173:INFO:self._variable_keys: {'y_train', 'exp_name_log', 'X_test', 'transform_target_param', 'html_param', 'logging_param', '_available_plots', 'fold_shuffle_param', 'y', 'target_param', 'X', 'n_jobs_param', 'fold_generator', 'USI', 'seed', 'y_test', 'idx', 'memory', '_ml_usecase', 'gpu_n_jobs_param', 'pipeline', 'log_plots_param', 'data', 'X_train', 'exp_id', 'fold_groups_param', 'gpu_param'}
2023-06-07 15:53:54,173:INFO:Checking environment
2023-06-07 15:53:54,174:INFO:python_version: 3.10.9
2023-06-07 15:53:54,174:INFO:python_build: ('main', 'Mar  1 2023 18:18:15')
2023-06-07 15:53:54,174:INFO:machine: AMD64
2023-06-07 15:53:54,175:INFO:platform: Windows-10-10.0.19041-SP0
2023-06-07 15:53:54,176:INFO:Memory: svmem(total=6378106880, available=945020928, percent=85.2, used=5433085952, free=945020928)
2023-06-07 15:53:54,177:INFO:Physical Core: 4
2023-06-07 15:53:54,177:INFO:Logical Core: 8
2023-06-07 15:53:54,177:INFO:Checking libraries
2023-06-07 15:53:54,177:INFO:System:
2023-06-07 15:53:54,177:INFO:    python: 3.10.9 | packaged by Anaconda, Inc. | (main, Mar  1 2023, 18:18:15) [MSC v.1916 64 bit (AMD64)]
2023-06-07 15:53:54,177:INFO:executable: c:\Users\Crossddelta\anaconda3\python.exe
2023-06-07 15:53:54,177:INFO:   machine: Windows-10-10.0.19041-SP0
2023-06-07 15:53:54,177:INFO:PyCaret required dependencies:
2023-06-07 15:53:54,179:INFO:                 pip: 22.3.1
2023-06-07 15:53:54,179:INFO:          setuptools: 65.6.3
2023-06-07 15:53:54,179:INFO:             pycaret: 3.0.2
2023-06-07 15:53:54,179:INFO:             IPython: 8.10.0
2023-06-07 15:53:54,179:INFO:          ipywidgets: 7.6.5
2023-06-07 15:53:54,179:INFO:                tqdm: 4.64.1
2023-06-07 15:53:54,179:INFO:               numpy: 1.23.5
2023-06-07 15:53:54,179:INFO:              pandas: 1.5.3
2023-06-07 15:53:54,179:INFO:              jinja2: 3.1.2
2023-06-07 15:53:54,179:INFO:               scipy: 1.10.0
2023-06-07 15:53:54,179:INFO:              joblib: 1.2.0
2023-06-07 15:53:54,179:INFO:             sklearn: 1.2.1
2023-06-07 15:53:54,179:INFO:                pyod: 1.0.9
2023-06-07 15:53:54,180:INFO:            imblearn: 0.10.1
2023-06-07 15:53:54,180:INFO:   category_encoders: 2.6.1
2023-06-07 15:53:54,180:INFO:            lightgbm: 3.3.5
2023-06-07 15:53:54,180:INFO:               numba: 0.56.4
2023-06-07 15:53:54,180:INFO:            requests: 2.28.1
2023-06-07 15:53:54,180:INFO:          matplotlib: 3.7.0
2023-06-07 15:53:54,180:INFO:          scikitplot: 0.3.7
2023-06-07 15:53:54,180:INFO:         yellowbrick: 1.5
2023-06-07 15:53:54,180:INFO:              plotly: 5.9.0
2023-06-07 15:53:54,180:INFO:             kaleido: 0.2.1
2023-06-07 15:53:54,180:INFO:         statsmodels: 0.13.5
2023-06-07 15:53:54,180:INFO:              sktime: 0.17.0
2023-06-07 15:53:54,180:INFO:               tbats: 1.1.3
2023-06-07 15:53:54,180:INFO:            pmdarima: 2.0.3
2023-06-07 15:53:54,180:INFO:              psutil: 5.9.0
2023-06-07 15:53:54,181:INFO:PyCaret optional dependencies:
2023-06-07 15:53:54,207:INFO:                shap: Not installed
2023-06-07 15:53:54,207:INFO:           interpret: Not installed
2023-06-07 15:53:54,207:INFO:                umap: Not installed
2023-06-07 15:53:54,207:INFO:    pandas_profiling: Not installed
2023-06-07 15:53:54,207:INFO:  explainerdashboard: Not installed
2023-06-07 15:53:54,207:INFO:             autoviz: Not installed
2023-06-07 15:53:54,207:INFO:           fairlearn: Not installed
2023-06-07 15:53:54,207:INFO:             xgboost: Not installed
2023-06-07 15:53:54,207:INFO:            catboost: Not installed
2023-06-07 15:53:54,207:INFO:              kmodes: Not installed
2023-06-07 15:53:54,207:INFO:             mlxtend: Not installed
2023-06-07 15:53:54,208:INFO:       statsforecast: Not installed
2023-06-07 15:53:54,208:INFO:        tune_sklearn: Not installed
2023-06-07 15:53:54,208:INFO:                 ray: Not installed
2023-06-07 15:53:54,208:INFO:            hyperopt: Not installed
2023-06-07 15:53:54,208:INFO:              optuna: Not installed
2023-06-07 15:53:54,208:INFO:               skopt: Not installed
2023-06-07 15:53:54,208:INFO:              mlflow: Not installed
2023-06-07 15:53:54,208:INFO:              gradio: Not installed
2023-06-07 15:53:54,208:INFO:             fastapi: Not installed
2023-06-07 15:53:54,208:INFO:             uvicorn: Not installed
2023-06-07 15:53:54,208:INFO:              m2cgen: Not installed
2023-06-07 15:53:54,208:INFO:           evidently: Not installed
2023-06-07 15:53:54,208:INFO:               fugue: Not installed
2023-06-07 15:53:54,208:INFO:           streamlit: Not installed
2023-06-07 15:53:54,208:INFO:             prophet: Not installed
2023-06-07 15:53:54,209:INFO:None
2023-06-07 15:53:54,209:INFO:Set up data.
2023-06-07 15:54:00,154:INFO:Set up train/test split.
2023-06-07 15:54:02,817:INFO:Set up index.
2023-06-07 15:54:03,015:INFO:Set up folding strategy.
2023-06-07 15:54:03,017:INFO:Assigning column types.
2023-06-07 15:54:04,378:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-07 15:54:04,389:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-07 15:54:04,405:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-07 15:54:04,414:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-07 15:54:05,963:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 15:54:06,042:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-07 15:54:06,053:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 15:54:06,803:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 15:54:06,804:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-07 15:54:06,811:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-07 15:54:06,822:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-07 15:54:08,288:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 15:54:08,365:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-07 15:54:08,366:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 15:54:08,368:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 15:54:08,368:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-06-07 15:54:08,377:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-07 15:54:08,385:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-07 15:54:09,897:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 15:54:09,972:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-07 15:54:09,973:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 15:54:09,974:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 15:54:09,982:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-07 15:54:09,990:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-07 15:54:11,518:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 15:54:11,594:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-07 15:54:11,595:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 15:54:11,595:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 15:54:11,596:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-06-07 15:54:11,611:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-07 15:54:13,078:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 15:54:13,156:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-07 15:54:13,157:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 15:54:13,158:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 15:54:13,175:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-07 15:54:14,693:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 15:54:14,773:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-07 15:54:14,774:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 15:54:14,774:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 15:54:14,775:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-06-07 15:54:16,282:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 15:54:16,362:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-07 15:54:16,362:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 15:54:16,363:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 15:54:17,895:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 15:54:17,967:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-07 15:54:17,969:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 15:54:17,969:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 15:54:17,969:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-07 15:54:19,485:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 15:54:19,564:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 15:54:19,564:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 15:54:21,047:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 15:54:21,125:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 15:54:21,125:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 15:54:21,125:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-06-07 15:54:22,717:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 15:54:22,717:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 15:54:24,251:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 15:54:24,252:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 15:54:24,263:INFO:Preparing preprocessing pipeline...
2023-06-07 15:54:24,263:INFO:Set up date feature engineering.
2023-06-07 15:54:24,263:INFO:Set up simple imputation.
2023-06-07 15:54:25,026:INFO:Set up encoding of categorical features.
2023-06-07 15:54:25,049:INFO:Set up removing outliers.
2023-06-07 15:57:13,226:INFO:PyCaret RegressionExperiment
2023-06-07 15:57:13,227:INFO:Logging name: reg-default-name
2023-06-07 15:57:13,227:INFO:ML Usecase: MLUsecase.REGRESSION
2023-06-07 15:57:13,227:INFO:version 3.0.2
2023-06-07 15:57:13,227:INFO:Initializing setup()
2023-06-07 15:57:13,227:INFO:self.USI: e6fa
2023-06-07 15:57:13,227:INFO:self._variable_keys: {'y_train', 'exp_name_log', 'X_test', 'transform_target_param', 'html_param', 'logging_param', '_available_plots', 'fold_shuffle_param', 'y', 'target_param', 'X', 'n_jobs_param', 'fold_generator', 'USI', 'seed', 'y_test', 'idx', 'memory', '_ml_usecase', 'gpu_n_jobs_param', 'pipeline', 'log_plots_param', 'data', 'X_train', 'exp_id', 'fold_groups_param', 'gpu_param'}
2023-06-07 15:57:13,227:INFO:Checking environment
2023-06-07 15:57:13,227:INFO:python_version: 3.10.9
2023-06-07 15:57:13,227:INFO:python_build: ('main', 'Mar  1 2023 18:18:15')
2023-06-07 15:57:13,227:INFO:machine: AMD64
2023-06-07 15:57:13,227:INFO:platform: Windows-10-10.0.19041-SP0
2023-06-07 15:57:13,228:INFO:Memory: svmem(total=6378106880, available=1068425216, percent=83.2, used=5309681664, free=1068425216)
2023-06-07 15:57:13,228:INFO:Physical Core: 4
2023-06-07 15:57:13,228:INFO:Logical Core: 8
2023-06-07 15:57:13,228:INFO:Checking libraries
2023-06-07 15:57:13,228:INFO:System:
2023-06-07 15:57:13,228:INFO:    python: 3.10.9 | packaged by Anaconda, Inc. | (main, Mar  1 2023, 18:18:15) [MSC v.1916 64 bit (AMD64)]
2023-06-07 15:57:13,228:INFO:executable: c:\Users\Crossddelta\anaconda3\python.exe
2023-06-07 15:57:13,228:INFO:   machine: Windows-10-10.0.19041-SP0
2023-06-07 15:57:13,229:INFO:PyCaret required dependencies:
2023-06-07 15:57:13,229:INFO:                 pip: 22.3.1
2023-06-07 15:57:13,229:INFO:          setuptools: 65.6.3
2023-06-07 15:57:13,229:INFO:             pycaret: 3.0.2
2023-06-07 15:57:13,229:INFO:             IPython: 8.10.0
2023-06-07 15:57:13,229:INFO:          ipywidgets: 7.6.5
2023-06-07 15:57:13,229:INFO:                tqdm: 4.64.1
2023-06-07 15:57:13,229:INFO:               numpy: 1.23.5
2023-06-07 15:57:13,229:INFO:              pandas: 1.5.3
2023-06-07 15:57:13,229:INFO:              jinja2: 3.1.2
2023-06-07 15:57:13,229:INFO:               scipy: 1.10.0
2023-06-07 15:57:13,229:INFO:              joblib: 1.2.0
2023-06-07 15:57:13,229:INFO:             sklearn: 1.2.1
2023-06-07 15:57:13,229:INFO:                pyod: 1.0.9
2023-06-07 15:57:13,230:INFO:            imblearn: 0.10.1
2023-06-07 15:57:13,230:INFO:   category_encoders: 2.6.1
2023-06-07 15:57:13,230:INFO:            lightgbm: 3.3.5
2023-06-07 15:57:13,230:INFO:               numba: 0.56.4
2023-06-07 15:57:13,230:INFO:            requests: 2.28.1
2023-06-07 15:57:13,230:INFO:          matplotlib: 3.7.0
2023-06-07 15:57:13,230:INFO:          scikitplot: 0.3.7
2023-06-07 15:57:13,230:INFO:         yellowbrick: 1.5
2023-06-07 15:57:13,230:INFO:              plotly: 5.9.0
2023-06-07 15:57:13,230:INFO:             kaleido: 0.2.1
2023-06-07 15:57:13,230:INFO:         statsmodels: 0.13.5
2023-06-07 15:57:13,230:INFO:              sktime: 0.17.0
2023-06-07 15:57:13,230:INFO:               tbats: 1.1.3
2023-06-07 15:57:13,230:INFO:            pmdarima: 2.0.3
2023-06-07 15:57:13,230:INFO:              psutil: 5.9.0
2023-06-07 15:57:13,230:INFO:PyCaret optional dependencies:
2023-06-07 15:57:13,231:INFO:                shap: Not installed
2023-06-07 15:57:13,231:INFO:           interpret: Not installed
2023-06-07 15:57:13,231:INFO:                umap: Not installed
2023-06-07 15:57:13,231:INFO:    pandas_profiling: Not installed
2023-06-07 15:57:13,231:INFO:  explainerdashboard: Not installed
2023-06-07 15:57:13,231:INFO:             autoviz: Not installed
2023-06-07 15:57:13,231:INFO:           fairlearn: Not installed
2023-06-07 15:57:13,231:INFO:             xgboost: Not installed
2023-06-07 15:57:13,231:INFO:            catboost: Not installed
2023-06-07 15:57:13,231:INFO:              kmodes: Not installed
2023-06-07 15:57:13,231:INFO:             mlxtend: Not installed
2023-06-07 15:57:13,231:INFO:       statsforecast: Not installed
2023-06-07 15:57:13,231:INFO:        tune_sklearn: Not installed
2023-06-07 15:57:13,231:INFO:                 ray: Not installed
2023-06-07 15:57:13,231:INFO:            hyperopt: Not installed
2023-06-07 15:57:13,232:INFO:              optuna: Not installed
2023-06-07 15:57:13,232:INFO:               skopt: Not installed
2023-06-07 15:57:13,232:INFO:              mlflow: Not installed
2023-06-07 15:57:13,232:INFO:              gradio: Not installed
2023-06-07 15:57:13,232:INFO:             fastapi: Not installed
2023-06-07 15:57:13,232:INFO:             uvicorn: Not installed
2023-06-07 15:57:13,232:INFO:              m2cgen: Not installed
2023-06-07 15:57:13,232:INFO:           evidently: Not installed
2023-06-07 15:57:13,232:INFO:               fugue: Not installed
2023-06-07 15:57:13,232:INFO:           streamlit: Not installed
2023-06-07 15:57:13,232:INFO:             prophet: Not installed
2023-06-07 15:57:13,232:INFO:None
2023-06-07 15:57:13,232:INFO:Set up data.
2023-06-07 15:57:18,595:INFO:Set up train/test split.
2023-06-07 15:57:21,175:INFO:Set up index.
2023-06-07 15:57:21,352:INFO:Set up folding strategy.
2023-06-07 15:57:21,353:INFO:Assigning column types.
2023-06-07 15:57:22,537:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-07 15:57:22,543:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-07 15:57:22,555:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-07 15:57:22,563:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-07 15:57:23,906:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 15:57:23,977:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-07 15:57:23,984:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 15:57:23,986:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 15:57:23,988:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-07 15:57:23,995:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-07 15:57:24,004:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-07 15:57:25,324:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 15:57:25,396:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-07 15:57:25,397:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 15:57:25,397:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 15:57:25,398:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-06-07 15:57:25,405:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-07 15:57:25,412:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-07 15:57:26,647:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 15:57:26,717:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-07 15:57:26,718:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 15:57:26,719:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 15:57:26,726:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-07 15:57:26,734:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-07 15:57:28,038:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 15:57:28,110:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-07 15:57:28,111:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 15:57:28,112:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 15:57:28,112:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-06-07 15:57:28,126:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-07 15:57:29,396:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 15:57:29,465:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-07 15:57:29,466:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 15:57:29,466:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 15:57:29,481:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-07 15:57:30,800:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 15:57:30,870:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-07 15:57:30,871:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 15:57:30,871:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 15:57:30,872:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-06-07 15:57:32,163:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 15:57:32,233:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-07 15:57:32,234:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 15:57:32,235:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 15:57:33,532:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 15:57:33,608:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-07 15:57:33,608:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 15:57:33,609:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 15:57:33,610:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-07 15:57:34,914:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 15:57:34,983:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 15:57:34,984:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 15:57:36,246:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 15:57:36,323:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 15:57:36,323:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 15:57:36,323:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-06-07 15:57:37,663:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 15:57:37,663:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 15:57:39,012:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 15:57:39,013:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 15:57:39,026:INFO:Preparing preprocessing pipeline...
2023-06-07 15:57:39,026:INFO:Set up date feature engineering.
2023-06-07 15:57:39,027:INFO:Set up simple imputation.
2023-06-07 15:57:39,602:INFO:Set up encoding of categorical features.
2023-06-07 15:57:39,621:INFO:Set up removing outliers.
2023-06-07 16:07:55,335:INFO:PyCaret RegressionExperiment
2023-06-07 16:07:55,336:INFO:Logging name: reg-default-name
2023-06-07 16:07:55,336:INFO:ML Usecase: MLUsecase.REGRESSION
2023-06-07 16:07:55,336:INFO:version 3.0.2
2023-06-07 16:07:55,336:INFO:Initializing setup()
2023-06-07 16:07:55,337:INFO:self.USI: dc05
2023-06-07 16:07:55,337:INFO:self._variable_keys: {'y_train', 'exp_name_log', 'X_test', 'transform_target_param', 'html_param', 'logging_param', '_available_plots', 'fold_shuffle_param', 'y', 'target_param', 'X', 'n_jobs_param', 'fold_generator', 'USI', 'seed', 'y_test', 'idx', 'memory', '_ml_usecase', 'gpu_n_jobs_param', 'pipeline', 'log_plots_param', 'data', 'X_train', 'exp_id', 'fold_groups_param', 'gpu_param'}
2023-06-07 16:07:55,337:INFO:Checking environment
2023-06-07 16:07:55,338:INFO:python_version: 3.10.9
2023-06-07 16:07:55,338:INFO:python_build: ('main', 'Mar  1 2023 18:18:15')
2023-06-07 16:07:55,338:INFO:machine: AMD64
2023-06-07 16:07:55,339:INFO:platform: Windows-10-10.0.19041-SP0
2023-06-07 16:07:55,341:INFO:Memory: svmem(total=6378106880, available=1307521024, percent=79.5, used=5070585856, free=1307521024)
2023-06-07 16:07:55,342:INFO:Physical Core: 4
2023-06-07 16:07:55,342:INFO:Logical Core: 8
2023-06-07 16:07:55,342:INFO:Checking libraries
2023-06-07 16:07:55,342:INFO:System:
2023-06-07 16:07:55,342:INFO:    python: 3.10.9 | packaged by Anaconda, Inc. | (main, Mar  1 2023, 18:18:15) [MSC v.1916 64 bit (AMD64)]
2023-06-07 16:07:55,342:INFO:executable: c:\Users\Crossddelta\anaconda3\python.exe
2023-06-07 16:07:55,342:INFO:   machine: Windows-10-10.0.19041-SP0
2023-06-07 16:07:55,342:INFO:PyCaret required dependencies:
2023-06-07 16:07:55,343:INFO:                 pip: 22.3.1
2023-06-07 16:07:55,343:INFO:          setuptools: 65.6.3
2023-06-07 16:07:55,343:INFO:             pycaret: 3.0.2
2023-06-07 16:07:55,343:INFO:             IPython: 8.10.0
2023-06-07 16:07:55,343:INFO:          ipywidgets: 7.6.5
2023-06-07 16:07:55,343:INFO:                tqdm: 4.64.1
2023-06-07 16:07:55,343:INFO:               numpy: 1.23.5
2023-06-07 16:07:55,344:INFO:              pandas: 1.5.3
2023-06-07 16:07:55,344:INFO:              jinja2: 3.1.2
2023-06-07 16:07:55,344:INFO:               scipy: 1.10.0
2023-06-07 16:07:55,344:INFO:              joblib: 1.2.0
2023-06-07 16:07:55,344:INFO:             sklearn: 1.2.1
2023-06-07 16:07:55,344:INFO:                pyod: 1.0.9
2023-06-07 16:07:55,344:INFO:            imblearn: 0.10.1
2023-06-07 16:07:55,344:INFO:   category_encoders: 2.6.1
2023-06-07 16:07:55,344:INFO:            lightgbm: 3.3.5
2023-06-07 16:07:55,344:INFO:               numba: 0.56.4
2023-06-07 16:07:55,344:INFO:            requests: 2.28.1
2023-06-07 16:07:55,344:INFO:          matplotlib: 3.7.0
2023-06-07 16:07:55,344:INFO:          scikitplot: 0.3.7
2023-06-07 16:07:55,345:INFO:         yellowbrick: 1.5
2023-06-07 16:07:55,345:INFO:              plotly: 5.9.0
2023-06-07 16:07:55,345:INFO:             kaleido: 0.2.1
2023-06-07 16:07:55,345:INFO:         statsmodels: 0.13.5
2023-06-07 16:07:55,345:INFO:              sktime: 0.17.0
2023-06-07 16:07:55,345:INFO:               tbats: 1.1.3
2023-06-07 16:07:55,345:INFO:            pmdarima: 2.0.3
2023-06-07 16:07:55,345:INFO:              psutil: 5.9.0
2023-06-07 16:07:55,345:INFO:PyCaret optional dependencies:
2023-06-07 16:07:55,345:INFO:                shap: Not installed
2023-06-07 16:07:55,345:INFO:           interpret: Not installed
2023-06-07 16:07:55,345:INFO:                umap: Not installed
2023-06-07 16:07:55,345:INFO:    pandas_profiling: Not installed
2023-06-07 16:07:55,345:INFO:  explainerdashboard: Not installed
2023-06-07 16:07:55,345:INFO:             autoviz: Not installed
2023-06-07 16:07:55,346:INFO:           fairlearn: Not installed
2023-06-07 16:07:55,346:INFO:             xgboost: Not installed
2023-06-07 16:07:55,346:INFO:            catboost: Not installed
2023-06-07 16:07:55,346:INFO:              kmodes: Not installed
2023-06-07 16:07:55,346:INFO:             mlxtend: Not installed
2023-06-07 16:07:55,346:INFO:       statsforecast: Not installed
2023-06-07 16:07:55,346:INFO:        tune_sklearn: Not installed
2023-06-07 16:07:55,346:INFO:                 ray: Not installed
2023-06-07 16:07:55,346:INFO:            hyperopt: Not installed
2023-06-07 16:07:55,346:INFO:              optuna: Not installed
2023-06-07 16:07:55,346:INFO:               skopt: Not installed
2023-06-07 16:07:55,346:INFO:              mlflow: Not installed
2023-06-07 16:07:55,346:INFO:              gradio: Not installed
2023-06-07 16:07:55,347:INFO:             fastapi: Not installed
2023-06-07 16:07:55,347:INFO:             uvicorn: Not installed
2023-06-07 16:07:55,347:INFO:              m2cgen: Not installed
2023-06-07 16:07:55,347:INFO:           evidently: Not installed
2023-06-07 16:07:55,347:INFO:               fugue: Not installed
2023-06-07 16:07:55,347:INFO:           streamlit: Not installed
2023-06-07 16:07:55,347:INFO:             prophet: Not installed
2023-06-07 16:07:55,347:INFO:None
2023-06-07 16:07:55,348:INFO:Set up data.
2023-06-07 16:07:59,946:INFO:Set up train/test split.
2023-06-07 16:08:02,756:INFO:Set up index.
2023-06-07 16:08:02,917:INFO:Set up folding strategy.
2023-06-07 16:08:02,925:INFO:Assigning column types.
2023-06-07 16:08:04,050:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-07 16:08:04,054:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-07 16:08:04,065:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-07 16:08:04,073:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-07 16:08:05,504:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 16:08:05,581:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-07 16:08:05,600:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 16:08:05,602:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 16:08:05,603:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-07 16:08:05,613:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-07 16:08:05,620:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-07 16:08:06,810:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 16:08:06,879:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-07 16:08:06,880:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 16:08:06,880:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 16:08:06,881:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-06-07 16:08:06,888:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-07 16:08:06,896:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-07 16:08:08,120:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 16:08:08,192:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-07 16:08:08,193:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 16:08:08,193:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 16:08:08,217:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-07 16:08:08,226:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-07 16:08:09,455:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 16:08:09,530:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-07 16:08:09,531:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 16:08:09,532:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 16:08:09,532:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-06-07 16:08:09,547:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-07 16:08:10,775:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 16:08:10,849:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-07 16:08:10,850:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 16:08:10,850:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 16:08:10,866:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-07 16:08:12,063:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 16:08:12,133:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-07 16:08:12,133:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 16:08:12,134:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 16:08:12,134:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-06-07 16:08:13,374:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 16:08:13,446:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-07 16:08:13,447:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 16:08:13,447:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 16:08:14,659:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 16:08:14,728:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-07 16:08:14,729:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 16:08:14,729:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 16:08:14,730:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-07 16:08:15,951:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 16:08:16,021:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 16:08:16,021:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 16:08:17,257:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 16:08:17,328:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 16:08:17,329:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 16:08:17,329:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-06-07 16:08:18,665:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 16:08:18,665:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 16:08:20,126:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 16:08:20,127:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 16:08:20,135:INFO:Preparing preprocessing pipeline...
2023-06-07 16:08:20,135:INFO:Set up simple imputation.
2023-06-07 16:08:20,817:INFO:Set up encoding of categorical features.
2023-06-07 16:08:20,837:INFO:Set up removing outliers.
2023-06-07 16:08:43,900:INFO:Finished creating preprocessing pipeline.
2023-06-07 16:08:43,936:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\CROSSD~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['codigo_ibge', 'latitude',
                                             'longitude', 'T2M_RANGE', 'TS',
                                             'T2MDEW', 'T2MWET', 'T2M_MAX',
                                             'T2M_MIN', 'T2M', 'QV2M', 'RH2M',
                                             'PRECTOTCORR', 'WS2M', 'WS2M_MAX',
                                             'WS2M_MIN', 'WS2M_RANGE', 'WS10M',
                                             'WS10M_MAX', 'WS10M_MIN',
                                             'WS10M_RANGE'...
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['data'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rest_encoding',
                 TransformerWrapper(include=['data'],
                                    transformer=TargetEncoder(cols=['data'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=123)))])
2023-06-07 16:08:43,937:INFO:Creating final display dataframe.
2023-06-07 16:13:44,523:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target                PS
2                   Target type        Regression
3           Original data shape     (1835740, 38)
4        Transformed data shape     (1771489, 38)
5   Transformed train set shape     (1220767, 38)
6    Transformed test set shape      (550722, 38)
7              Numeric features                36
8          Categorical features                 1
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15              Remove outliers              True
16           Outliers threshold              0.05
17               Fold Generator             KFold
18                  Fold Number                10
19                     CPU Jobs                -1
20                      Use GPU             False
21               Log Experiment             False
22              Experiment Name  reg-default-name
23                          USI              dc05
2023-06-07 16:13:46,332:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 16:13:46,334:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 16:13:48,045:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 16:13:48,046:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 16:13:48,059:INFO:setup() successfully completed in 352.95s...............
2023-06-07 16:14:23,078:INFO:Initializing compare_models()
2023-06-07 16:14:23,078:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000178BD4CC760>, include=None, fold=None, round=4, cross_validation=True, sort=auc, n_select=1, budget_time=None, turbo=True, errors=raise, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x00000178BD4CC760>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'auc', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'raise', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2023-06-07 16:14:23,079:INFO:Checking exceptions
2023-06-07 16:14:48,417:INFO:Initializing compare_models()
2023-06-07 16:14:48,417:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000178BD4CC760>, include=None, fold=None, round=4, cross_validation=True, sort=auc, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x00000178BD4CC760>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'auc', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2023-06-07 16:14:48,417:INFO:Checking exceptions
2023-06-07 16:15:01,186:INFO:Initializing compare_models()
2023-06-07 16:15:01,186:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000178BD4CC760>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x00000178BD4CC760>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2023-06-07 16:15:01,187:INFO:Checking exceptions
2023-06-07 16:15:01,897:INFO:Preparing display monitor
2023-06-07 16:15:02,033:INFO:Initializing Linear Regression
2023-06-07 16:15:02,033:INFO:Total runtime is 0.0 minutes
2023-06-07 16:15:02,038:INFO:SubProcess create_model() called ==================================
2023-06-07 16:15:02,045:INFO:Initializing create_model()
2023-06-07 16:15:02,045:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000178BD4CC760>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000178F6AC19F0>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 16:15:02,045:INFO:Checking exceptions
2023-06-07 16:15:02,045:INFO:Importing libraries
2023-06-07 16:15:02,045:INFO:Copying training dataset
2023-06-07 16:15:03,820:INFO:Defining folds
2023-06-07 16:15:03,820:INFO:Declaring metric variables
2023-06-07 16:15:03,827:INFO:Importing untrained model
2023-06-07 16:15:03,835:INFO:Linear Regression Imported successfully
2023-06-07 16:15:03,846:INFO:Starting cross validation
2023-06-07 16:15:03,958:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 16:16:55,920:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:231: UserWarning: Persisting input arguments took 4.54s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_transformer = self._memory_fit(

2023-06-07 16:16:55,945:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:231: UserWarning: Persisting input arguments took 4.56s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_transformer = self._memory_fit(

2023-06-07 16:17:33,349:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:231: UserWarning: Persisting input arguments took 1.39s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_transformer = self._memory_fit(

2023-06-07 16:17:36,290:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:231: UserWarning: Persisting input arguments took 2.26s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_transformer = self._memory_fit(

2023-06-07 16:17:40,289:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:238: UserWarning: Persisting input arguments took 0.52s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-06-07 16:17:41,917:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:238: UserWarning: Persisting input arguments took 6.06s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-06-07 16:17:42,509:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:238: UserWarning: Persisting input arguments took 7.49s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-06-07 16:17:42,601:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:238: UserWarning: Persisting input arguments took 8.12s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-06-07 16:17:45,485:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:238: UserWarning: Persisting input arguments took 2.69s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-06-07 16:17:49,870:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:231: UserWarning: Persisting input arguments took 1.59s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_transformer = self._memory_fit(

2023-06-07 16:17:50,217:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:231: UserWarning: Persisting input arguments took 2.05s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_transformer = self._memory_fit(

2023-06-07 16:17:51,196:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:231: UserWarning: Persisting input arguments took 2.63s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_transformer = self._memory_fit(

2023-06-07 16:17:51,956:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:231: UserWarning: Persisting input arguments took 5.16s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_transformer = self._memory_fit(

2023-06-07 16:17:52,836:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:238: UserWarning: Persisting input arguments took 0.95s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-06-07 16:18:02,761:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:231: UserWarning: Persisting input arguments took 0.82s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_transformer = self._memory_fit(

2023-06-07 16:18:03,538:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:238: UserWarning: Persisting input arguments took 1.02s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-06-07 16:18:03,572:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:238: UserWarning: Persisting input arguments took 0.74s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-06-07 16:18:03,618:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:238: UserWarning: Persisting input arguments took 1.22s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-06-07 16:18:13,509:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:231: UserWarning: Persisting input arguments took 1.99s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_transformer = self._memory_fit(

2023-06-07 16:18:13,574:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:231: UserWarning: Persisting input arguments took 1.89s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_transformer = self._memory_fit(

2023-06-07 16:18:13,579:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:231: UserWarning: Persisting input arguments took 1.16s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_transformer = self._memory_fit(

2023-06-07 16:18:14,566:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:238: UserWarning: Persisting input arguments took 0.57s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-06-07 16:18:45,192:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:238: UserWarning: Persisting input arguments took 31.41s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-06-07 16:18:47,670:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\sklearn\base.py:420: UserWarning: X does not have valid feature names, but IsolationForest was fitted with feature names
  warnings.warn(

2023-06-07 16:18:49,771:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:238: UserWarning: Persisting input arguments took 3.03s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-06-07 16:18:53,635:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\sklearn\base.py:420: UserWarning: X does not have valid feature names, but IsolationForest was fitted with feature names
  warnings.warn(

2023-06-07 16:19:06,068:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:238: UserWarning: Persisting input arguments took 0.99s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-06-07 16:19:09,845:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\sklearn\base.py:420: UserWarning: X does not have valid feature names, but IsolationForest was fitted with feature names
  warnings.warn(

2023-06-07 16:22:12,551:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:238: UserWarning: Persisting input arguments took 1.46s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-06-07 16:22:19,099:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:238: UserWarning: Persisting input arguments took 1.37s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-06-07 16:22:35,131:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:238: UserWarning: Persisting input arguments took 3.24s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-06-07 16:22:40,111:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.64s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-07 16:22:41,000:INFO:Calculating mean and std
2023-06-07 16:22:41,109:INFO:Creating metrics dataframe
2023-06-07 16:22:41,405:INFO:Uploading results into container
2023-06-07 16:22:41,416:INFO:Uploading model into container now
2023-06-07 16:22:41,433:INFO:_master_model_container: 1
2023-06-07 16:22:41,433:INFO:_display_container: 2
2023-06-07 16:22:41,453:INFO:LinearRegression(n_jobs=-1)
2023-06-07 16:22:41,453:INFO:create_model() successfully completed......................................
2023-06-07 16:22:43,337:INFO:SubProcess create_model() end ==================================
2023-06-07 16:22:43,337:INFO:Creating metrics dataframe
2023-06-07 16:22:43,365:INFO:Initializing Lasso Regression
2023-06-07 16:22:43,365:INFO:Total runtime is 7.688870863119761 minutes
2023-06-07 16:22:43,370:INFO:SubProcess create_model() called ==================================
2023-06-07 16:22:43,370:INFO:Initializing create_model()
2023-06-07 16:22:43,370:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000178BD4CC760>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000178F6AC19F0>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 16:22:43,370:INFO:Checking exceptions
2023-06-07 16:22:43,371:INFO:Importing libraries
2023-06-07 16:22:43,373:INFO:Copying training dataset
2023-06-07 16:22:46,155:INFO:Defining folds
2023-06-07 16:22:46,155:INFO:Declaring metric variables
2023-06-07 16:22:46,162:INFO:Importing untrained model
2023-06-07 16:22:46,168:INFO:Lasso Regression Imported successfully
2023-06-07 16:22:46,180:INFO:Starting cross validation
2023-06-07 16:22:46,227:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 16:22:55,914:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:231: UserWarning: Persisting input arguments took 0.58s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_transformer = self._memory_fit(

2023-06-07 16:22:56,450:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:231: UserWarning: Persisting input arguments took 1.13s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_transformer = self._memory_fit(

2023-06-07 16:23:19,892:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:231: UserWarning: Persisting input arguments took 13.53s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_transformer = self._memory_fit(

2023-06-07 16:23:23,026:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:231: UserWarning: Persisting input arguments took 15.74s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_transformer = self._memory_fit(

2023-06-07 16:23:40,579:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:238: UserWarning: Persisting input arguments took 8.49s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-06-07 16:23:41,192:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:238: UserWarning: Persisting input arguments took 0.53s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-06-07 16:23:41,469:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:238: UserWarning: Persisting input arguments took 9.33s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-06-07 16:23:42,272:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:238: UserWarning: Persisting input arguments took 1.32s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-06-07 16:23:42,678:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:238: UserWarning: Persisting input arguments took 10.62s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-06-07 16:23:53,919:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:238: UserWarning: Persisting input arguments took 1.20s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-06-07 16:23:54,372:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:238: UserWarning: Persisting input arguments took 0.70s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-06-07 16:23:54,621:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:231: UserWarning: Persisting input arguments took 0.91s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_transformer = self._memory_fit(

2023-06-07 16:23:54,761:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:231: UserWarning: Persisting input arguments took 0.89s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_transformer = self._memory_fit(

2023-06-07 16:23:56,473:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:238: UserWarning: Persisting input arguments took 1.66s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-06-07 16:24:00,522:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:231: UserWarning: Persisting input arguments took 2.25s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_transformer = self._memory_fit(

2023-06-07 16:24:01,596:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:231: UserWarning: Persisting input arguments took 1.38s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_transformer = self._memory_fit(

2023-06-07 16:24:18,276:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:231: UserWarning: Persisting input arguments took 1.65s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_transformer = self._memory_fit(

2023-06-07 16:24:18,487:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:238: UserWarning: Persisting input arguments took 1.56s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-06-07 16:24:18,677:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:238: UserWarning: Persisting input arguments took 1.87s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-06-07 16:24:19,290:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:238: UserWarning: Persisting input arguments took 1.75s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-06-07 16:24:19,635:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:238: UserWarning: Persisting input arguments took 1.43s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-06-07 16:24:55,983:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\sklearn\base.py:420: UserWarning: X does not have valid feature names, but IsolationForest was fitted with feature names
  warnings.warn(

2023-06-07 16:24:56,021:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\sklearn\base.py:420: UserWarning: X does not have valid feature names, but IsolationForest was fitted with feature names
  warnings.warn(

2023-06-07 16:24:56,513:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\sklearn\base.py:420: UserWarning: X does not have valid feature names, but IsolationForest was fitted with feature names
  warnings.warn(

2023-06-07 16:25:13,438:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:238: UserWarning: Persisting input arguments took 16.27s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-06-07 16:25:14,486:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:231: UserWarning: Persisting input arguments took 1.10s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_transformer = self._memory_fit(

2023-06-07 16:25:14,726:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:231: UserWarning: Persisting input arguments took 0.79s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_transformer = self._memory_fit(

2023-06-07 16:25:15,215:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:231: UserWarning: Persisting input arguments took 0.51s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_transformer = self._memory_fit(

2023-06-07 16:25:15,389:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:231: UserWarning: Persisting input arguments took 0.60s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_transformer = self._memory_fit(

2023-06-07 16:25:44,148:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\sklearn\base.py:420: UserWarning: X does not have valid feature names, but IsolationForest was fitted with feature names
  warnings.warn(

2023-06-07 16:26:05,787:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:238: UserWarning: Persisting input arguments took 1.97s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-06-07 16:26:06,056:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:238: UserWarning: Persisting input arguments took 1.88s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-06-07 16:26:07,728:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:231: UserWarning: Persisting input arguments took 0.89s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_transformer = self._memory_fit(

2023-06-07 16:26:08,414:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\sklearn\base.py:420: UserWarning: X does not have valid feature names, but IsolationForest was fitted with feature names
  warnings.warn(

2023-06-07 16:26:09,098:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:231: UserWarning: Persisting input arguments took 1.27s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_transformer = self._memory_fit(

2023-06-07 16:26:10,582:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:231: UserWarning: Persisting input arguments took 0.68s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_transformer = self._memory_fit(

2023-06-07 16:26:10,599:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:231: UserWarning: Persisting input arguments took 0.67s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_transformer = self._memory_fit(

2023-06-07 16:26:29,082:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:238: UserWarning: Persisting input arguments took 11.32s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-06-07 16:26:35,547:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:238: UserWarning: Persisting input arguments took 6.11s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-06-07 16:26:36,763:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:231: UserWarning: Persisting input arguments took 0.86s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_transformer = self._memory_fit(

2023-06-07 16:26:38,073:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:238: UserWarning: Persisting input arguments took 4.18s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-06-07 16:26:38,414:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:238: UserWarning: Persisting input arguments took 2.77s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-06-07 16:26:39,813:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:231: UserWarning: Persisting input arguments took 0.91s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_transformer = self._memory_fit(

2023-06-07 16:26:40,435:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:231: UserWarning: Persisting input arguments took 0.83s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_transformer = self._memory_fit(

2023-06-07 16:26:45,225:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:231: UserWarning: Persisting input arguments took 2.22s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_transformer = self._memory_fit(

2023-06-07 16:26:48,826:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:238: UserWarning: Persisting input arguments took 5.18s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-06-07 16:26:50,138:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:238: UserWarning: Persisting input arguments took 0.90s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-06-07 16:26:50,488:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:231: UserWarning: Persisting input arguments took 1.05s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_transformer = self._memory_fit(

2023-06-07 16:26:51,059:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:231: UserWarning: Persisting input arguments took 0.57s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_transformer = self._memory_fit(

2023-06-07 16:26:59,959:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\sklearn\base.py:420: UserWarning: X does not have valid feature names, but IsolationForest was fitted with feature names
  warnings.warn(

2023-06-07 16:27:00,546:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:238: UserWarning: Persisting input arguments took 7.64s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-06-07 16:27:10,906:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:231: UserWarning: Persisting input arguments took 1.03s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_transformer = self._memory_fit(

2023-06-07 16:27:19,551:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:238: UserWarning: Persisting input arguments took 1.13s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-06-07 16:27:20,374:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:238: UserWarning: Persisting input arguments took 2.40s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-06-07 16:27:21,553:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\sklearn\base.py:420: UserWarning: X does not have valid feature names, but IsolationForest was fitted with feature names
  warnings.warn(

2023-06-07 16:27:33,126:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\sklearn\base.py:420: UserWarning: X does not have valid feature names, but IsolationForest was fitted with feature names
  warnings.warn(

2023-06-07 16:27:34,012:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.97s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-07 16:31:45,057:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:238: UserWarning: Persisting input arguments took 4.74s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-06-07 16:31:46,368:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:238: UserWarning: Persisting input arguments took 3.02s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-06-07 16:31:54,238:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.56s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-07 16:31:55,460:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.58s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-07 16:32:42,710:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:238: UserWarning: Persisting input arguments took 2.04s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-06-07 16:33:04,404:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:238: UserWarning: Persisting input arguments took 5.80s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-06-07 16:33:06,597:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:238: UserWarning: Persisting input arguments took 1.97s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-06-07 16:33:06,614:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:238: UserWarning: Persisting input arguments took 3.90s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-06-07 16:33:15,758:INFO:Calculating mean and std
2023-06-07 16:33:15,890:INFO:Creating metrics dataframe
2023-06-07 16:33:16,161:INFO:Uploading results into container
2023-06-07 16:33:16,173:INFO:Uploading model into container now
2023-06-07 16:33:16,187:INFO:_master_model_container: 2
2023-06-07 16:33:16,188:INFO:_display_container: 2
2023-06-07 16:33:16,212:INFO:Lasso(random_state=123)
2023-06-07 16:33:16,213:INFO:create_model() successfully completed......................................
2023-06-07 16:33:17,689:WARNING:create_model() for Lasso(random_state=123) raised an exception or returned all 0.0, trying without fit_kwargs:
2023-06-07 16:33:17,691:WARNING:Traceback (most recent call last):
  File "c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 795, in compare_models
    np.sum(
AssertionError

2023-06-07 16:33:17,693:INFO:Initializing create_model()
2023-06-07 16:33:17,693:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000178BD4CC760>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000178F6AC19F0>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 16:33:17,693:INFO:Checking exceptions
2023-06-07 16:33:17,693:INFO:Importing libraries
2023-06-07 16:33:17,694:INFO:Copying training dataset
2023-06-07 16:33:20,568:INFO:Defining folds
2023-06-07 16:33:20,568:INFO:Declaring metric variables
2023-06-07 16:33:20,575:INFO:Importing untrained model
2023-06-07 16:33:20,580:INFO:Lasso Regression Imported successfully
2023-06-07 16:33:20,589:INFO:Starting cross validation
2023-06-07 16:33:20,622:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 16:33:29,817:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:231: UserWarning: Persisting input arguments took 1.98s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_transformer = self._memory_fit(

2023-06-07 16:33:30,113:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:231: UserWarning: Persisting input arguments took 1.22s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_transformer = self._memory_fit(

2023-06-07 16:33:30,356:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:231: UserWarning: Persisting input arguments took 0.75s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_transformer = self._memory_fit(

2023-06-07 16:33:31,283:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:231: UserWarning: Persisting input arguments took 1.46s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_transformer = self._memory_fit(

2023-06-07 16:33:31,288:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:231: UserWarning: Persisting input arguments took 1.48s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_transformer = self._memory_fit(

2023-06-07 16:34:40,385:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:238: UserWarning: Persisting input arguments took 6.74s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-06-07 16:34:48,550:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:231: UserWarning: Persisting input arguments took 1.22s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_transformer = self._memory_fit(

2023-06-07 16:34:49,011:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:238: UserWarning: Persisting input arguments took 4.19s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-06-07 16:34:50,021:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:238: UserWarning: Persisting input arguments took 5.09s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-06-07 16:34:52,789:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:231: UserWarning: Persisting input arguments took 1.11s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_transformer = self._memory_fit(

2023-06-07 16:34:53,712:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:238: UserWarning: Persisting input arguments took 7.86s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-06-07 16:34:58,479:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:231: UserWarning: Persisting input arguments took 1.79s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_transformer = self._memory_fit(

2023-06-07 16:34:59,451:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:238: UserWarning: Persisting input arguments took 9.83s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-06-07 16:35:00,005:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:238: UserWarning: Persisting input arguments took 10.48s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-06-07 16:35:05,153:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:238: UserWarning: Persisting input arguments took 4.81s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-06-07 16:35:07,053:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:231: UserWarning: Persisting input arguments took 0.71s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_transformer = self._memory_fit(

2023-06-07 16:35:07,777:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:231: UserWarning: Persisting input arguments took 2.57s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_transformer = self._memory_fit(

2023-06-07 16:35:07,996:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:231: UserWarning: Persisting input arguments took 2.85s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_transformer = self._memory_fit(

2023-06-07 16:35:07,996:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:231: UserWarning: Persisting input arguments took 2.96s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_transformer = self._memory_fit(

2023-06-07 16:35:34,331:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\sklearn\base.py:420: UserWarning: X does not have valid feature names, but IsolationForest was fitted with feature names
  warnings.warn(

2023-06-07 16:35:36,553:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:238: UserWarning: Persisting input arguments took 10.71s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-06-07 16:35:38,466:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:238: UserWarning: Persisting input arguments took 30.99s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-06-07 16:35:44,252:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:238: UserWarning: Persisting input arguments took 4.20s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-06-07 16:35:44,522:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:238: UserWarning: Persisting input arguments took 4.55s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-06-07 16:35:51,254:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:238: UserWarning: Persisting input arguments took 7.33s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-06-07 16:35:52,273:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:231: UserWarning: Persisting input arguments took 1.24s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_transformer = self._memory_fit(

2023-06-07 16:35:52,287:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:238: UserWarning: Persisting input arguments took 1.06s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-06-07 16:36:30,345:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\sklearn\base.py:420: UserWarning: X does not have valid feature names, but IsolationForest was fitted with feature names
  warnings.warn(

2023-06-07 16:36:35,150:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\sklearn\base.py:420: UserWarning: X does not have valid feature names, but IsolationForest was fitted with feature names
  warnings.warn(

2023-06-07 16:41:14,578:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-07 16:41:14,580:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-07 16:41:14,580:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-07 16:41:14,580:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-07 16:41:16,260:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-07 16:42:21,337:INFO:PyCaret RegressionExperiment
2023-06-07 16:42:21,337:INFO:Logging name: reg-default-name
2023-06-07 16:42:21,337:INFO:ML Usecase: MLUsecase.REGRESSION
2023-06-07 16:42:21,337:INFO:version 3.0.2
2023-06-07 16:42:21,338:INFO:Initializing setup()
2023-06-07 16:42:21,338:INFO:self.USI: c28f
2023-06-07 16:42:21,338:INFO:self._variable_keys: {'fold_shuffle_param', 'log_plots_param', 'exp_id', 'seed', 'USI', 'X_test', 'y', 'pipeline', 'X_train', 'fold_generator', 'fold_groups_param', 'data', 'y_test', 'gpu_n_jobs_param', 'memory', '_available_plots', 'X', 'exp_name_log', '_ml_usecase', 'transform_target_param', 'target_param', 'y_train', 'idx', 'html_param', 'gpu_param', 'n_jobs_param', 'logging_param'}
2023-06-07 16:42:21,338:INFO:Checking environment
2023-06-07 16:42:21,338:INFO:python_version: 3.10.9
2023-06-07 16:42:21,338:INFO:python_build: ('main', 'Mar  1 2023 18:18:15')
2023-06-07 16:42:21,338:INFO:machine: AMD64
2023-06-07 16:42:21,338:INFO:platform: Windows-10-10.0.19041-SP0
2023-06-07 16:42:21,338:INFO:Memory: svmem(total=6378106880, available=1408278528, percent=77.9, used=4969828352, free=1408278528)
2023-06-07 16:42:21,338:INFO:Physical Core: 4
2023-06-07 16:42:21,338:INFO:Logical Core: 8
2023-06-07 16:42:21,338:INFO:Checking libraries
2023-06-07 16:42:21,338:INFO:System:
2023-06-07 16:42:21,339:INFO:    python: 3.10.9 | packaged by Anaconda, Inc. | (main, Mar  1 2023, 18:18:15) [MSC v.1916 64 bit (AMD64)]
2023-06-07 16:42:21,339:INFO:executable: c:\Users\Crossddelta\anaconda3\python.exe
2023-06-07 16:42:21,339:INFO:   machine: Windows-10-10.0.19041-SP0
2023-06-07 16:42:21,339:INFO:PyCaret required dependencies:
2023-06-07 16:42:21,339:INFO:                 pip: 22.3.1
2023-06-07 16:42:21,339:INFO:          setuptools: 65.6.3
2023-06-07 16:42:21,339:INFO:             pycaret: 3.0.2
2023-06-07 16:42:21,339:INFO:             IPython: 8.10.0
2023-06-07 16:42:21,339:INFO:          ipywidgets: 7.6.5
2023-06-07 16:42:21,339:INFO:                tqdm: 4.64.1
2023-06-07 16:42:21,339:INFO:               numpy: 1.23.5
2023-06-07 16:42:21,339:INFO:              pandas: 1.5.3
2023-06-07 16:42:21,339:INFO:              jinja2: 3.1.2
2023-06-07 16:42:21,340:INFO:               scipy: 1.10.0
2023-06-07 16:42:21,340:INFO:              joblib: 1.2.0
2023-06-07 16:42:21,340:INFO:             sklearn: 1.2.1
2023-06-07 16:42:21,340:INFO:                pyod: 1.0.9
2023-06-07 16:42:21,340:INFO:            imblearn: 0.10.1
2023-06-07 16:42:21,340:INFO:   category_encoders: 2.6.1
2023-06-07 16:42:21,340:INFO:            lightgbm: 3.3.5
2023-06-07 16:42:21,340:INFO:               numba: 0.56.4
2023-06-07 16:42:21,340:INFO:            requests: 2.28.1
2023-06-07 16:42:21,340:INFO:          matplotlib: 3.7.0
2023-06-07 16:42:21,340:INFO:          scikitplot: 0.3.7
2023-06-07 16:42:21,340:INFO:         yellowbrick: 1.5
2023-06-07 16:42:21,340:INFO:              plotly: 5.9.0
2023-06-07 16:42:21,340:INFO:             kaleido: 0.2.1
2023-06-07 16:42:21,340:INFO:         statsmodels: 0.13.5
2023-06-07 16:42:21,340:INFO:              sktime: 0.17.0
2023-06-07 16:42:21,341:INFO:               tbats: 1.1.3
2023-06-07 16:42:21,341:INFO:            pmdarima: 2.0.3
2023-06-07 16:42:21,341:INFO:              psutil: 5.9.0
2023-06-07 16:42:21,341:INFO:PyCaret optional dependencies:
2023-06-07 16:42:21,362:INFO:                shap: Not installed
2023-06-07 16:42:21,362:INFO:           interpret: Not installed
2023-06-07 16:42:21,362:INFO:                umap: Not installed
2023-06-07 16:42:21,362:INFO:    pandas_profiling: Not installed
2023-06-07 16:42:21,362:INFO:  explainerdashboard: Not installed
2023-06-07 16:42:21,362:INFO:             autoviz: Not installed
2023-06-07 16:42:21,362:INFO:           fairlearn: Not installed
2023-06-07 16:42:21,362:INFO:             xgboost: Not installed
2023-06-07 16:42:21,363:INFO:            catboost: Not installed
2023-06-07 16:42:21,363:INFO:              kmodes: Not installed
2023-06-07 16:42:21,363:INFO:             mlxtend: Not installed
2023-06-07 16:42:21,363:INFO:       statsforecast: Not installed
2023-06-07 16:42:21,363:INFO:        tune_sklearn: Not installed
2023-06-07 16:42:21,363:INFO:                 ray: Not installed
2023-06-07 16:42:21,363:INFO:            hyperopt: Not installed
2023-06-07 16:42:21,363:INFO:              optuna: Not installed
2023-06-07 16:42:21,363:INFO:               skopt: Not installed
2023-06-07 16:42:21,363:INFO:              mlflow: Not installed
2023-06-07 16:42:21,363:INFO:              gradio: Not installed
2023-06-07 16:42:21,363:INFO:             fastapi: Not installed
2023-06-07 16:42:21,363:INFO:             uvicorn: Not installed
2023-06-07 16:42:21,363:INFO:              m2cgen: Not installed
2023-06-07 16:42:21,363:INFO:           evidently: Not installed
2023-06-07 16:42:21,364:INFO:               fugue: Not installed
2023-06-07 16:42:21,364:INFO:           streamlit: Not installed
2023-06-07 16:42:21,364:INFO:             prophet: Not installed
2023-06-07 16:42:21,364:INFO:None
2023-06-07 16:42:21,364:INFO:Set up data.
2023-06-07 16:42:21,464:INFO:Set up train/test split.
2023-06-07 16:42:21,522:INFO:Set up index.
2023-06-07 16:42:21,526:INFO:Set up folding strategy.
2023-06-07 16:42:21,526:INFO:Assigning column types.
2023-06-07 16:42:21,571:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-07 16:42:21,572:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-07 16:42:21,579:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-07 16:42:21,587:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-07 16:42:21,712:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 16:42:21,781:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-07 16:42:21,782:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 16:42:22,210:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 16:42:22,211:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-07 16:42:22,219:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-07 16:42:22,226:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-07 16:42:22,352:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 16:42:22,421:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-07 16:42:22,422:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 16:42:22,422:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 16:42:22,423:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-06-07 16:42:22,430:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-07 16:42:22,437:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-07 16:42:22,571:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 16:42:22,639:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-07 16:42:22,641:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 16:42:22,641:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 16:42:22,649:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-07 16:42:22,656:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-07 16:42:22,781:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 16:42:22,849:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-07 16:42:22,850:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 16:42:22,850:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 16:42:22,851:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-06-07 16:42:22,865:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-07 16:42:22,990:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 16:42:23,058:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-07 16:42:23,059:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 16:42:23,059:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 16:42:23,074:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-07 16:42:23,206:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 16:42:23,276:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-07 16:42:23,277:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 16:42:23,277:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 16:42:23,277:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-06-07 16:42:23,418:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 16:42:23,487:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-07 16:42:23,488:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 16:42:23,489:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 16:42:23,633:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 16:42:23,702:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-07 16:42:23,702:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 16:42:23,703:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 16:42:23,703:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-07 16:42:23,849:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 16:42:23,925:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 16:42:23,925:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 16:42:24,087:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 16:42:24,164:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 16:42:24,165:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 16:42:24,166:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-06-07 16:42:24,395:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 16:42:24,395:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 16:42:24,607:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 16:42:24,608:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 16:42:24,614:INFO:Preparing preprocessing pipeline...
2023-06-07 16:42:24,614:INFO:Set up simple imputation.
2023-06-07 16:42:24,638:INFO:Set up encoding of categorical features.
2023-06-07 16:42:24,639:INFO:Set up removing outliers.
2023-06-07 16:42:25,088:INFO:Finished creating preprocessing pipeline.
2023-06-07 16:42:25,106:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\CROSSD~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['codigo_ibge', 'latitude',
                                             'longitude', 'T2M_RANGE', 'TS',
                                             'T2MDEW', 'T2MWET', 'T2M_MAX',
                                             'T2M_MIN', 'T2M', 'QV2M', 'RH2M',
                                             'PRECTOTCORR', 'WS2M', 'WS2M_MAX',
                                             'WS2M_MIN', 'WS2M_RANGE', 'WS10M',
                                             'WS10M_MAX', 'WS10M_MIN',
                                             'WS10M_RANGE'...
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['data'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rest_encoding',
                 TransformerWrapper(include=['data'],
                                    transformer=TargetEncoder(cols=['data'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=123)))])
2023-06-07 16:42:25,106:INFO:Creating final display dataframe.
2023-06-07 16:42:37,930:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target                PS
2                   Target type        Regression
3           Original data shape       (80000, 38)
4        Transformed data shape       (77200, 38)
5   Transformed train set shape       (53200, 38)
6    Transformed test set shape       (24000, 38)
7              Numeric features                36
8          Categorical features                 1
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15              Remove outliers              True
16           Outliers threshold              0.05
17               Fold Generator             KFold
18                  Fold Number                10
19                     CPU Jobs                -1
20                      Use GPU             False
21               Log Experiment             False
22              Experiment Name  reg-default-name
23                          USI              c28f
2023-06-07 16:42:38,177:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 16:42:38,177:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 16:42:38,390:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 16:42:38,391:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 16:42:38,392:INFO:setup() successfully completed in 17.26s...............
2023-06-07 16:42:41,772:INFO:Initializing compare_models()
2023-06-07 16:42:41,772:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021EB7B9E1A0>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x0000021EB7B9E1A0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2023-06-07 16:42:41,773:INFO:Checking exceptions
2023-06-07 16:42:41,799:INFO:Preparing display monitor
2023-06-07 16:42:41,843:INFO:Initializing Linear Regression
2023-06-07 16:42:41,843:INFO:Total runtime is 0.0 minutes
2023-06-07 16:42:41,850:INFO:SubProcess create_model() called ==================================
2023-06-07 16:42:41,851:INFO:Initializing create_model()
2023-06-07 16:42:41,851:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021EB7B9E1A0>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021EB7B23A30>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 16:42:41,851:INFO:Checking exceptions
2023-06-07 16:42:41,851:INFO:Importing libraries
2023-06-07 16:42:41,852:INFO:Copying training dataset
2023-06-07 16:42:41,932:INFO:Defining folds
2023-06-07 16:42:41,932:INFO:Declaring metric variables
2023-06-07 16:42:41,969:INFO:Importing untrained model
2023-06-07 16:42:41,978:INFO:Linear Regression Imported successfully
2023-06-07 16:42:41,994:INFO:Starting cross validation
2023-06-07 16:42:42,027:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 16:42:54,429:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\sklearn\base.py:420: UserWarning: X does not have valid feature names, but IsolationForest was fitted with feature names
  warnings.warn(

2023-06-07 16:42:54,440:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\sklearn\base.py:420: UserWarning: X does not have valid feature names, but IsolationForest was fitted with feature names
  warnings.warn(

2023-06-07 16:42:54,580:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\sklearn\base.py:420: UserWarning: X does not have valid feature names, but IsolationForest was fitted with feature names
  warnings.warn(

2023-06-07 16:42:54,718:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\sklearn\base.py:420: UserWarning: X does not have valid feature names, but IsolationForest was fitted with feature names
  warnings.warn(

2023-06-07 16:42:54,894:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\sklearn\base.py:420: UserWarning: X does not have valid feature names, but IsolationForest was fitted with feature names
  warnings.warn(

2023-06-07 16:42:55,013:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\sklearn\base.py:420: UserWarning: X does not have valid feature names, but IsolationForest was fitted with feature names
  warnings.warn(

2023-06-07 16:42:55,015:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\sklearn\base.py:420: UserWarning: X does not have valid feature names, but IsolationForest was fitted with feature names
  warnings.warn(

2023-06-07 16:42:55,100:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\sklearn\base.py:420: UserWarning: X does not have valid feature names, but IsolationForest was fitted with feature names
  warnings.warn(

2023-06-07 16:43:11,018:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:238: UserWarning: Persisting input arguments took 0.53s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-06-07 16:43:11,214:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:238: UserWarning: Persisting input arguments took 0.53s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-06-07 16:43:14,598:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\sklearn\base.py:420: UserWarning: X does not have valid feature names, but IsolationForest was fitted with feature names
  warnings.warn(

2023-06-07 16:43:14,633:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\sklearn\base.py:420: UserWarning: X does not have valid feature names, but IsolationForest was fitted with feature names
  warnings.warn(

2023-06-07 16:43:22,737:INFO:Calculating mean and std
2023-06-07 16:43:22,739:INFO:Creating metrics dataframe
2023-06-07 16:43:22,884:INFO:Uploading results into container
2023-06-07 16:43:22,886:INFO:Uploading model into container now
2023-06-07 16:43:22,887:INFO:_master_model_container: 1
2023-06-07 16:43:22,887:INFO:_display_container: 2
2023-06-07 16:43:22,888:INFO:LinearRegression(n_jobs=-1)
2023-06-07 16:43:22,889:INFO:create_model() successfully completed......................................
2023-06-07 16:43:23,052:INFO:SubProcess create_model() end ==================================
2023-06-07 16:43:23,053:INFO:Creating metrics dataframe
2023-06-07 16:43:23,067:INFO:Initializing Lasso Regression
2023-06-07 16:43:23,067:INFO:Total runtime is 0.6870566646258036 minutes
2023-06-07 16:43:23,075:INFO:SubProcess create_model() called ==================================
2023-06-07 16:43:23,076:INFO:Initializing create_model()
2023-06-07 16:43:23,076:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021EB7B9E1A0>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021EB7B23A30>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 16:43:23,076:INFO:Checking exceptions
2023-06-07 16:43:23,076:INFO:Importing libraries
2023-06-07 16:43:23,076:INFO:Copying training dataset
2023-06-07 16:43:23,150:INFO:Defining folds
2023-06-07 16:43:23,151:INFO:Declaring metric variables
2023-06-07 16:43:23,157:INFO:Importing untrained model
2023-06-07 16:43:23,163:INFO:Lasso Regression Imported successfully
2023-06-07 16:43:23,173:INFO:Starting cross validation
2023-06-07 16:43:23,189:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 16:43:27,812:INFO:Calculating mean and std
2023-06-07 16:43:27,814:INFO:Creating metrics dataframe
2023-06-07 16:43:27,962:INFO:Uploading results into container
2023-06-07 16:43:27,963:INFO:Uploading model into container now
2023-06-07 16:43:27,963:INFO:_master_model_container: 2
2023-06-07 16:43:27,963:INFO:_display_container: 2
2023-06-07 16:43:27,964:INFO:Lasso(random_state=123)
2023-06-07 16:43:27,964:INFO:create_model() successfully completed......................................
2023-06-07 16:43:28,102:INFO:SubProcess create_model() end ==================================
2023-06-07 16:43:28,102:INFO:Creating metrics dataframe
2023-06-07 16:43:28,116:INFO:Initializing Ridge Regression
2023-06-07 16:43:28,116:INFO:Total runtime is 0.7712111393610637 minutes
2023-06-07 16:43:28,123:INFO:SubProcess create_model() called ==================================
2023-06-07 16:43:28,124:INFO:Initializing create_model()
2023-06-07 16:43:28,124:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021EB7B9E1A0>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021EB7B23A30>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 16:43:28,124:INFO:Checking exceptions
2023-06-07 16:43:28,124:INFO:Importing libraries
2023-06-07 16:43:28,124:INFO:Copying training dataset
2023-06-07 16:43:28,182:INFO:Defining folds
2023-06-07 16:43:28,183:INFO:Declaring metric variables
2023-06-07 16:43:28,189:INFO:Importing untrained model
2023-06-07 16:43:28,194:INFO:Ridge Regression Imported successfully
2023-06-07 16:43:28,202:INFO:Starting cross validation
2023-06-07 16:43:28,219:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 16:43:31,425:INFO:Calculating mean and std
2023-06-07 16:43:31,427:INFO:Creating metrics dataframe
2023-06-07 16:43:31,584:INFO:Uploading results into container
2023-06-07 16:43:31,585:INFO:Uploading model into container now
2023-06-07 16:43:31,586:INFO:_master_model_container: 3
2023-06-07 16:43:31,586:INFO:_display_container: 2
2023-06-07 16:43:31,587:INFO:Ridge(random_state=123)
2023-06-07 16:43:31,587:INFO:create_model() successfully completed......................................
2023-06-07 16:43:31,744:INFO:SubProcess create_model() end ==================================
2023-06-07 16:43:31,744:INFO:Creating metrics dataframe
2023-06-07 16:43:31,764:INFO:Initializing Elastic Net
2023-06-07 16:43:31,765:INFO:Total runtime is 0.8320293227831523 minutes
2023-06-07 16:43:31,771:INFO:SubProcess create_model() called ==================================
2023-06-07 16:43:31,772:INFO:Initializing create_model()
2023-06-07 16:43:31,773:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021EB7B9E1A0>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021EB7B23A30>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 16:43:31,773:INFO:Checking exceptions
2023-06-07 16:43:31,774:INFO:Importing libraries
2023-06-07 16:43:31,775:INFO:Copying training dataset
2023-06-07 16:43:31,848:INFO:Defining folds
2023-06-07 16:43:31,848:INFO:Declaring metric variables
2023-06-07 16:43:31,858:INFO:Importing untrained model
2023-06-07 16:43:31,868:INFO:Elastic Net Imported successfully
2023-06-07 16:43:31,882:INFO:Starting cross validation
2023-06-07 16:43:31,901:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 16:43:35,550:INFO:Calculating mean and std
2023-06-07 16:43:35,551:INFO:Creating metrics dataframe
2023-06-07 16:43:35,748:INFO:Uploading results into container
2023-06-07 16:43:35,750:INFO:Uploading model into container now
2023-06-07 16:43:35,750:INFO:_master_model_container: 4
2023-06-07 16:43:35,751:INFO:_display_container: 2
2023-06-07 16:43:35,751:INFO:ElasticNet(random_state=123)
2023-06-07 16:43:35,752:INFO:create_model() successfully completed......................................
2023-06-07 16:43:35,897:INFO:SubProcess create_model() end ==================================
2023-06-07 16:43:35,897:INFO:Creating metrics dataframe
2023-06-07 16:43:35,911:INFO:Initializing Least Angle Regression
2023-06-07 16:43:35,911:INFO:Total runtime is 0.901131280263265 minutes
2023-06-07 16:43:35,916:INFO:SubProcess create_model() called ==================================
2023-06-07 16:43:35,917:INFO:Initializing create_model()
2023-06-07 16:43:35,917:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021EB7B9E1A0>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021EB7B23A30>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 16:43:35,917:INFO:Checking exceptions
2023-06-07 16:43:35,917:INFO:Importing libraries
2023-06-07 16:43:35,917:INFO:Copying training dataset
2023-06-07 16:43:35,973:INFO:Defining folds
2023-06-07 16:43:35,973:INFO:Declaring metric variables
2023-06-07 16:43:35,979:INFO:Importing untrained model
2023-06-07 16:43:35,985:INFO:Least Angle Regression Imported successfully
2023-06-07 16:43:35,994:INFO:Starting cross validation
2023-06-07 16:43:36,010:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 16:43:39,155:INFO:Calculating mean and std
2023-06-07 16:43:39,156:INFO:Creating metrics dataframe
2023-06-07 16:43:39,329:INFO:Uploading results into container
2023-06-07 16:43:39,330:INFO:Uploading model into container now
2023-06-07 16:43:39,331:INFO:_master_model_container: 5
2023-06-07 16:43:39,331:INFO:_display_container: 2
2023-06-07 16:43:39,332:INFO:Lars(random_state=123)
2023-06-07 16:43:39,332:INFO:create_model() successfully completed......................................
2023-06-07 16:43:39,473:INFO:SubProcess create_model() end ==================================
2023-06-07 16:43:39,474:INFO:Creating metrics dataframe
2023-06-07 16:43:39,514:INFO:Initializing Lasso Least Angle Regression
2023-06-07 16:43:39,514:INFO:Total runtime is 0.9611777226130168 minutes
2023-06-07 16:43:39,520:INFO:SubProcess create_model() called ==================================
2023-06-07 16:43:39,520:INFO:Initializing create_model()
2023-06-07 16:43:39,521:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021EB7B9E1A0>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021EB7B23A30>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 16:43:39,521:INFO:Checking exceptions
2023-06-07 16:43:39,522:INFO:Importing libraries
2023-06-07 16:43:39,523:INFO:Copying training dataset
2023-06-07 16:43:39,594:INFO:Defining folds
2023-06-07 16:43:39,594:INFO:Declaring metric variables
2023-06-07 16:43:39,600:INFO:Importing untrained model
2023-06-07 16:43:39,607:INFO:Lasso Least Angle Regression Imported successfully
2023-06-07 16:43:39,616:INFO:Starting cross validation
2023-06-07 16:43:39,632:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 16:43:42,873:INFO:Calculating mean and std
2023-06-07 16:43:42,874:INFO:Creating metrics dataframe
2023-06-07 16:43:43,055:INFO:Uploading results into container
2023-06-07 16:43:43,057:INFO:Uploading model into container now
2023-06-07 16:43:43,057:INFO:_master_model_container: 6
2023-06-07 16:43:43,057:INFO:_display_container: 2
2023-06-07 16:43:43,058:INFO:LassoLars(random_state=123)
2023-06-07 16:43:43,058:INFO:create_model() successfully completed......................................
2023-06-07 16:43:43,200:INFO:SubProcess create_model() end ==================================
2023-06-07 16:43:43,200:INFO:Creating metrics dataframe
2023-06-07 16:43:43,217:INFO:Initializing Orthogonal Matching Pursuit
2023-06-07 16:43:43,217:INFO:Total runtime is 1.0228997945785523 minutes
2023-06-07 16:43:43,222:INFO:SubProcess create_model() called ==================================
2023-06-07 16:43:43,223:INFO:Initializing create_model()
2023-06-07 16:43:43,223:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021EB7B9E1A0>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021EB7B23A30>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 16:43:43,223:INFO:Checking exceptions
2023-06-07 16:43:43,224:INFO:Importing libraries
2023-06-07 16:43:43,224:INFO:Copying training dataset
2023-06-07 16:43:43,283:INFO:Defining folds
2023-06-07 16:43:43,283:INFO:Declaring metric variables
2023-06-07 16:43:43,290:INFO:Importing untrained model
2023-06-07 16:43:43,297:INFO:Orthogonal Matching Pursuit Imported successfully
2023-06-07 16:43:43,309:INFO:Starting cross validation
2023-06-07 16:43:43,326:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 16:43:46,863:INFO:Calculating mean and std
2023-06-07 16:43:46,865:INFO:Creating metrics dataframe
2023-06-07 16:43:47,075:INFO:Uploading results into container
2023-06-07 16:43:47,076:INFO:Uploading model into container now
2023-06-07 16:43:47,076:INFO:_master_model_container: 7
2023-06-07 16:43:47,077:INFO:_display_container: 2
2023-06-07 16:43:47,077:INFO:OrthogonalMatchingPursuit()
2023-06-07 16:43:47,077:INFO:create_model() successfully completed......................................
2023-06-07 16:43:47,216:INFO:SubProcess create_model() end ==================================
2023-06-07 16:43:47,216:INFO:Creating metrics dataframe
2023-06-07 16:43:47,234:INFO:Initializing Bayesian Ridge
2023-06-07 16:43:47,235:INFO:Total runtime is 1.0898642857869467 minutes
2023-06-07 16:43:47,241:INFO:SubProcess create_model() called ==================================
2023-06-07 16:43:47,241:INFO:Initializing create_model()
2023-06-07 16:43:47,241:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021EB7B9E1A0>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021EB7B23A30>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 16:43:47,241:INFO:Checking exceptions
2023-06-07 16:43:47,242:INFO:Importing libraries
2023-06-07 16:43:47,242:INFO:Copying training dataset
2023-06-07 16:43:47,297:INFO:Defining folds
2023-06-07 16:43:47,297:INFO:Declaring metric variables
2023-06-07 16:43:47,303:INFO:Importing untrained model
2023-06-07 16:43:47,309:INFO:Bayesian Ridge Imported successfully
2023-06-07 16:43:47,318:INFO:Starting cross validation
2023-06-07 16:43:47,335:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 16:43:52,352:INFO:Calculating mean and std
2023-06-07 16:43:52,354:INFO:Creating metrics dataframe
2023-06-07 16:43:52,544:INFO:Uploading results into container
2023-06-07 16:43:52,545:INFO:Uploading model into container now
2023-06-07 16:43:52,545:INFO:_master_model_container: 8
2023-06-07 16:43:52,545:INFO:_display_container: 2
2023-06-07 16:43:52,546:INFO:BayesianRidge()
2023-06-07 16:43:52,546:INFO:create_model() successfully completed......................................
2023-06-07 16:43:52,678:INFO:SubProcess create_model() end ==================================
2023-06-07 16:43:52,678:INFO:Creating metrics dataframe
2023-06-07 16:43:52,694:INFO:Initializing Passive Aggressive Regressor
2023-06-07 16:43:52,695:INFO:Total runtime is 1.1808581988016766 minutes
2023-06-07 16:43:52,700:INFO:SubProcess create_model() called ==================================
2023-06-07 16:43:52,700:INFO:Initializing create_model()
2023-06-07 16:43:52,700:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021EB7B9E1A0>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021EB7B23A30>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 16:43:52,700:INFO:Checking exceptions
2023-06-07 16:43:52,700:INFO:Importing libraries
2023-06-07 16:43:52,701:INFO:Copying training dataset
2023-06-07 16:43:52,759:INFO:Defining folds
2023-06-07 16:43:52,759:INFO:Declaring metric variables
2023-06-07 16:43:52,764:INFO:Importing untrained model
2023-06-07 16:43:52,770:INFO:Passive Aggressive Regressor Imported successfully
2023-06-07 16:43:52,780:INFO:Starting cross validation
2023-06-07 16:43:52,797:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 16:43:57,081:INFO:Calculating mean and std
2023-06-07 16:43:57,083:INFO:Creating metrics dataframe
2023-06-07 16:43:57,284:INFO:Uploading results into container
2023-06-07 16:43:57,285:INFO:Uploading model into container now
2023-06-07 16:43:57,286:INFO:_master_model_container: 9
2023-06-07 16:43:57,286:INFO:_display_container: 2
2023-06-07 16:43:57,286:INFO:PassiveAggressiveRegressor(random_state=123)
2023-06-07 16:43:57,287:INFO:create_model() successfully completed......................................
2023-06-07 16:43:57,419:INFO:SubProcess create_model() end ==================================
2023-06-07 16:43:57,419:INFO:Creating metrics dataframe
2023-06-07 16:43:57,436:INFO:Initializing Huber Regressor
2023-06-07 16:43:57,436:INFO:Total runtime is 1.2598767320315045 minutes
2023-06-07 16:43:57,441:INFO:SubProcess create_model() called ==================================
2023-06-07 16:43:57,441:INFO:Initializing create_model()
2023-06-07 16:43:57,442:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021EB7B9E1A0>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021EB7B23A30>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 16:43:57,442:INFO:Checking exceptions
2023-06-07 16:43:57,442:INFO:Importing libraries
2023-06-07 16:43:57,442:INFO:Copying training dataset
2023-06-07 16:43:57,500:INFO:Defining folds
2023-06-07 16:43:57,500:INFO:Declaring metric variables
2023-06-07 16:43:57,507:INFO:Importing untrained model
2023-06-07 16:43:57,512:INFO:Huber Regressor Imported successfully
2023-06-07 16:43:57,521:INFO:Starting cross validation
2023-06-07 16:43:57,538:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 16:44:02,326:INFO:Calculating mean and std
2023-06-07 16:44:02,329:INFO:Creating metrics dataframe
2023-06-07 16:44:02,552:INFO:Uploading results into container
2023-06-07 16:44:02,553:INFO:Uploading model into container now
2023-06-07 16:44:02,554:INFO:_master_model_container: 10
2023-06-07 16:44:02,554:INFO:_display_container: 2
2023-06-07 16:44:02,555:INFO:HuberRegressor()
2023-06-07 16:44:02,557:INFO:create_model() successfully completed......................................
2023-06-07 16:44:02,712:INFO:SubProcess create_model() end ==================================
2023-06-07 16:44:02,712:INFO:Creating metrics dataframe
2023-06-07 16:44:02,740:INFO:Initializing K Neighbors Regressor
2023-06-07 16:44:02,740:INFO:Total runtime is 1.348281013965607 minutes
2023-06-07 16:44:02,748:INFO:SubProcess create_model() called ==================================
2023-06-07 16:44:02,748:INFO:Initializing create_model()
2023-06-07 16:44:02,749:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021EB7B9E1A0>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021EB7B23A30>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 16:44:02,749:INFO:Checking exceptions
2023-06-07 16:44:02,749:INFO:Importing libraries
2023-06-07 16:44:02,750:INFO:Copying training dataset
2023-06-07 16:44:02,812:INFO:Defining folds
2023-06-07 16:44:02,812:INFO:Declaring metric variables
2023-06-07 16:44:02,842:INFO:Importing untrained model
2023-06-07 16:44:02,851:INFO:K Neighbors Regressor Imported successfully
2023-06-07 16:44:02,866:INFO:Starting cross validation
2023-06-07 16:44:02,887:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 16:44:12,198:INFO:Calculating mean and std
2023-06-07 16:44:12,199:INFO:Creating metrics dataframe
2023-06-07 16:44:12,417:INFO:Uploading results into container
2023-06-07 16:44:12,418:INFO:Uploading model into container now
2023-06-07 16:44:12,419:INFO:_master_model_container: 11
2023-06-07 16:44:12,419:INFO:_display_container: 2
2023-06-07 16:44:12,419:INFO:KNeighborsRegressor(n_jobs=-1)
2023-06-07 16:44:12,419:INFO:create_model() successfully completed......................................
2023-06-07 16:44:12,552:INFO:SubProcess create_model() end ==================================
2023-06-07 16:44:12,552:INFO:Creating metrics dataframe
2023-06-07 16:44:12,574:INFO:Initializing Decision Tree Regressor
2023-06-07 16:44:12,574:INFO:Total runtime is 1.5121753970781966 minutes
2023-06-07 16:44:12,580:INFO:SubProcess create_model() called ==================================
2023-06-07 16:44:12,580:INFO:Initializing create_model()
2023-06-07 16:44:12,580:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021EB7B9E1A0>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021EB7B23A30>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 16:44:12,581:INFO:Checking exceptions
2023-06-07 16:44:12,581:INFO:Importing libraries
2023-06-07 16:44:12,581:INFO:Copying training dataset
2023-06-07 16:44:12,637:INFO:Defining folds
2023-06-07 16:44:12,638:INFO:Declaring metric variables
2023-06-07 16:44:12,644:INFO:Importing untrained model
2023-06-07 16:44:12,650:INFO:Decision Tree Regressor Imported successfully
2023-06-07 16:44:12,664:INFO:Starting cross validation
2023-06-07 16:44:12,684:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 16:44:19,909:INFO:Calculating mean and std
2023-06-07 16:44:19,911:INFO:Creating metrics dataframe
2023-06-07 16:44:20,230:INFO:Uploading results into container
2023-06-07 16:44:20,231:INFO:Uploading model into container now
2023-06-07 16:44:20,232:INFO:_master_model_container: 12
2023-06-07 16:44:20,233:INFO:_display_container: 2
2023-06-07 16:44:20,233:INFO:DecisionTreeRegressor(random_state=123)
2023-06-07 16:44:20,234:INFO:create_model() successfully completed......................................
2023-06-07 16:44:20,371:INFO:SubProcess create_model() end ==================================
2023-06-07 16:44:20,372:INFO:Creating metrics dataframe
2023-06-07 16:44:20,400:INFO:Initializing Random Forest Regressor
2023-06-07 16:44:20,401:INFO:Total runtime is 1.6426333745320643 minutes
2023-06-07 16:44:20,421:INFO:SubProcess create_model() called ==================================
2023-06-07 16:44:20,422:INFO:Initializing create_model()
2023-06-07 16:44:20,422:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021EB7B9E1A0>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021EB7B23A30>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 16:44:20,422:INFO:Checking exceptions
2023-06-07 16:44:20,422:INFO:Importing libraries
2023-06-07 16:44:20,423:INFO:Copying training dataset
2023-06-07 16:44:20,486:INFO:Defining folds
2023-06-07 16:44:20,487:INFO:Declaring metric variables
2023-06-07 16:44:20,493:INFO:Importing untrained model
2023-06-07 16:44:20,499:INFO:Random Forest Regressor Imported successfully
2023-06-07 16:44:20,513:INFO:Starting cross validation
2023-06-07 16:44:20,530:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 16:47:59,589:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.70s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-07 16:48:00,800:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.62s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-07 16:48:01,247:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.96s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-07 16:48:01,971:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.67s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-07 16:48:03,687:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.80s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-07 16:48:03,919:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 3.58s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-07 16:48:04,378:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 4.29s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-07 16:48:05,373:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 2.28s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-07 16:48:05,778:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.49s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-07 16:48:06,580:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.65s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-07 16:48:07,031:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.81s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-07 16:48:07,360:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.86s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-07 16:49:07,179:INFO:Calculating mean and std
2023-06-07 16:49:07,181:INFO:Creating metrics dataframe
2023-06-07 16:49:07,432:INFO:Uploading results into container
2023-06-07 16:49:07,433:INFO:Uploading model into container now
2023-06-07 16:49:07,434:INFO:_master_model_container: 13
2023-06-07 16:49:07,434:INFO:_display_container: 2
2023-06-07 16:49:07,435:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2023-06-07 16:49:07,435:INFO:create_model() successfully completed......................................
2023-06-07 16:49:07,581:INFO:SubProcess create_model() end ==================================
2023-06-07 16:49:07,582:INFO:Creating metrics dataframe
2023-06-07 16:49:07,604:INFO:Initializing Extra Trees Regressor
2023-06-07 16:49:07,604:INFO:Total runtime is 6.429343529542288 minutes
2023-06-07 16:49:07,611:INFO:SubProcess create_model() called ==================================
2023-06-07 16:49:07,612:INFO:Initializing create_model()
2023-06-07 16:49:07,612:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021EB7B9E1A0>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021EB7B23A30>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 16:49:07,612:INFO:Checking exceptions
2023-06-07 16:49:07,612:INFO:Importing libraries
2023-06-07 16:49:07,613:INFO:Copying training dataset
2023-06-07 16:49:07,669:INFO:Defining folds
2023-06-07 16:49:07,670:INFO:Declaring metric variables
2023-06-07 16:49:07,676:INFO:Importing untrained model
2023-06-07 16:49:07,684:INFO:Extra Trees Regressor Imported successfully
2023-06-07 16:49:07,695:INFO:Starting cross validation
2023-06-07 16:49:07,711:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 16:50:57,817:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 3.27s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-07 16:51:01,446:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 6.31s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-07 16:51:02,826:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 6.72s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-07 16:51:05,855:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:108: UserWarning: Persisting input arguments took 0.67s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = pipeline._memory_transform(transformer, X, y)

2023-06-07 16:51:07,227:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.50s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-07 16:51:08,521:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.72s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-07 16:51:09,737:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 7.02s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-07 16:51:09,876:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 6.04s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-07 16:51:11,110:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 2.27s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-07 16:51:11,159:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 2.67s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-07 16:51:11,741:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.51s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-07 16:51:11,884:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.54s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-07 16:51:12,045:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.83s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-07 16:51:12,416:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.57s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-07 16:51:12,416:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.63s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-07 16:51:13,676:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.89s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-07 16:51:42,160:INFO:Calculating mean and std
2023-06-07 16:51:42,369:INFO:Creating metrics dataframe
2023-06-07 16:51:42,652:INFO:Uploading results into container
2023-06-07 16:51:42,671:INFO:Uploading model into container now
2023-06-07 16:51:42,676:INFO:_master_model_container: 14
2023-06-07 16:51:42,676:INFO:_display_container: 2
2023-06-07 16:51:42,679:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2023-06-07 16:51:42,679:INFO:create_model() successfully completed......................................
2023-06-07 16:51:43,054:INFO:SubProcess create_model() end ==================================
2023-06-07 16:51:43,054:INFO:Creating metrics dataframe
2023-06-07 16:51:43,096:INFO:Initializing AdaBoost Regressor
2023-06-07 16:51:43,096:INFO:Total runtime is 9.020879991849263 minutes
2023-06-07 16:51:43,103:INFO:SubProcess create_model() called ==================================
2023-06-07 16:51:43,104:INFO:Initializing create_model()
2023-06-07 16:51:43,104:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021EB7B9E1A0>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021EB7B23A30>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 16:51:43,104:INFO:Checking exceptions
2023-06-07 16:51:43,105:INFO:Importing libraries
2023-06-07 16:51:43,105:INFO:Copying training dataset
2023-06-07 16:51:43,175:INFO:Defining folds
2023-06-07 16:51:43,175:INFO:Declaring metric variables
2023-06-07 16:51:43,181:INFO:Importing untrained model
2023-06-07 16:51:43,187:INFO:AdaBoost Regressor Imported successfully
2023-06-07 16:51:43,198:INFO:Starting cross validation
2023-06-07 16:51:43,233:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 16:52:41,959:INFO:Calculating mean and std
2023-06-07 16:52:41,960:INFO:Creating metrics dataframe
2023-06-07 16:52:42,197:INFO:Uploading results into container
2023-06-07 16:52:42,198:INFO:Uploading model into container now
2023-06-07 16:52:42,199:INFO:_master_model_container: 15
2023-06-07 16:52:42,199:INFO:_display_container: 2
2023-06-07 16:52:42,200:INFO:AdaBoostRegressor(random_state=123)
2023-06-07 16:52:42,200:INFO:create_model() successfully completed......................................
2023-06-07 16:52:42,346:INFO:SubProcess create_model() end ==================================
2023-06-07 16:52:42,346:INFO:Creating metrics dataframe
2023-06-07 16:52:42,367:INFO:Initializing Gradient Boosting Regressor
2023-06-07 16:52:42,367:INFO:Total runtime is 10.008731571833293 minutes
2023-06-07 16:52:42,373:INFO:SubProcess create_model() called ==================================
2023-06-07 16:52:42,374:INFO:Initializing create_model()
2023-06-07 16:52:42,374:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021EB7B9E1A0>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021EB7B23A30>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 16:52:42,374:INFO:Checking exceptions
2023-06-07 16:52:42,374:INFO:Importing libraries
2023-06-07 16:52:42,374:INFO:Copying training dataset
2023-06-07 16:52:42,432:INFO:Defining folds
2023-06-07 16:52:42,433:INFO:Declaring metric variables
2023-06-07 16:52:42,438:INFO:Importing untrained model
2023-06-07 16:52:42,446:INFO:Gradient Boosting Regressor Imported successfully
2023-06-07 16:52:42,457:INFO:Starting cross validation
2023-06-07 16:52:42,475:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 16:54:09,467:INFO:Calculating mean and std
2023-06-07 16:54:09,468:INFO:Creating metrics dataframe
2023-06-07 16:54:09,748:INFO:Uploading results into container
2023-06-07 16:54:09,749:INFO:Uploading model into container now
2023-06-07 16:54:09,749:INFO:_master_model_container: 16
2023-06-07 16:54:09,750:INFO:_display_container: 2
2023-06-07 16:54:09,750:INFO:GradientBoostingRegressor(random_state=123)
2023-06-07 16:54:09,750:INFO:create_model() successfully completed......................................
2023-06-07 16:54:09,885:INFO:SubProcess create_model() end ==================================
2023-06-07 16:54:09,886:INFO:Creating metrics dataframe
2023-06-07 16:54:09,906:INFO:Initializing Light Gradient Boosting Machine
2023-06-07 16:54:09,906:INFO:Total runtime is 11.467714111010233 minutes
2023-06-07 16:54:09,913:INFO:SubProcess create_model() called ==================================
2023-06-07 16:54:09,914:INFO:Initializing create_model()
2023-06-07 16:54:09,914:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021EB7B9E1A0>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021EB7B23A30>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 16:54:09,914:INFO:Checking exceptions
2023-06-07 16:54:09,915:INFO:Importing libraries
2023-06-07 16:54:09,915:INFO:Copying training dataset
2023-06-07 16:54:09,971:INFO:Defining folds
2023-06-07 16:54:09,972:INFO:Declaring metric variables
2023-06-07 16:54:09,978:INFO:Importing untrained model
2023-06-07 16:54:09,984:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-07 16:54:09,994:INFO:Starting cross validation
2023-06-07 16:54:10,012:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 16:54:22,144:INFO:Calculating mean and std
2023-06-07 16:54:22,145:INFO:Creating metrics dataframe
2023-06-07 16:54:22,413:INFO:Uploading results into container
2023-06-07 16:54:22,414:INFO:Uploading model into container now
2023-06-07 16:54:22,415:INFO:_master_model_container: 17
2023-06-07 16:54:22,415:INFO:_display_container: 2
2023-06-07 16:54:22,415:INFO:LGBMRegressor(random_state=123)
2023-06-07 16:54:22,416:INFO:create_model() successfully completed......................................
2023-06-07 16:54:22,547:INFO:SubProcess create_model() end ==================================
2023-06-07 16:54:22,547:INFO:Creating metrics dataframe
2023-06-07 16:54:22,569:INFO:Initializing Dummy Regressor
2023-06-07 16:54:22,569:INFO:Total runtime is 11.678763902187347 minutes
2023-06-07 16:54:22,575:INFO:SubProcess create_model() called ==================================
2023-06-07 16:54:22,576:INFO:Initializing create_model()
2023-06-07 16:54:22,576:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021EB7B9E1A0>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021EB7B23A30>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 16:54:22,576:INFO:Checking exceptions
2023-06-07 16:54:22,577:INFO:Importing libraries
2023-06-07 16:54:22,577:INFO:Copying training dataset
2023-06-07 16:54:22,633:INFO:Defining folds
2023-06-07 16:54:22,633:INFO:Declaring metric variables
2023-06-07 16:54:22,638:INFO:Importing untrained model
2023-06-07 16:54:22,644:INFO:Dummy Regressor Imported successfully
2023-06-07 16:54:22,654:INFO:Starting cross validation
2023-06-07 16:54:22,693:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 16:54:26,025:INFO:Calculating mean and std
2023-06-07 16:54:26,027:INFO:Creating metrics dataframe
2023-06-07 16:54:26,295:INFO:Uploading results into container
2023-06-07 16:54:26,297:INFO:Uploading model into container now
2023-06-07 16:54:26,297:INFO:_master_model_container: 18
2023-06-07 16:54:26,297:INFO:_display_container: 2
2023-06-07 16:54:26,298:INFO:DummyRegressor()
2023-06-07 16:54:26,298:INFO:create_model() successfully completed......................................
2023-06-07 16:54:26,429:INFO:SubProcess create_model() end ==================================
2023-06-07 16:54:26,430:INFO:Creating metrics dataframe
2023-06-07 16:54:26,467:INFO:Initializing create_model()
2023-06-07 16:54:26,467:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021EB7B9E1A0>, estimator=RandomForestRegressor(n_jobs=-1, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-07 16:54:26,467:INFO:Checking exceptions
2023-06-07 16:54:26,473:INFO:Importing libraries
2023-06-07 16:54:26,474:INFO:Copying training dataset
2023-06-07 16:54:26,528:INFO:Defining folds
2023-06-07 16:54:26,528:INFO:Declaring metric variables
2023-06-07 16:54:26,528:INFO:Importing untrained model
2023-06-07 16:54:26,528:INFO:Declaring custom model
2023-06-07 16:54:26,529:INFO:Random Forest Regressor Imported successfully
2023-06-07 16:54:26,543:INFO:Cross validation set to False
2023-06-07 16:54:26,543:INFO:Fitting Model
2023-06-07 16:54:59,365:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2023-06-07 16:54:59,365:INFO:create_model() successfully completed......................................
2023-06-07 16:54:59,648:INFO:_master_model_container: 18
2023-06-07 16:54:59,648:INFO:_display_container: 2
2023-06-07 16:54:59,649:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2023-06-07 16:54:59,649:INFO:compare_models() successfully completed......................................
2023-06-07 16:56:27,048:INFO:Initializing create_model()
2023-06-07 16:56:27,048:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021EB7B9E1A0>, estimator=lightgbm, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-07 16:56:27,048:INFO:Checking exceptions
2023-06-07 16:56:27,076:INFO:Importing libraries
2023-06-07 16:56:27,077:INFO:Copying training dataset
2023-06-07 16:56:27,150:INFO:Defining folds
2023-06-07 16:56:27,151:INFO:Declaring metric variables
2023-06-07 16:56:27,156:INFO:Importing untrained model
2023-06-07 16:56:27,164:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-07 16:56:27,176:INFO:Starting cross validation
2023-06-07 16:56:27,194:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 16:56:31,306:INFO:Calculating mean and std
2023-06-07 16:56:31,309:INFO:Creating metrics dataframe
2023-06-07 16:56:31,318:INFO:Finalizing model
2023-06-07 16:56:32,605:INFO:Uploading results into container
2023-06-07 16:56:32,607:INFO:Uploading model into container now
2023-06-07 16:56:32,623:INFO:_master_model_container: 19
2023-06-07 16:56:32,623:INFO:_display_container: 3
2023-06-07 16:56:32,624:INFO:LGBMRegressor(random_state=123)
2023-06-07 16:56:32,625:INFO:create_model() successfully completed......................................
2023-06-07 17:00:45,040:INFO:PyCaret RegressionExperiment
2023-06-07 17:00:45,040:INFO:Logging name: reg-default-name
2023-06-07 17:00:45,041:INFO:ML Usecase: MLUsecase.REGRESSION
2023-06-07 17:00:45,041:INFO:version 3.0.2
2023-06-07 17:00:45,041:INFO:Initializing setup()
2023-06-07 17:00:45,041:INFO:self.USI: 81af
2023-06-07 17:00:45,041:INFO:self._variable_keys: {'fold_shuffle_param', 'log_plots_param', 'exp_id', 'seed', 'USI', 'X_test', 'y', 'pipeline', 'X_train', 'fold_generator', 'fold_groups_param', 'data', 'y_test', 'gpu_n_jobs_param', 'memory', '_available_plots', 'X', 'exp_name_log', '_ml_usecase', 'transform_target_param', 'target_param', 'y_train', 'idx', 'html_param', 'gpu_param', 'n_jobs_param', 'logging_param'}
2023-06-07 17:00:45,041:INFO:Checking environment
2023-06-07 17:00:45,041:INFO:python_version: 3.10.9
2023-06-07 17:00:45,041:INFO:python_build: ('main', 'Mar  1 2023 18:18:15')
2023-06-07 17:00:45,041:INFO:machine: AMD64
2023-06-07 17:00:45,041:INFO:platform: Windows-10-10.0.19041-SP0
2023-06-07 17:00:45,041:INFO:Memory: svmem(total=6378106880, available=1675767808, percent=73.7, used=4702339072, free=1675767808)
2023-06-07 17:00:45,042:INFO:Physical Core: 4
2023-06-07 17:00:45,042:INFO:Logical Core: 8
2023-06-07 17:00:45,042:INFO:Checking libraries
2023-06-07 17:00:45,042:INFO:System:
2023-06-07 17:00:45,042:INFO:    python: 3.10.9 | packaged by Anaconda, Inc. | (main, Mar  1 2023, 18:18:15) [MSC v.1916 64 bit (AMD64)]
2023-06-07 17:00:45,042:INFO:executable: c:\Users\Crossddelta\anaconda3\python.exe
2023-06-07 17:00:45,042:INFO:   machine: Windows-10-10.0.19041-SP0
2023-06-07 17:00:45,042:INFO:PyCaret required dependencies:
2023-06-07 17:00:45,042:INFO:                 pip: 22.3.1
2023-06-07 17:00:45,043:INFO:          setuptools: 65.6.3
2023-06-07 17:00:45,043:INFO:             pycaret: 3.0.2
2023-06-07 17:00:45,043:INFO:             IPython: 8.10.0
2023-06-07 17:00:45,043:INFO:          ipywidgets: 7.6.5
2023-06-07 17:00:45,043:INFO:                tqdm: 4.64.1
2023-06-07 17:00:45,043:INFO:               numpy: 1.23.5
2023-06-07 17:00:45,043:INFO:              pandas: 1.5.3
2023-06-07 17:00:45,043:INFO:              jinja2: 3.1.2
2023-06-07 17:00:45,043:INFO:               scipy: 1.10.0
2023-06-07 17:00:45,043:INFO:              joblib: 1.2.0
2023-06-07 17:00:45,043:INFO:             sklearn: 1.2.1
2023-06-07 17:00:45,043:INFO:                pyod: 1.0.9
2023-06-07 17:00:45,043:INFO:            imblearn: 0.10.1
2023-06-07 17:00:45,043:INFO:   category_encoders: 2.6.1
2023-06-07 17:00:45,044:INFO:            lightgbm: 3.3.5
2023-06-07 17:00:45,044:INFO:               numba: 0.56.4
2023-06-07 17:00:45,044:INFO:            requests: 2.28.1
2023-06-07 17:00:45,044:INFO:          matplotlib: 3.7.0
2023-06-07 17:00:45,044:INFO:          scikitplot: 0.3.7
2023-06-07 17:00:45,044:INFO:         yellowbrick: 1.5
2023-06-07 17:00:45,044:INFO:              plotly: 5.9.0
2023-06-07 17:00:45,044:INFO:             kaleido: 0.2.1
2023-06-07 17:00:45,044:INFO:         statsmodels: 0.13.5
2023-06-07 17:00:45,044:INFO:              sktime: 0.17.0
2023-06-07 17:00:45,044:INFO:               tbats: 1.1.3
2023-06-07 17:00:45,044:INFO:            pmdarima: 2.0.3
2023-06-07 17:00:45,044:INFO:              psutil: 5.9.0
2023-06-07 17:00:45,045:INFO:PyCaret optional dependencies:
2023-06-07 17:00:45,045:INFO:                shap: Not installed
2023-06-07 17:00:45,045:INFO:           interpret: Not installed
2023-06-07 17:00:45,045:INFO:                umap: Not installed
2023-06-07 17:00:45,045:INFO:    pandas_profiling: Not installed
2023-06-07 17:00:45,045:INFO:  explainerdashboard: Not installed
2023-06-07 17:00:45,045:INFO:             autoviz: Not installed
2023-06-07 17:00:45,045:INFO:           fairlearn: Not installed
2023-06-07 17:00:45,045:INFO:             xgboost: Not installed
2023-06-07 17:00:45,045:INFO:            catboost: Not installed
2023-06-07 17:00:45,045:INFO:              kmodes: Not installed
2023-06-07 17:00:45,046:INFO:             mlxtend: Not installed
2023-06-07 17:00:45,046:INFO:       statsforecast: Not installed
2023-06-07 17:00:45,046:INFO:        tune_sklearn: Not installed
2023-06-07 17:00:45,046:INFO:                 ray: Not installed
2023-06-07 17:00:45,046:INFO:            hyperopt: Not installed
2023-06-07 17:00:45,046:INFO:              optuna: Not installed
2023-06-07 17:00:45,046:INFO:               skopt: Not installed
2023-06-07 17:00:45,046:INFO:              mlflow: Not installed
2023-06-07 17:00:45,046:INFO:              gradio: Not installed
2023-06-07 17:00:45,046:INFO:             fastapi: Not installed
2023-06-07 17:00:45,046:INFO:             uvicorn: Not installed
2023-06-07 17:00:45,046:INFO:              m2cgen: Not installed
2023-06-07 17:00:45,046:INFO:           evidently: Not installed
2023-06-07 17:00:45,047:INFO:               fugue: Not installed
2023-06-07 17:00:45,047:INFO:           streamlit: Not installed
2023-06-07 17:00:45,047:INFO:             prophet: Not installed
2023-06-07 17:00:45,047:INFO:None
2023-06-07 17:00:45,047:INFO:Set up data.
2023-06-07 17:00:45,253:INFO:Set up train/test split.
2023-06-07 17:00:45,320:INFO:Set up index.
2023-06-07 17:00:45,323:INFO:Set up folding strategy.
2023-06-07 17:00:45,324:INFO:Assigning column types.
2023-06-07 17:00:45,370:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-07 17:00:45,371:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-07 17:00:45,378:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-07 17:00:45,385:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-07 17:00:45,517:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 17:00:45,587:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-07 17:00:45,588:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 17:00:45,588:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 17:00:45,589:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-07 17:00:45,596:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-07 17:00:45,603:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-07 17:00:45,738:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 17:00:45,809:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-07 17:00:45,810:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 17:00:45,810:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 17:00:45,811:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-06-07 17:00:45,818:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-07 17:00:45,825:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-07 17:00:45,957:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 17:00:46,027:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-07 17:00:46,028:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 17:00:46,028:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 17:00:46,036:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-07 17:00:46,044:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-07 17:00:46,176:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 17:00:46,247:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-07 17:00:46,248:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 17:00:46,248:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 17:00:46,248:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-06-07 17:00:46,263:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-07 17:00:46,417:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 17:00:46,491:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-07 17:00:46,493:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 17:00:46,493:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 17:00:46,508:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-07 17:00:46,640:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 17:00:46,711:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-07 17:00:46,712:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 17:00:46,713:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 17:00:46,713:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-06-07 17:00:46,867:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 17:00:46,935:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-07 17:00:46,936:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 17:00:46,936:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 17:00:47,098:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 17:00:47,168:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-07 17:00:47,169:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 17:00:47,169:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 17:00:47,169:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-07 17:00:47,313:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 17:00:47,390:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 17:00:47,391:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 17:00:47,552:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 17:00:47,657:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 17:00:47,658:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 17:00:47,661:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-06-07 17:00:47,911:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 17:00:47,911:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 17:00:48,140:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 17:00:48,149:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 17:00:48,151:INFO:Preparing preprocessing pipeline...
2023-06-07 17:00:48,151:INFO:Set up simple imputation.
2023-06-07 17:00:48,183:INFO:Set up encoding of categorical features.
2023-06-07 17:00:48,540:INFO:Finished creating preprocessing pipeline.
2023-06-07 17:00:48,552:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\CROSSD~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['codigo_ibge', 'latitude',
                                             'longitude', 'T2M_RANGE', 'TS',
                                             'T2MDEW', 'T2MWET', 'T2M_MAX',
                                             'T2M_MIN', 'T2M', 'QV2M', 'RH2M',
                                             'PRECTOTCORR', 'WS2M', 'WS2M_MAX',
                                             'WS2M_MIN', 'WS2M_RANGE', 'WS10M',
                                             'WS10M_MAX', 'WS10M_MIN',
                                             'WS10M_RANGE'...
                                             'WS50M_RANGE', 'GWETTOP',
                                             'GWETROOT', 'GWETPROF',
                                             'ALLSKY_SFC_SW_DWN',
                                             'CLRSKY_SFC_SW_DWN', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['data'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rest_encoding',
                 TransformerWrapper(include=['data'],
                                    transformer=TargetEncoder(cols=['data'],
                                                              handle_missing='return_nan')))])
2023-06-07 17:00:48,552:INFO:Creating final display dataframe.
2023-06-07 17:00:49,383:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target                PS
2                   Target type        Regression
3           Original data shape       (80000, 38)
4        Transformed data shape       (80000, 38)
5   Transformed train set shape       (56000, 38)
6    Transformed test set shape       (24000, 38)
7              Numeric features                36
8          Categorical features                 1
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15               Fold Generator             KFold
16                  Fold Number                10
17                     CPU Jobs                -1
18                      Use GPU             False
19               Log Experiment             False
20              Experiment Name  reg-default-name
21                          USI              81af
2023-06-07 17:00:49,621:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 17:00:49,621:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 17:00:49,837:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 17:00:49,837:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 17:00:49,838:INFO:setup() successfully completed in 5.06s...............
2023-06-07 17:01:33,114:INFO:Initializing compare_models()
2023-06-07 17:01:33,115:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021EE58284F0>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x0000021EE58284F0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2023-06-07 17:01:33,115:INFO:Checking exceptions
2023-06-07 17:01:33,145:INFO:Preparing display monitor
2023-06-07 17:01:33,209:INFO:Initializing Linear Regression
2023-06-07 17:01:33,209:INFO:Total runtime is 0.0 minutes
2023-06-07 17:01:33,214:INFO:SubProcess create_model() called ==================================
2023-06-07 17:01:33,214:INFO:Initializing create_model()
2023-06-07 17:01:33,215:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021EE58284F0>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021EEFE364A0>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 17:01:33,215:INFO:Checking exceptions
2023-06-07 17:01:33,215:INFO:Importing libraries
2023-06-07 17:01:33,215:INFO:Copying training dataset
2023-06-07 17:01:33,276:INFO:Defining folds
2023-06-07 17:01:33,276:INFO:Declaring metric variables
2023-06-07 17:01:33,282:INFO:Importing untrained model
2023-06-07 17:01:33,287:INFO:Linear Regression Imported successfully
2023-06-07 17:01:33,299:INFO:Starting cross validation
2023-06-07 17:01:33,301:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 17:01:49,917:INFO:Calculating mean and std
2023-06-07 17:01:49,919:INFO:Creating metrics dataframe
2023-06-07 17:01:50,223:INFO:Uploading results into container
2023-06-07 17:01:50,224:INFO:Uploading model into container now
2023-06-07 17:01:50,226:INFO:_master_model_container: 1
2023-06-07 17:01:50,226:INFO:_display_container: 2
2023-06-07 17:01:50,227:INFO:LinearRegression(n_jobs=-1)
2023-06-07 17:01:50,227:INFO:create_model() successfully completed......................................
2023-06-07 17:01:50,372:INFO:SubProcess create_model() end ==================================
2023-06-07 17:01:50,372:INFO:Creating metrics dataframe
2023-06-07 17:01:50,383:INFO:Initializing Lasso Regression
2023-06-07 17:01:50,383:INFO:Total runtime is 0.2862348039944967 minutes
2023-06-07 17:01:50,388:INFO:SubProcess create_model() called ==================================
2023-06-07 17:01:50,389:INFO:Initializing create_model()
2023-06-07 17:01:50,389:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021EE58284F0>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021EEFE364A0>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 17:01:50,389:INFO:Checking exceptions
2023-06-07 17:01:50,389:INFO:Importing libraries
2023-06-07 17:01:50,389:INFO:Copying training dataset
2023-06-07 17:01:50,452:INFO:Defining folds
2023-06-07 17:01:50,453:INFO:Declaring metric variables
2023-06-07 17:01:50,460:INFO:Importing untrained model
2023-06-07 17:01:50,466:INFO:Lasso Regression Imported successfully
2023-06-07 17:01:50,476:INFO:Starting cross validation
2023-06-07 17:01:50,479:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 17:01:54,708:INFO:Calculating mean and std
2023-06-07 17:01:54,710:INFO:Creating metrics dataframe
2023-06-07 17:01:55,011:INFO:Uploading results into container
2023-06-07 17:01:55,012:INFO:Uploading model into container now
2023-06-07 17:01:55,012:INFO:_master_model_container: 2
2023-06-07 17:01:55,013:INFO:_display_container: 2
2023-06-07 17:01:55,013:INFO:Lasso(random_state=123)
2023-06-07 17:01:55,013:INFO:create_model() successfully completed......................................
2023-06-07 17:01:55,149:INFO:SubProcess create_model() end ==================================
2023-06-07 17:01:55,150:INFO:Creating metrics dataframe
2023-06-07 17:01:55,166:INFO:Initializing Ridge Regression
2023-06-07 17:01:55,167:INFO:Total runtime is 0.36594899098078415 minutes
2023-06-07 17:01:55,172:INFO:SubProcess create_model() called ==================================
2023-06-07 17:01:55,173:INFO:Initializing create_model()
2023-06-07 17:01:55,173:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021EE58284F0>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021EEFE364A0>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 17:01:55,173:INFO:Checking exceptions
2023-06-07 17:01:55,173:INFO:Importing libraries
2023-06-07 17:01:55,174:INFO:Copying training dataset
2023-06-07 17:01:55,249:INFO:Defining folds
2023-06-07 17:01:55,250:INFO:Declaring metric variables
2023-06-07 17:01:55,256:INFO:Importing untrained model
2023-06-07 17:01:55,265:INFO:Ridge Regression Imported successfully
2023-06-07 17:01:55,279:INFO:Starting cross validation
2023-06-07 17:01:55,281:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 17:01:59,523:INFO:Calculating mean and std
2023-06-07 17:01:59,524:INFO:Creating metrics dataframe
2023-06-07 17:01:59,847:INFO:Uploading results into container
2023-06-07 17:01:59,849:INFO:Uploading model into container now
2023-06-07 17:01:59,849:INFO:_master_model_container: 3
2023-06-07 17:01:59,849:INFO:_display_container: 2
2023-06-07 17:01:59,850:INFO:Ridge(random_state=123)
2023-06-07 17:01:59,850:INFO:create_model() successfully completed......................................
2023-06-07 17:01:59,997:INFO:SubProcess create_model() end ==================================
2023-06-07 17:01:59,997:INFO:Creating metrics dataframe
2023-06-07 17:02:00,016:INFO:Initializing Elastic Net
2023-06-07 17:02:00,016:INFO:Total runtime is 0.4467774868011475 minutes
2023-06-07 17:02:00,021:INFO:SubProcess create_model() called ==================================
2023-06-07 17:02:00,021:INFO:Initializing create_model()
2023-06-07 17:02:00,021:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021EE58284F0>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021EEFE364A0>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 17:02:00,021:INFO:Checking exceptions
2023-06-07 17:02:00,022:INFO:Importing libraries
2023-06-07 17:02:00,022:INFO:Copying training dataset
2023-06-07 17:02:00,085:INFO:Defining folds
2023-06-07 17:02:00,086:INFO:Declaring metric variables
2023-06-07 17:02:00,092:INFO:Importing untrained model
2023-06-07 17:02:00,100:INFO:Elastic Net Imported successfully
2023-06-07 17:02:00,111:INFO:Starting cross validation
2023-06-07 17:02:00,114:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 17:02:04,540:INFO:Calculating mean and std
2023-06-07 17:02:04,544:INFO:Creating metrics dataframe
2023-06-07 17:02:04,867:INFO:Uploading results into container
2023-06-07 17:02:04,868:INFO:Uploading model into container now
2023-06-07 17:02:04,869:INFO:_master_model_container: 4
2023-06-07 17:02:04,869:INFO:_display_container: 2
2023-06-07 17:02:04,870:INFO:ElasticNet(random_state=123)
2023-06-07 17:02:04,871:INFO:create_model() successfully completed......................................
2023-06-07 17:02:05,010:INFO:SubProcess create_model() end ==================================
2023-06-07 17:02:05,010:INFO:Creating metrics dataframe
2023-06-07 17:02:05,024:INFO:Initializing Least Angle Regression
2023-06-07 17:02:05,024:INFO:Total runtime is 0.5302442789077759 minutes
2023-06-07 17:02:05,030:INFO:SubProcess create_model() called ==================================
2023-06-07 17:02:05,031:INFO:Initializing create_model()
2023-06-07 17:02:05,031:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021EE58284F0>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021EEFE364A0>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 17:02:05,031:INFO:Checking exceptions
2023-06-07 17:02:05,031:INFO:Importing libraries
2023-06-07 17:02:05,031:INFO:Copying training dataset
2023-06-07 17:02:05,093:INFO:Defining folds
2023-06-07 17:02:05,093:INFO:Declaring metric variables
2023-06-07 17:02:05,099:INFO:Importing untrained model
2023-06-07 17:02:05,105:INFO:Least Angle Regression Imported successfully
2023-06-07 17:02:05,116:INFO:Starting cross validation
2023-06-07 17:02:05,118:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 17:02:08,958:INFO:Calculating mean and std
2023-06-07 17:02:08,960:INFO:Creating metrics dataframe
2023-06-07 17:02:09,281:INFO:Uploading results into container
2023-06-07 17:02:09,282:INFO:Uploading model into container now
2023-06-07 17:02:09,283:INFO:_master_model_container: 5
2023-06-07 17:02:09,283:INFO:_display_container: 2
2023-06-07 17:02:09,284:INFO:Lars(random_state=123)
2023-06-07 17:02:09,284:INFO:create_model() successfully completed......................................
2023-06-07 17:02:09,413:INFO:SubProcess create_model() end ==================================
2023-06-07 17:02:09,414:INFO:Creating metrics dataframe
2023-06-07 17:02:09,429:INFO:Initializing Lasso Least Angle Regression
2023-06-07 17:02:09,429:INFO:Total runtime is 0.6036566972732544 minutes
2023-06-07 17:02:09,434:INFO:SubProcess create_model() called ==================================
2023-06-07 17:02:09,434:INFO:Initializing create_model()
2023-06-07 17:02:09,434:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021EE58284F0>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021EEFE364A0>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 17:02:09,435:INFO:Checking exceptions
2023-06-07 17:02:09,435:INFO:Importing libraries
2023-06-07 17:02:09,435:INFO:Copying training dataset
2023-06-07 17:02:09,496:INFO:Defining folds
2023-06-07 17:02:09,496:INFO:Declaring metric variables
2023-06-07 17:02:09,502:INFO:Importing untrained model
2023-06-07 17:02:09,521:INFO:Lasso Least Angle Regression Imported successfully
2023-06-07 17:02:09,547:INFO:Starting cross validation
2023-06-07 17:02:09,550:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 17:02:13,528:INFO:Calculating mean and std
2023-06-07 17:02:13,530:INFO:Creating metrics dataframe
2023-06-07 17:02:13,845:INFO:Uploading results into container
2023-06-07 17:02:13,846:INFO:Uploading model into container now
2023-06-07 17:02:13,846:INFO:_master_model_container: 6
2023-06-07 17:02:13,846:INFO:_display_container: 2
2023-06-07 17:02:13,847:INFO:LassoLars(random_state=123)
2023-06-07 17:02:13,847:INFO:create_model() successfully completed......................................
2023-06-07 17:02:13,981:INFO:SubProcess create_model() end ==================================
2023-06-07 17:02:13,981:INFO:Creating metrics dataframe
2023-06-07 17:02:14,001:INFO:Initializing Orthogonal Matching Pursuit
2023-06-07 17:02:14,002:INFO:Total runtime is 0.6798814336458843 minutes
2023-06-07 17:02:14,007:INFO:SubProcess create_model() called ==================================
2023-06-07 17:02:14,008:INFO:Initializing create_model()
2023-06-07 17:02:14,008:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021EE58284F0>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021EEFE364A0>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 17:02:14,008:INFO:Checking exceptions
2023-06-07 17:02:14,009:INFO:Importing libraries
2023-06-07 17:02:14,009:INFO:Copying training dataset
2023-06-07 17:02:14,069:INFO:Defining folds
2023-06-07 17:02:14,069:INFO:Declaring metric variables
2023-06-07 17:02:14,074:INFO:Importing untrained model
2023-06-07 17:02:14,079:INFO:Orthogonal Matching Pursuit Imported successfully
2023-06-07 17:02:14,088:INFO:Starting cross validation
2023-06-07 17:02:14,090:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 17:02:18,641:INFO:Calculating mean and std
2023-06-07 17:02:18,642:INFO:Creating metrics dataframe
2023-06-07 17:02:18,958:INFO:Uploading results into container
2023-06-07 17:02:18,958:INFO:Uploading model into container now
2023-06-07 17:02:18,960:INFO:_master_model_container: 7
2023-06-07 17:02:18,961:INFO:_display_container: 2
2023-06-07 17:02:18,961:INFO:OrthogonalMatchingPursuit()
2023-06-07 17:02:18,962:INFO:create_model() successfully completed......................................
2023-06-07 17:02:19,096:INFO:SubProcess create_model() end ==================================
2023-06-07 17:02:19,096:INFO:Creating metrics dataframe
2023-06-07 17:02:19,113:INFO:Initializing Bayesian Ridge
2023-06-07 17:02:19,113:INFO:Total runtime is 0.7650664448738099 minutes
2023-06-07 17:02:19,114:INFO:SubProcess create_model() called ==================================
2023-06-07 17:02:19,114:INFO:Initializing create_model()
2023-06-07 17:02:19,114:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021EE58284F0>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021EEFE364A0>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 17:02:19,114:INFO:Checking exceptions
2023-06-07 17:02:19,114:INFO:Importing libraries
2023-06-07 17:02:19,114:INFO:Copying training dataset
2023-06-07 17:02:19,178:INFO:Defining folds
2023-06-07 17:02:19,179:INFO:Declaring metric variables
2023-06-07 17:02:19,185:INFO:Importing untrained model
2023-06-07 17:02:19,191:INFO:Bayesian Ridge Imported successfully
2023-06-07 17:02:19,200:INFO:Starting cross validation
2023-06-07 17:02:19,203:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 17:02:25,019:INFO:Calculating mean and std
2023-06-07 17:02:25,020:INFO:Creating metrics dataframe
2023-06-07 17:02:25,351:INFO:Uploading results into container
2023-06-07 17:02:25,352:INFO:Uploading model into container now
2023-06-07 17:02:25,352:INFO:_master_model_container: 8
2023-06-07 17:02:25,352:INFO:_display_container: 2
2023-06-07 17:02:25,353:INFO:BayesianRidge()
2023-06-07 17:02:25,353:INFO:create_model() successfully completed......................................
2023-06-07 17:02:25,492:INFO:SubProcess create_model() end ==================================
2023-06-07 17:02:25,492:INFO:Creating metrics dataframe
2023-06-07 17:02:25,508:INFO:Initializing Passive Aggressive Regressor
2023-06-07 17:02:25,508:INFO:Total runtime is 0.8716506282488506 minutes
2023-06-07 17:02:25,515:INFO:SubProcess create_model() called ==================================
2023-06-07 17:02:25,516:INFO:Initializing create_model()
2023-06-07 17:02:25,516:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021EE58284F0>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021EEFE364A0>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 17:02:25,516:INFO:Checking exceptions
2023-06-07 17:02:25,516:INFO:Importing libraries
2023-06-07 17:02:25,516:INFO:Copying training dataset
2023-06-07 17:02:25,572:INFO:Defining folds
2023-06-07 17:02:25,573:INFO:Declaring metric variables
2023-06-07 17:02:25,578:INFO:Importing untrained model
2023-06-07 17:02:25,583:INFO:Passive Aggressive Regressor Imported successfully
2023-06-07 17:02:25,592:INFO:Starting cross validation
2023-06-07 17:02:25,595:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 17:02:29,818:INFO:Calculating mean and std
2023-06-07 17:02:29,819:INFO:Creating metrics dataframe
2023-06-07 17:02:30,156:INFO:Uploading results into container
2023-06-07 17:02:30,157:INFO:Uploading model into container now
2023-06-07 17:02:30,158:INFO:_master_model_container: 9
2023-06-07 17:02:30,158:INFO:_display_container: 2
2023-06-07 17:02:30,158:INFO:PassiveAggressiveRegressor(random_state=123)
2023-06-07 17:02:30,161:INFO:create_model() successfully completed......................................
2023-06-07 17:02:30,324:INFO:SubProcess create_model() end ==================================
2023-06-07 17:02:30,324:INFO:Creating metrics dataframe
2023-06-07 17:02:30,343:INFO:Initializing Huber Regressor
2023-06-07 17:02:30,343:INFO:Total runtime is 0.9522350231806439 minutes
2023-06-07 17:02:30,349:INFO:SubProcess create_model() called ==================================
2023-06-07 17:02:30,349:INFO:Initializing create_model()
2023-06-07 17:02:30,349:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021EE58284F0>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021EEFE364A0>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 17:02:30,350:INFO:Checking exceptions
2023-06-07 17:02:30,350:INFO:Importing libraries
2023-06-07 17:02:30,350:INFO:Copying training dataset
2023-06-07 17:02:30,407:INFO:Defining folds
2023-06-07 17:02:30,407:INFO:Declaring metric variables
2023-06-07 17:02:30,413:INFO:Importing untrained model
2023-06-07 17:02:30,418:INFO:Huber Regressor Imported successfully
2023-06-07 17:02:30,428:INFO:Starting cross validation
2023-06-07 17:02:30,431:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 17:02:35,882:INFO:Calculating mean and std
2023-06-07 17:02:35,884:INFO:Creating metrics dataframe
2023-06-07 17:02:36,231:INFO:Uploading results into container
2023-06-07 17:02:36,232:INFO:Uploading model into container now
2023-06-07 17:02:36,233:INFO:_master_model_container: 10
2023-06-07 17:02:36,233:INFO:_display_container: 2
2023-06-07 17:02:36,234:INFO:HuberRegressor()
2023-06-07 17:02:36,234:INFO:create_model() successfully completed......................................
2023-06-07 17:02:36,369:INFO:SubProcess create_model() end ==================================
2023-06-07 17:02:36,370:INFO:Creating metrics dataframe
2023-06-07 17:02:36,388:INFO:Initializing K Neighbors Regressor
2023-06-07 17:02:36,388:INFO:Total runtime is 1.0529759923617048 minutes
2023-06-07 17:02:36,394:INFO:SubProcess create_model() called ==================================
2023-06-07 17:02:36,395:INFO:Initializing create_model()
2023-06-07 17:02:36,395:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021EE58284F0>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021EEFE364A0>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 17:02:36,395:INFO:Checking exceptions
2023-06-07 17:02:36,395:INFO:Importing libraries
2023-06-07 17:02:36,396:INFO:Copying training dataset
2023-06-07 17:02:36,453:INFO:Defining folds
2023-06-07 17:02:36,453:INFO:Declaring metric variables
2023-06-07 17:02:36,461:INFO:Importing untrained model
2023-06-07 17:02:36,466:INFO:K Neighbors Regressor Imported successfully
2023-06-07 17:02:36,477:INFO:Starting cross validation
2023-06-07 17:02:36,479:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 17:02:45,394:INFO:Calculating mean and std
2023-06-07 17:02:45,395:INFO:Creating metrics dataframe
2023-06-07 17:02:45,753:INFO:Uploading results into container
2023-06-07 17:02:45,754:INFO:Uploading model into container now
2023-06-07 17:02:45,754:INFO:_master_model_container: 11
2023-06-07 17:02:45,755:INFO:_display_container: 2
2023-06-07 17:02:45,755:INFO:KNeighborsRegressor(n_jobs=-1)
2023-06-07 17:02:45,756:INFO:create_model() successfully completed......................................
2023-06-07 17:02:45,892:INFO:SubProcess create_model() end ==================================
2023-06-07 17:02:45,892:INFO:Creating metrics dataframe
2023-06-07 17:02:45,908:INFO:Initializing Decision Tree Regressor
2023-06-07 17:02:45,908:INFO:Total runtime is 1.2116526087125146 minutes
2023-06-07 17:02:45,916:INFO:SubProcess create_model() called ==================================
2023-06-07 17:02:45,916:INFO:Initializing create_model()
2023-06-07 17:02:45,917:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021EE58284F0>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021EEFE364A0>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 17:02:45,917:INFO:Checking exceptions
2023-06-07 17:02:45,917:INFO:Importing libraries
2023-06-07 17:02:45,917:INFO:Copying training dataset
2023-06-07 17:02:45,975:INFO:Defining folds
2023-06-07 17:02:45,975:INFO:Declaring metric variables
2023-06-07 17:02:45,983:INFO:Importing untrained model
2023-06-07 17:02:45,989:INFO:Decision Tree Regressor Imported successfully
2023-06-07 17:02:46,000:INFO:Starting cross validation
2023-06-07 17:02:46,004:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 17:02:53,094:INFO:Calculating mean and std
2023-06-07 17:02:53,096:INFO:Creating metrics dataframe
2023-06-07 17:02:53,460:INFO:Uploading results into container
2023-06-07 17:02:53,462:INFO:Uploading model into container now
2023-06-07 17:02:53,462:INFO:_master_model_container: 12
2023-06-07 17:02:53,463:INFO:_display_container: 2
2023-06-07 17:02:53,463:INFO:DecisionTreeRegressor(random_state=123)
2023-06-07 17:02:53,464:INFO:create_model() successfully completed......................................
2023-06-07 17:02:53,598:INFO:SubProcess create_model() end ==================================
2023-06-07 17:02:53,598:INFO:Creating metrics dataframe
2023-06-07 17:02:53,616:INFO:Initializing Random Forest Regressor
2023-06-07 17:02:53,616:INFO:Total runtime is 1.3401064197222394 minutes
2023-06-07 17:02:53,621:INFO:SubProcess create_model() called ==================================
2023-06-07 17:02:53,621:INFO:Initializing create_model()
2023-06-07 17:02:53,621:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021EE58284F0>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021EEFE364A0>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 17:02:53,622:INFO:Checking exceptions
2023-06-07 17:02:53,622:INFO:Importing libraries
2023-06-07 17:02:53,622:INFO:Copying training dataset
2023-06-07 17:02:53,684:INFO:Defining folds
2023-06-07 17:02:53,685:INFO:Declaring metric variables
2023-06-07 17:02:53,689:INFO:Importing untrained model
2023-06-07 17:02:53,696:INFO:Random Forest Regressor Imported successfully
2023-06-07 17:02:53,731:INFO:Starting cross validation
2023-06-07 17:02:53,733:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 17:06:51,320:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:108: UserWarning: Persisting input arguments took 0.70s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = pipeline._memory_transform(transformer, X, y)

2023-06-07 17:06:51,924:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.54s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-07 17:06:52,267:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.61s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-07 17:06:52,452:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.60s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-07 17:06:52,837:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.63s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-07 17:07:54,107:INFO:Calculating mean and std
2023-06-07 17:07:54,108:INFO:Creating metrics dataframe
2023-06-07 17:07:54,485:INFO:Uploading results into container
2023-06-07 17:07:54,486:INFO:Uploading model into container now
2023-06-07 17:07:54,487:INFO:_master_model_container: 13
2023-06-07 17:07:54,487:INFO:_display_container: 2
2023-06-07 17:07:54,488:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2023-06-07 17:07:54,488:INFO:create_model() successfully completed......................................
2023-06-07 17:07:54,627:INFO:SubProcess create_model() end ==================================
2023-06-07 17:07:54,628:INFO:Creating metrics dataframe
2023-06-07 17:07:54,648:INFO:Initializing Extra Trees Regressor
2023-06-07 17:07:54,649:INFO:Total runtime is 6.357325879732768 minutes
2023-06-07 17:07:54,653:INFO:SubProcess create_model() called ==================================
2023-06-07 17:07:54,654:INFO:Initializing create_model()
2023-06-07 17:07:54,654:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021EE58284F0>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021EEFE364A0>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 17:07:54,654:INFO:Checking exceptions
2023-06-07 17:07:54,654:INFO:Importing libraries
2023-06-07 17:07:54,655:INFO:Copying training dataset
2023-06-07 17:07:54,717:INFO:Defining folds
2023-06-07 17:07:54,717:INFO:Declaring metric variables
2023-06-07 17:07:54,722:INFO:Importing untrained model
2023-06-07 17:07:54,727:INFO:Extra Trees Regressor Imported successfully
2023-06-07 17:07:54,738:INFO:Starting cross validation
2023-06-07 17:07:54,740:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 17:10:07,067:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 6.66s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-07 17:10:08,440:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 5.14s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-07 17:10:10,017:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 3.47s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-07 17:10:10,701:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 5.06s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-07 17:10:10,644:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 9.05s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-07 17:10:11,028:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.56s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-07 17:10:14,463:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.61s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-07 17:10:15,135:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 2.69s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-07 17:10:15,482:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 4.74s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-07 17:10:15,682:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.73s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-07 17:10:48,323:INFO:Calculating mean and std
2023-06-07 17:10:48,559:INFO:Creating metrics dataframe
2023-06-07 17:10:49,814:INFO:Uploading results into container
2023-06-07 17:10:49,818:INFO:Uploading model into container now
2023-06-07 17:10:49,822:INFO:_master_model_container: 14
2023-06-07 17:10:49,822:INFO:_display_container: 2
2023-06-07 17:10:49,826:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2023-06-07 17:10:49,826:INFO:create_model() successfully completed......................................
2023-06-07 17:10:50,277:INFO:SubProcess create_model() end ==================================
2023-06-07 17:10:50,278:INFO:Creating metrics dataframe
2023-06-07 17:10:50,305:INFO:Initializing AdaBoost Regressor
2023-06-07 17:10:50,306:INFO:Total runtime is 9.284952580928802 minutes
2023-06-07 17:10:50,312:INFO:SubProcess create_model() called ==================================
2023-06-07 17:10:50,312:INFO:Initializing create_model()
2023-06-07 17:10:50,313:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021EE58284F0>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021EEFE364A0>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 17:10:50,313:INFO:Checking exceptions
2023-06-07 17:10:50,313:INFO:Importing libraries
2023-06-07 17:10:50,314:INFO:Copying training dataset
2023-06-07 17:10:50,438:INFO:Defining folds
2023-06-07 17:10:50,438:INFO:Declaring metric variables
2023-06-07 17:10:50,442:INFO:Importing untrained model
2023-06-07 17:10:50,448:INFO:AdaBoost Regressor Imported successfully
2023-06-07 17:10:50,457:INFO:Starting cross validation
2023-06-07 17:10:50,459:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 17:11:51,845:INFO:Calculating mean and std
2023-06-07 17:11:51,848:INFO:Creating metrics dataframe
2023-06-07 17:11:52,153:INFO:Uploading results into container
2023-06-07 17:11:52,154:INFO:Uploading model into container now
2023-06-07 17:11:52,154:INFO:_master_model_container: 15
2023-06-07 17:11:52,155:INFO:_display_container: 2
2023-06-07 17:11:52,155:INFO:AdaBoostRegressor(random_state=123)
2023-06-07 17:11:52,155:INFO:create_model() successfully completed......................................
2023-06-07 17:11:52,290:INFO:SubProcess create_model() end ==================================
2023-06-07 17:11:52,291:INFO:Creating metrics dataframe
2023-06-07 17:11:52,310:INFO:Initializing Gradient Boosting Regressor
2023-06-07 17:11:52,310:INFO:Total runtime is 10.31834389368693 minutes
2023-06-07 17:11:52,318:INFO:SubProcess create_model() called ==================================
2023-06-07 17:11:52,319:INFO:Initializing create_model()
2023-06-07 17:11:52,319:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021EE58284F0>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021EEFE364A0>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 17:11:52,319:INFO:Checking exceptions
2023-06-07 17:11:52,320:INFO:Importing libraries
2023-06-07 17:11:52,320:INFO:Copying training dataset
2023-06-07 17:11:52,376:INFO:Defining folds
2023-06-07 17:11:52,376:INFO:Declaring metric variables
2023-06-07 17:11:52,384:INFO:Importing untrained model
2023-06-07 17:11:52,390:INFO:Gradient Boosting Regressor Imported successfully
2023-06-07 17:11:52,400:INFO:Starting cross validation
2023-06-07 17:11:52,401:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 17:13:19,409:INFO:Calculating mean and std
2023-06-07 17:13:19,410:INFO:Creating metrics dataframe
2023-06-07 17:13:19,737:INFO:Uploading results into container
2023-06-07 17:13:19,738:INFO:Uploading model into container now
2023-06-07 17:13:19,739:INFO:_master_model_container: 16
2023-06-07 17:13:19,739:INFO:_display_container: 2
2023-06-07 17:13:19,740:INFO:GradientBoostingRegressor(random_state=123)
2023-06-07 17:13:19,740:INFO:create_model() successfully completed......................................
2023-06-07 17:13:19,877:INFO:SubProcess create_model() end ==================================
2023-06-07 17:13:19,877:INFO:Creating metrics dataframe
2023-06-07 17:13:19,901:INFO:Initializing Light Gradient Boosting Machine
2023-06-07 17:13:19,901:INFO:Total runtime is 11.778194896380105 minutes
2023-06-07 17:13:19,906:INFO:SubProcess create_model() called ==================================
2023-06-07 17:13:19,907:INFO:Initializing create_model()
2023-06-07 17:13:19,907:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021EE58284F0>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021EEFE364A0>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 17:13:19,907:INFO:Checking exceptions
2023-06-07 17:13:19,907:INFO:Importing libraries
2023-06-07 17:13:19,907:INFO:Copying training dataset
2023-06-07 17:13:19,963:INFO:Defining folds
2023-06-07 17:13:19,964:INFO:Declaring metric variables
2023-06-07 17:13:19,968:INFO:Importing untrained model
2023-06-07 17:13:19,972:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-07 17:13:19,981:INFO:Starting cross validation
2023-06-07 17:13:19,983:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 17:13:31,651:INFO:Calculating mean and std
2023-06-07 17:13:31,653:INFO:Creating metrics dataframe
2023-06-07 17:13:31,982:INFO:Uploading results into container
2023-06-07 17:13:31,983:INFO:Uploading model into container now
2023-06-07 17:13:31,984:INFO:_master_model_container: 17
2023-06-07 17:13:31,984:INFO:_display_container: 2
2023-06-07 17:13:31,985:INFO:LGBMRegressor(random_state=123)
2023-06-07 17:13:31,985:INFO:create_model() successfully completed......................................
2023-06-07 17:13:32,132:INFO:SubProcess create_model() end ==================================
2023-06-07 17:13:32,133:INFO:Creating metrics dataframe
2023-06-07 17:13:32,155:INFO:Initializing Dummy Regressor
2023-06-07 17:13:32,155:INFO:Total runtime is 11.982431185245513 minutes
2023-06-07 17:13:32,160:INFO:SubProcess create_model() called ==================================
2023-06-07 17:13:32,161:INFO:Initializing create_model()
2023-06-07 17:13:32,162:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021EE58284F0>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021EEFE364A0>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 17:13:32,162:INFO:Checking exceptions
2023-06-07 17:13:32,162:INFO:Importing libraries
2023-06-07 17:13:32,163:INFO:Copying training dataset
2023-06-07 17:13:32,230:INFO:Defining folds
2023-06-07 17:13:32,230:INFO:Declaring metric variables
2023-06-07 17:13:32,235:INFO:Importing untrained model
2023-06-07 17:13:32,241:INFO:Dummy Regressor Imported successfully
2023-06-07 17:13:32,253:INFO:Starting cross validation
2023-06-07 17:13:32,255:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 17:13:36,158:INFO:Calculating mean and std
2023-06-07 17:13:36,160:INFO:Creating metrics dataframe
2023-06-07 17:13:36,484:INFO:Uploading results into container
2023-06-07 17:13:36,486:INFO:Uploading model into container now
2023-06-07 17:13:36,486:INFO:_master_model_container: 18
2023-06-07 17:13:36,486:INFO:_display_container: 2
2023-06-07 17:13:36,487:INFO:DummyRegressor()
2023-06-07 17:13:36,487:INFO:create_model() successfully completed......................................
2023-06-07 17:13:36,621:INFO:SubProcess create_model() end ==================================
2023-06-07 17:13:36,622:INFO:Creating metrics dataframe
2023-06-07 17:13:36,660:INFO:Initializing create_model()
2023-06-07 17:13:36,660:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021EE58284F0>, estimator=RandomForestRegressor(n_jobs=-1, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-07 17:13:36,660:INFO:Checking exceptions
2023-06-07 17:13:36,665:INFO:Importing libraries
2023-06-07 17:13:36,665:INFO:Copying training dataset
2023-06-07 17:13:36,721:INFO:Defining folds
2023-06-07 17:13:36,721:INFO:Declaring metric variables
2023-06-07 17:13:36,721:INFO:Importing untrained model
2023-06-07 17:13:36,721:INFO:Declaring custom model
2023-06-07 17:13:36,722:INFO:Random Forest Regressor Imported successfully
2023-06-07 17:13:36,724:INFO:Cross validation set to False
2023-06-07 17:13:36,724:INFO:Fitting Model
2023-06-07 17:14:09,654:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2023-06-07 17:14:09,655:INFO:create_model() successfully completed......................................
2023-06-07 17:14:09,840:INFO:_master_model_container: 18
2023-06-07 17:14:09,841:INFO:_display_container: 2
2023-06-07 17:14:09,841:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2023-06-07 17:14:09,842:INFO:compare_models() successfully completed......................................
2023-06-07 17:14:17,703:INFO:Initializing plot_model()
2023-06-07 17:14:17,704:INFO:plot_model(plot=residuals, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=RandomForestRegressor(n_jobs=-1, random_state=123), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021EE58284F0>, system=True)
2023-06-07 17:14:17,704:INFO:Checking exceptions
2023-06-07 17:14:17,771:INFO:Preloading libraries
2023-06-07 17:14:18,063:INFO:Copying training dataset
2023-06-07 17:14:18,063:INFO:Plot type: residuals
2023-06-07 17:14:18,498:INFO:Fitting Model
2023-06-07 17:14:19,841:INFO:Scoring test/hold-out set
2023-06-07 17:14:22,422:INFO:Visual Rendered Successfully
2023-06-07 17:14:22,590:INFO:plot_model() successfully completed......................................
2023-06-07 17:15:31,191:INFO:Initializing predict_model()
2023-06-07 17:15:31,192:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021EE58284F0>, estimator=RandomForestRegressor(n_jobs=-1, random_state=123), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021EB92729E0>)
2023-06-07 17:15:31,192:INFO:Checking exceptions
2023-06-07 17:15:31,193:INFO:Preloading libraries
2023-06-07 17:17:08,543:INFO:Initializing evaluate_model()
2023-06-07 17:17:08,543:INFO:evaluate_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021EE58284F0>, estimator=RandomForestRegressor(n_jobs=-1, random_state=123), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-07 17:17:08,597:INFO:Initializing plot_model()
2023-06-07 17:17:08,597:INFO:plot_model(plot=pipeline, fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestRegressor(n_jobs=-1, random_state=123), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021EE58284F0>, system=True)
2023-06-07 17:17:08,597:INFO:Checking exceptions
2023-06-07 17:17:08,664:INFO:Preloading libraries
2023-06-07 17:17:08,980:INFO:Copying training dataset
2023-06-07 17:17:08,980:INFO:Plot type: pipeline
2023-06-07 17:17:09,198:INFO:Visual Rendered Successfully
2023-06-07 17:17:09,345:INFO:plot_model() successfully completed......................................
2023-06-07 17:17:16,584:INFO:Initializing plot_model()
2023-06-07 17:17:16,585:INFO:plot_model(plot=parameter, fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestRegressor(n_jobs=-1, random_state=123), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021EE58284F0>, system=True)
2023-06-07 17:17:16,585:INFO:Checking exceptions
2023-06-07 17:17:16,635:INFO:Preloading libraries
2023-06-07 17:17:16,866:INFO:Copying training dataset
2023-06-07 17:17:16,866:INFO:Plot type: parameter
2023-06-07 17:17:16,866:INFO:Visual Rendered Successfully
2023-06-07 17:17:16,991:INFO:plot_model() successfully completed......................................
2023-06-07 17:17:57,214:INFO:Initializing plot_model()
2023-06-07 17:17:57,215:INFO:plot_model(plot=residuals, fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestRegressor(n_jobs=-1, random_state=123), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021EE58284F0>, system=True)
2023-06-07 17:17:57,215:INFO:Checking exceptions
2023-06-07 17:17:57,263:INFO:Preloading libraries
2023-06-07 17:17:57,482:INFO:Copying training dataset
2023-06-07 17:17:57,482:INFO:Plot type: residuals
2023-06-07 17:17:57,795:INFO:Fitting Model
2023-06-07 17:17:58,781:INFO:Scoring test/hold-out set
2023-06-07 17:18:00,637:INFO:Visual Rendered Successfully
2023-06-07 17:18:00,776:INFO:plot_model() successfully completed......................................
2023-06-07 17:18:02,015:INFO:Initializing plot_model()
2023-06-07 17:18:02,015:INFO:plot_model(plot=error, fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestRegressor(n_jobs=-1, random_state=123), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021EE58284F0>, system=True)
2023-06-07 17:18:02,016:INFO:Checking exceptions
2023-06-07 17:18:02,113:INFO:Preloading libraries
2023-06-07 17:18:02,397:INFO:Copying training dataset
2023-06-07 17:18:02,397:INFO:Plot type: error
2023-06-07 17:18:02,679:INFO:Fitting Model
2023-06-07 17:18:02,679:INFO:Scoring test/hold-out set
2023-06-07 17:18:03,799:INFO:Visual Rendered Successfully
2023-06-07 17:18:03,956:INFO:plot_model() successfully completed......................................
2023-06-07 17:18:15,355:INFO:Initializing plot_model()
2023-06-07 17:18:15,355:INFO:plot_model(plot=cooks, fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestRegressor(n_jobs=-1, random_state=123), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021EE58284F0>, system=True)
2023-06-07 17:18:15,356:INFO:Checking exceptions
2023-06-07 17:18:15,398:INFO:Preloading libraries
2023-06-07 17:18:15,635:INFO:Copying training dataset
2023-06-07 17:18:15,635:INFO:Plot type: cooks
2023-06-07 17:18:15,932:INFO:Fitting Model
2023-06-07 17:18:19,205:INFO:Visual Rendered Successfully
2023-06-07 17:18:19,455:INFO:plot_model() successfully completed......................................
2023-06-07 17:18:19,584:INFO:Initializing plot_model()
2023-06-07 17:18:19,584:INFO:plot_model(plot=rfe, fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestRegressor(n_jobs=-1, random_state=123), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021EE58284F0>, system=True)
2023-06-07 17:18:19,584:INFO:Checking exceptions
2023-06-07 17:18:19,640:INFO:Preloading libraries
2023-06-07 17:18:19,935:INFO:Copying training dataset
2023-06-07 17:18:19,935:INFO:Plot type: rfe
2023-06-07 17:18:20,244:INFO:Fitting Model
2023-06-07 17:36:26,450:INFO:Initializing evaluate_model()
2023-06-07 17:36:26,451:INFO:evaluate_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021EE58284F0>, estimator=RandomForestRegressor(n_jobs=-1, random_state=123), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-07 17:36:26,495:INFO:Initializing plot_model()
2023-06-07 17:36:26,496:INFO:plot_model(plot=pipeline, fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestRegressor(n_jobs=-1, random_state=123), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021EE58284F0>, system=True)
2023-06-07 17:36:26,496:INFO:Checking exceptions
2023-06-07 17:36:26,567:INFO:Preloading libraries
2023-06-07 17:36:26,864:INFO:Copying training dataset
2023-06-07 17:36:26,865:INFO:Plot type: pipeline
2023-06-07 17:36:27,028:INFO:Visual Rendered Successfully
2023-06-07 17:36:27,277:INFO:plot_model() successfully completed......................................
2023-06-07 17:36:28,923:INFO:Initializing plot_model()
2023-06-07 17:36:28,923:INFO:plot_model(plot=vc, fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestRegressor(n_jobs=-1, random_state=123), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021EE58284F0>, system=True)
2023-06-07 17:36:28,924:INFO:Checking exceptions
2023-06-07 17:36:28,993:INFO:Preloading libraries
2023-06-07 17:36:29,377:INFO:Copying training dataset
2023-06-07 17:36:29,378:INFO:Plot type: vc
2023-06-07 17:36:29,378:INFO:Determining param_name
2023-06-07 17:36:29,378:INFO:param_name: max_depth
2023-06-07 17:36:29,758:INFO:Fitting Model
2023-06-07 17:51:19,502:INFO:Visual Rendered Successfully
2023-06-07 17:51:19,691:INFO:plot_model() successfully completed......................................
2023-06-07 17:51:19,804:INFO:Initializing tune_model()
2023-06-07 17:51:19,805:INFO:tune_model(estimator=RandomForestRegressor(n_jobs=-1, random_state=123), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021EE58284F0>)
2023-06-07 17:51:19,805:INFO:Checking exceptions
2023-06-07 17:51:19,898:INFO:Copying training dataset
2023-06-07 17:51:19,969:INFO:Checking base model
2023-06-07 17:51:19,970:INFO:Base model : Random Forest Regressor
2023-06-07 17:51:19,980:INFO:Declaring metric variables
2023-06-07 17:51:19,987:INFO:Defining Hyperparameters
2023-06-07 17:51:20,221:INFO:Tuning with n_jobs=-1
2023-06-07 17:51:20,221:INFO:Initializing RandomizedSearchCV
2023-06-07 17:51:33,498:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.22s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-07 17:51:39,110:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.25s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-07 17:51:40,600:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.41s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-07 17:51:40,841:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:108: UserWarning: Persisting input arguments took 0.59s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = pipeline._memory_transform(transformer, X, y)

2023-06-07 17:51:41,274:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.67s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-07 17:51:41,712:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.57s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-07 17:51:41,835:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.57s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-07 17:51:42,154:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.53s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-07 17:51:42,326:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.51s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-07 17:51:43,515:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.58s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-07 17:51:45,696:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.78s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-07 17:51:46,196:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.99s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-07 17:51:47,352:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.98s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-07 17:51:48,135:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.30s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-07 17:51:48,799:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:108: UserWarning: Persisting input arguments took 0.55s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = pipeline._memory_transform(transformer, X, y)

2023-06-07 17:51:49,959:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:108: UserWarning: Persisting input arguments took 0.52s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = pipeline._memory_transform(transformer, X, y)

2023-06-07 17:51:50,520:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.75s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-07 17:51:50,529:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.72s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-07 17:51:52,761:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.70s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-07 17:52:09,343:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 2.57s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-07 17:52:09,660:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 2.31s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-07 17:52:10,124:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 2.52s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-07 17:52:14,162:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 2.45s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-07 17:52:14,913:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 2.39s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-07 17:52:15,128:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 2.97s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-07 17:52:15,400:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 2.07s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-07 17:52:20,082:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 2.10s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-07 17:52:20,330:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:231: UserWarning: Persisting input arguments took 0.59s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_transformer = self._memory_fit(

2023-06-07 17:52:21,115:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:231: UserWarning: Persisting input arguments took 0.65s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_transformer = self._memory_fit(

2023-06-07 17:52:21,281:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.86s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-07 17:52:21,956:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:231: UserWarning: Persisting input arguments took 0.55s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_transformer = self._memory_fit(

2023-06-07 17:52:24,316:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.04s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-07 17:52:24,847:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.57s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-07 17:52:25,009:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.49s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-07 17:52:26,122:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.66s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-07 17:52:27,343:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.75s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-07 17:52:29,245:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 2.14s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-07 17:52:29,929:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 2.16s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-07 17:52:34,609:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:231: UserWarning: Persisting input arguments took 0.53s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_transformer = self._memory_fit(

2023-06-07 17:52:45,694:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 2.91s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-07 17:52:48,781:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 2.81s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-07 17:52:50,926:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 2.60s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-07 17:52:52,406:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:108: UserWarning: Persisting input arguments took 0.60s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = pipeline._memory_transform(transformer, X, y)

2023-06-07 17:52:52,516:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.32s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-07 17:52:55,087:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.46s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-07 17:52:55,268:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 2.57s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-07 17:53:00,413:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.20s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-07 17:53:02,970:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.33s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-07 17:53:08,531:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.15s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-07 17:53:11,568:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.38s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-07 17:53:12,502:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.16s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-07 17:53:14,394:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.88s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-07 17:53:14,615:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.01s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-07 17:53:14,669:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.85s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-07 17:53:16,233:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:108: UserWarning: Persisting input arguments took 0.53s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = pipeline._memory_transform(transformer, X, y)

2023-06-07 17:53:17,005:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.19s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-07 17:53:17,615:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.15s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-07 17:53:18,766:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:231: UserWarning: Persisting input arguments took 0.66s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_transformer = self._memory_fit(

2023-06-07 17:53:21,914:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:231: UserWarning: Persisting input arguments took 0.66s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_transformer = self._memory_fit(

2023-06-07 17:53:35,536:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.61s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-07 17:53:38,555:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.42s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-07 17:53:39,149:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.33s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-07 17:53:39,326:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.31s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-07 17:53:41,848:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.30s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-07 17:53:41,970:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.30s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-07 17:53:46,593:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.17s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-07 17:53:49,533:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.34s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-07 17:53:49,749:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:231: UserWarning: Persisting input arguments took 0.77s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_transformer = self._memory_fit(

2023-06-07 17:53:50,628:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:231: UserWarning: Persisting input arguments took 0.72s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_transformer = self._memory_fit(

2023-06-07 17:54:00,589:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 2.14s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-07 17:54:05,215:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 2.04s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-07 17:54:05,417:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 2.75s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-07 17:54:07,755:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.60s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-07 17:54:08,938:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.60s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-07 17:54:09,101:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.92s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-07 17:54:11,697:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.99s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-07 17:54:12,719:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.82s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-07 17:54:26,280:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.93s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-07 17:54:28,795:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:108: UserWarning: Persisting input arguments took 0.54s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = pipeline._memory_transform(transformer, X, y)

2023-06-07 17:54:29,720:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.89s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-07 17:54:30,393:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.93s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-07 17:54:32,625:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 2.90s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-07 17:54:34,313:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 2.19s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-07 17:54:34,671:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 2.09s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-07 17:54:38,521:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 3.26s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-07 17:54:47,304:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 4.98s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-07 17:55:07,246:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 4.99s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-07 17:55:22,028:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 12.17s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-07 17:55:23,875:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 10.10s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-07 17:55:43,676:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 13.24s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-07 17:56:22,547:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:231: UserWarning: Persisting input arguments took 3.46s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_transformer = self._memory_fit(

2023-06-07 19:07:36,812:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-07 19:07:36,813:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-07 19:07:36,813:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-07 19:07:36,813:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-07 19:07:38,319:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-07 19:09:10,561:INFO:PyCaret RegressionExperiment
2023-06-07 19:09:10,561:INFO:Logging name: reg-default-name
2023-06-07 19:09:10,561:INFO:ML Usecase: MLUsecase.REGRESSION
2023-06-07 19:09:10,561:INFO:version 3.0.2
2023-06-07 19:09:10,561:INFO:Initializing setup()
2023-06-07 19:09:10,561:INFO:self.USI: d174
2023-06-07 19:09:10,562:INFO:self._variable_keys: {'pipeline', 'target_param', 'idx', 'data', 'fold_groups_param', 'X_train', 'transform_target_param', 'y_train', 'X_test', 'html_param', 'y', 'memory', 'gpu_n_jobs_param', 'y_test', 'fold_generator', 'seed', '_ml_usecase', 'exp_name_log', 'gpu_param', 'X', 'fold_shuffle_param', '_available_plots', 'USI', 'logging_param', 'log_plots_param', 'n_jobs_param', 'exp_id'}
2023-06-07 19:09:10,562:INFO:Checking environment
2023-06-07 19:09:10,562:INFO:python_version: 3.10.9
2023-06-07 19:09:10,562:INFO:python_build: ('main', 'Mar  1 2023 18:18:15')
2023-06-07 19:09:10,562:INFO:machine: AMD64
2023-06-07 19:09:10,562:INFO:platform: Windows-10-10.0.19041-SP0
2023-06-07 19:09:10,562:INFO:Memory: svmem(total=6378106880, available=2041016320, percent=68.0, used=4337090560, free=2041016320)
2023-06-07 19:09:10,562:INFO:Physical Core: 4
2023-06-07 19:09:10,562:INFO:Logical Core: 8
2023-06-07 19:09:10,562:INFO:Checking libraries
2023-06-07 19:09:10,562:INFO:System:
2023-06-07 19:09:10,562:INFO:    python: 3.10.9 | packaged by Anaconda, Inc. | (main, Mar  1 2023, 18:18:15) [MSC v.1916 64 bit (AMD64)]
2023-06-07 19:09:10,562:INFO:executable: c:\Users\Crossddelta\anaconda3\python.exe
2023-06-07 19:09:10,562:INFO:   machine: Windows-10-10.0.19041-SP0
2023-06-07 19:09:10,563:INFO:PyCaret required dependencies:
2023-06-07 19:09:10,563:INFO:                 pip: 22.3.1
2023-06-07 19:09:10,563:INFO:          setuptools: 65.6.3
2023-06-07 19:09:10,563:INFO:             pycaret: 3.0.2
2023-06-07 19:09:10,563:INFO:             IPython: 8.10.0
2023-06-07 19:09:10,563:INFO:          ipywidgets: 7.6.5
2023-06-07 19:09:10,563:INFO:                tqdm: 4.64.1
2023-06-07 19:09:10,563:INFO:               numpy: 1.23.5
2023-06-07 19:09:10,563:INFO:              pandas: 1.5.3
2023-06-07 19:09:10,563:INFO:              jinja2: 3.1.2
2023-06-07 19:09:10,563:INFO:               scipy: 1.10.0
2023-06-07 19:09:10,563:INFO:              joblib: 1.2.0
2023-06-07 19:09:10,563:INFO:             sklearn: 1.2.1
2023-06-07 19:09:10,564:INFO:                pyod: 1.0.9
2023-06-07 19:09:10,564:INFO:            imblearn: 0.10.1
2023-06-07 19:09:10,564:INFO:   category_encoders: 2.6.1
2023-06-07 19:09:10,564:INFO:            lightgbm: 3.3.5
2023-06-07 19:09:10,564:INFO:               numba: 0.56.4
2023-06-07 19:09:10,564:INFO:            requests: 2.28.1
2023-06-07 19:09:10,564:INFO:          matplotlib: 3.7.0
2023-06-07 19:09:10,564:INFO:          scikitplot: 0.3.7
2023-06-07 19:09:10,564:INFO:         yellowbrick: 1.5
2023-06-07 19:09:10,564:INFO:              plotly: 5.9.0
2023-06-07 19:09:10,564:INFO:             kaleido: 0.2.1
2023-06-07 19:09:10,564:INFO:         statsmodels: 0.13.5
2023-06-07 19:09:10,564:INFO:              sktime: 0.17.0
2023-06-07 19:09:10,564:INFO:               tbats: 1.1.3
2023-06-07 19:09:10,564:INFO:            pmdarima: 2.0.3
2023-06-07 19:09:10,565:INFO:              psutil: 5.9.0
2023-06-07 19:09:10,565:INFO:PyCaret optional dependencies:
2023-06-07 19:09:10,585:INFO:                shap: Not installed
2023-06-07 19:09:10,585:INFO:           interpret: Not installed
2023-06-07 19:09:10,585:INFO:                umap: Not installed
2023-06-07 19:09:10,585:INFO:    pandas_profiling: Not installed
2023-06-07 19:09:10,586:INFO:  explainerdashboard: Not installed
2023-06-07 19:09:10,586:INFO:             autoviz: Not installed
2023-06-07 19:09:10,586:INFO:           fairlearn: Not installed
2023-06-07 19:09:10,586:INFO:             xgboost: Not installed
2023-06-07 19:09:10,586:INFO:            catboost: Not installed
2023-06-07 19:09:10,586:INFO:              kmodes: Not installed
2023-06-07 19:09:10,586:INFO:             mlxtend: Not installed
2023-06-07 19:09:10,586:INFO:       statsforecast: Not installed
2023-06-07 19:09:10,586:INFO:        tune_sklearn: Not installed
2023-06-07 19:09:10,586:INFO:                 ray: Not installed
2023-06-07 19:09:10,586:INFO:            hyperopt: Not installed
2023-06-07 19:09:10,586:INFO:              optuna: Not installed
2023-06-07 19:09:10,586:INFO:               skopt: Not installed
2023-06-07 19:09:10,586:INFO:              mlflow: Not installed
2023-06-07 19:09:10,587:INFO:              gradio: Not installed
2023-06-07 19:09:10,587:INFO:             fastapi: Not installed
2023-06-07 19:09:10,587:INFO:             uvicorn: Not installed
2023-06-07 19:09:10,587:INFO:              m2cgen: Not installed
2023-06-07 19:09:10,587:INFO:           evidently: Not installed
2023-06-07 19:09:10,587:INFO:               fugue: Not installed
2023-06-07 19:09:10,587:INFO:           streamlit: Not installed
2023-06-07 19:09:10,587:INFO:             prophet: Not installed
2023-06-07 19:09:10,587:INFO:None
2023-06-07 19:09:10,587:INFO:Set up data.
2023-06-07 19:09:10,689:INFO:Set up train/test split.
2023-06-07 19:09:10,749:INFO:Set up index.
2023-06-07 19:09:10,753:INFO:Set up folding strategy.
2023-06-07 19:09:10,754:INFO:Assigning column types.
2023-06-07 19:09:10,805:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-07 19:09:10,806:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-07 19:09:10,813:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-07 19:09:10,821:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-07 19:09:10,957:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 19:09:11,030:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-07 19:09:11,031:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:09:11,574:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:09:11,574:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-07 19:09:11,582:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-07 19:09:11,590:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-07 19:09:11,726:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 19:09:11,800:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-07 19:09:11,801:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:09:11,801:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:09:11,801:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-06-07 19:09:11,809:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-07 19:09:11,816:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-07 19:09:11,951:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 19:09:12,021:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-07 19:09:12,022:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:09:12,023:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:09:12,031:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-07 19:09:12,039:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-07 19:09:12,168:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 19:09:12,235:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-07 19:09:12,236:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:09:12,236:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:09:12,236:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-06-07 19:09:12,251:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-07 19:09:12,385:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 19:09:12,457:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-07 19:09:12,458:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:09:12,459:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:09:12,474:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-07 19:09:12,601:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 19:09:12,668:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-07 19:09:12,669:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:09:12,669:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:09:12,669:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-06-07 19:09:12,808:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 19:09:12,879:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-07 19:09:12,880:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:09:12,880:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:09:13,025:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 19:09:13,093:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-07 19:09:13,094:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:09:13,094:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:09:13,095:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-07 19:09:13,232:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 19:09:13,302:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:09:13,302:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:09:13,445:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 19:09:13,518:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:09:13,518:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:09:13,518:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-06-07 19:09:13,727:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:09:13,727:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:09:13,933:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:09:13,934:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:09:13,942:INFO:Preparing preprocessing pipeline...
2023-06-07 19:09:13,942:INFO:Set up simple imputation.
2023-06-07 19:09:13,964:INFO:Set up encoding of categorical features.
2023-06-07 19:09:14,300:INFO:Finished creating preprocessing pipeline.
2023-06-07 19:09:14,315:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\CROSSD~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['codigo_ibge', 'latitude',
                                             'longitude', 'T2M_RANGE', 'TS',
                                             'T2MDEW', 'T2MWET', 'T2M_MAX',
                                             'T2M_MIN', 'T2M', 'QV2M', 'RH2M',
                                             'PRECTOTCORR', 'WS2M', 'WS2M_MAX',
                                             'WS2M_MIN', 'WS2M_RANGE', 'WS10M',
                                             'WS10M_MAX', 'WS10M_MIN',
                                             'WS10M_RANGE'...
                                             'WS50M_RANGE', 'GWETTOP',
                                             'GWETROOT', 'GWETPROF',
                                             'ALLSKY_SFC_SW_DWN',
                                             'CLRSKY_SFC_SW_DWN', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['data'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rest_encoding',
                 TransformerWrapper(include=['data'],
                                    transformer=TargetEncoder(cols=['data'],
                                                              handle_missing='return_nan')))])
2023-06-07 19:09:14,315:INFO:Creating final display dataframe.
2023-06-07 19:09:14,636:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target                PS
2                   Target type        Regression
3           Original data shape       (80000, 38)
4        Transformed data shape       (80000, 38)
5   Transformed train set shape       (56000, 38)
6    Transformed test set shape       (24000, 38)
7              Numeric features                36
8          Categorical features                 1
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15               Fold Generator             KFold
16                  Fold Number                10
17                     CPU Jobs                -1
18                      Use GPU             False
19               Log Experiment             False
20              Experiment Name  reg-default-name
21                          USI              d174
2023-06-07 19:09:14,873:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:09:14,873:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:09:15,085:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:09:15,085:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:09:15,086:INFO:setup() successfully completed in 4.99s...............
2023-06-07 19:09:18,858:INFO:Initializing compare_models()
2023-06-07 19:09:18,858:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017E2573BAC0>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x0000017E2573BAC0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2023-06-07 19:09:18,858:INFO:Checking exceptions
2023-06-07 19:09:18,882:INFO:Preparing display monitor
2023-06-07 19:09:18,924:INFO:Initializing Linear Regression
2023-06-07 19:09:18,924:INFO:Total runtime is 0.0 minutes
2023-06-07 19:09:18,932:INFO:SubProcess create_model() called ==================================
2023-06-07 19:09:18,933:INFO:Initializing create_model()
2023-06-07 19:09:18,933:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017E2573BAC0>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017E26D71210>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 19:09:18,933:INFO:Checking exceptions
2023-06-07 19:09:18,934:INFO:Importing libraries
2023-06-07 19:09:18,934:INFO:Copying training dataset
2023-06-07 19:09:19,015:INFO:Defining folds
2023-06-07 19:09:19,015:INFO:Declaring metric variables
2023-06-07 19:09:19,021:INFO:Importing untrained model
2023-06-07 19:09:19,029:INFO:Linear Regression Imported successfully
2023-06-07 19:09:19,065:INFO:Starting cross validation
2023-06-07 19:09:19,084:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 19:09:33,870:INFO:Calculating mean and std
2023-06-07 19:09:33,872:INFO:Creating metrics dataframe
2023-06-07 19:09:34,270:INFO:Uploading results into container
2023-06-07 19:09:34,272:INFO:Uploading model into container now
2023-06-07 19:09:34,276:INFO:_master_model_container: 1
2023-06-07 19:09:34,276:INFO:_display_container: 2
2023-06-07 19:09:34,277:INFO:LinearRegression(n_jobs=-1)
2023-06-07 19:09:34,277:INFO:create_model() successfully completed......................................
2023-06-07 19:09:34,428:INFO:SubProcess create_model() end ==================================
2023-06-07 19:09:34,428:INFO:Creating metrics dataframe
2023-06-07 19:09:34,443:INFO:Initializing Lasso Regression
2023-06-07 19:09:34,443:INFO:Total runtime is 0.25865917603174843 minutes
2023-06-07 19:09:34,448:INFO:SubProcess create_model() called ==================================
2023-06-07 19:09:34,449:INFO:Initializing create_model()
2023-06-07 19:09:34,449:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017E2573BAC0>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017E26D71210>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 19:09:34,449:INFO:Checking exceptions
2023-06-07 19:09:34,449:INFO:Importing libraries
2023-06-07 19:09:34,450:INFO:Copying training dataset
2023-06-07 19:09:34,550:INFO:Defining folds
2023-06-07 19:09:34,550:INFO:Declaring metric variables
2023-06-07 19:09:34,556:INFO:Importing untrained model
2023-06-07 19:09:34,563:INFO:Lasso Regression Imported successfully
2023-06-07 19:09:34,576:INFO:Starting cross validation
2023-06-07 19:09:34,578:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 19:09:39,008:INFO:Calculating mean and std
2023-06-07 19:09:39,010:INFO:Creating metrics dataframe
2023-06-07 19:09:39,397:INFO:Uploading results into container
2023-06-07 19:09:39,399:INFO:Uploading model into container now
2023-06-07 19:09:39,400:INFO:_master_model_container: 2
2023-06-07 19:09:39,400:INFO:_display_container: 2
2023-06-07 19:09:39,400:INFO:Lasso(random_state=123)
2023-06-07 19:09:39,401:INFO:create_model() successfully completed......................................
2023-06-07 19:09:39,535:INFO:SubProcess create_model() end ==================================
2023-06-07 19:09:39,535:INFO:Creating metrics dataframe
2023-06-07 19:09:39,550:INFO:Initializing Ridge Regression
2023-06-07 19:09:39,550:INFO:Total runtime is 0.34376696348190305 minutes
2023-06-07 19:09:39,555:INFO:SubProcess create_model() called ==================================
2023-06-07 19:09:39,556:INFO:Initializing create_model()
2023-06-07 19:09:39,556:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017E2573BAC0>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017E26D71210>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 19:09:39,557:INFO:Checking exceptions
2023-06-07 19:09:39,557:INFO:Importing libraries
2023-06-07 19:09:39,557:INFO:Copying training dataset
2023-06-07 19:09:39,623:INFO:Defining folds
2023-06-07 19:09:39,624:INFO:Declaring metric variables
2023-06-07 19:09:39,630:INFO:Importing untrained model
2023-06-07 19:09:39,635:INFO:Ridge Regression Imported successfully
2023-06-07 19:09:39,646:INFO:Starting cross validation
2023-06-07 19:09:39,648:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 19:09:44,191:INFO:Calculating mean and std
2023-06-07 19:09:44,192:INFO:Creating metrics dataframe
2023-06-07 19:09:44,651:INFO:Uploading results into container
2023-06-07 19:09:44,652:INFO:Uploading model into container now
2023-06-07 19:09:44,652:INFO:_master_model_container: 3
2023-06-07 19:09:44,652:INFO:_display_container: 2
2023-06-07 19:09:44,653:INFO:Ridge(random_state=123)
2023-06-07 19:09:44,653:INFO:create_model() successfully completed......................................
2023-06-07 19:09:44,802:INFO:SubProcess create_model() end ==================================
2023-06-07 19:09:44,802:INFO:Creating metrics dataframe
2023-06-07 19:09:44,820:INFO:Initializing Elastic Net
2023-06-07 19:09:44,821:INFO:Total runtime is 0.43162322441736856 minutes
2023-06-07 19:09:44,827:INFO:SubProcess create_model() called ==================================
2023-06-07 19:09:44,827:INFO:Initializing create_model()
2023-06-07 19:09:44,827:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017E2573BAC0>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017E26D71210>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 19:09:44,828:INFO:Checking exceptions
2023-06-07 19:09:44,828:INFO:Importing libraries
2023-06-07 19:09:44,828:INFO:Copying training dataset
2023-06-07 19:09:44,895:INFO:Defining folds
2023-06-07 19:09:44,895:INFO:Declaring metric variables
2023-06-07 19:09:44,899:INFO:Importing untrained model
2023-06-07 19:09:44,906:INFO:Elastic Net Imported successfully
2023-06-07 19:09:44,917:INFO:Starting cross validation
2023-06-07 19:09:44,919:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 19:09:49,369:INFO:Calculating mean and std
2023-06-07 19:09:49,372:INFO:Creating metrics dataframe
2023-06-07 19:09:49,754:INFO:Uploading results into container
2023-06-07 19:09:49,754:INFO:Uploading model into container now
2023-06-07 19:09:49,755:INFO:_master_model_container: 4
2023-06-07 19:09:49,756:INFO:_display_container: 2
2023-06-07 19:09:49,756:INFO:ElasticNet(random_state=123)
2023-06-07 19:09:49,756:INFO:create_model() successfully completed......................................
2023-06-07 19:09:49,876:INFO:SubProcess create_model() end ==================================
2023-06-07 19:09:49,877:INFO:Creating metrics dataframe
2023-06-07 19:09:49,890:INFO:Initializing Least Angle Regression
2023-06-07 19:09:49,890:INFO:Total runtime is 0.5161085565884908 minutes
2023-06-07 19:09:49,895:INFO:SubProcess create_model() called ==================================
2023-06-07 19:09:49,895:INFO:Initializing create_model()
2023-06-07 19:09:49,895:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017E2573BAC0>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017E26D71210>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 19:09:49,895:INFO:Checking exceptions
2023-06-07 19:09:49,896:INFO:Importing libraries
2023-06-07 19:09:49,896:INFO:Copying training dataset
2023-06-07 19:09:49,953:INFO:Defining folds
2023-06-07 19:09:49,953:INFO:Declaring metric variables
2023-06-07 19:09:49,958:INFO:Importing untrained model
2023-06-07 19:09:49,965:INFO:Least Angle Regression Imported successfully
2023-06-07 19:09:49,974:INFO:Starting cross validation
2023-06-07 19:09:49,976:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 19:09:54,350:INFO:Calculating mean and std
2023-06-07 19:09:54,352:INFO:Creating metrics dataframe
2023-06-07 19:09:54,774:INFO:Uploading results into container
2023-06-07 19:09:54,775:INFO:Uploading model into container now
2023-06-07 19:09:54,776:INFO:_master_model_container: 5
2023-06-07 19:09:54,776:INFO:_display_container: 2
2023-06-07 19:09:54,777:INFO:Lars(random_state=123)
2023-06-07 19:09:54,777:INFO:create_model() successfully completed......................................
2023-06-07 19:09:54,929:INFO:SubProcess create_model() end ==================================
2023-06-07 19:09:54,929:INFO:Creating metrics dataframe
2023-06-07 19:09:54,945:INFO:Initializing Lasso Least Angle Regression
2023-06-07 19:09:54,946:INFO:Total runtime is 0.6003739198048909 minutes
2023-06-07 19:09:54,951:INFO:SubProcess create_model() called ==================================
2023-06-07 19:09:54,951:INFO:Initializing create_model()
2023-06-07 19:09:54,951:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017E2573BAC0>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017E26D71210>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 19:09:54,951:INFO:Checking exceptions
2023-06-07 19:09:54,952:INFO:Importing libraries
2023-06-07 19:09:54,952:INFO:Copying training dataset
2023-06-07 19:09:55,017:INFO:Defining folds
2023-06-07 19:09:55,017:INFO:Declaring metric variables
2023-06-07 19:09:55,024:INFO:Importing untrained model
2023-06-07 19:09:55,030:INFO:Lasso Least Angle Regression Imported successfully
2023-06-07 19:09:55,041:INFO:Starting cross validation
2023-06-07 19:09:55,043:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 19:09:59,622:INFO:Calculating mean and std
2023-06-07 19:09:59,624:INFO:Creating metrics dataframe
2023-06-07 19:10:00,008:INFO:Uploading results into container
2023-06-07 19:10:00,009:INFO:Uploading model into container now
2023-06-07 19:10:00,010:INFO:_master_model_container: 6
2023-06-07 19:10:00,010:INFO:_display_container: 2
2023-06-07 19:10:00,011:INFO:LassoLars(random_state=123)
2023-06-07 19:10:00,011:INFO:create_model() successfully completed......................................
2023-06-07 19:10:00,167:INFO:SubProcess create_model() end ==================================
2023-06-07 19:10:00,167:INFO:Creating metrics dataframe
2023-06-07 19:10:00,183:INFO:Initializing Orthogonal Matching Pursuit
2023-06-07 19:10:00,183:INFO:Total runtime is 0.687649651368459 minutes
2023-06-07 19:10:00,189:INFO:SubProcess create_model() called ==================================
2023-06-07 19:10:00,190:INFO:Initializing create_model()
2023-06-07 19:10:00,190:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017E2573BAC0>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017E26D71210>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 19:10:00,190:INFO:Checking exceptions
2023-06-07 19:10:00,190:INFO:Importing libraries
2023-06-07 19:10:00,191:INFO:Copying training dataset
2023-06-07 19:10:00,246:INFO:Defining folds
2023-06-07 19:10:00,246:INFO:Declaring metric variables
2023-06-07 19:10:00,251:INFO:Importing untrained model
2023-06-07 19:10:00,256:INFO:Orthogonal Matching Pursuit Imported successfully
2023-06-07 19:10:00,265:INFO:Starting cross validation
2023-06-07 19:10:00,268:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 19:10:04,642:INFO:Calculating mean and std
2023-06-07 19:10:04,643:INFO:Creating metrics dataframe
2023-06-07 19:10:05,041:INFO:Uploading results into container
2023-06-07 19:10:05,042:INFO:Uploading model into container now
2023-06-07 19:10:05,043:INFO:_master_model_container: 7
2023-06-07 19:10:05,043:INFO:_display_container: 2
2023-06-07 19:10:05,044:INFO:OrthogonalMatchingPursuit()
2023-06-07 19:10:05,044:INFO:create_model() successfully completed......................................
2023-06-07 19:10:05,164:INFO:SubProcess create_model() end ==================================
2023-06-07 19:10:05,164:INFO:Creating metrics dataframe
2023-06-07 19:10:05,181:INFO:Initializing Bayesian Ridge
2023-06-07 19:10:05,181:INFO:Total runtime is 0.7709484100341797 minutes
2023-06-07 19:10:05,186:INFO:SubProcess create_model() called ==================================
2023-06-07 19:10:05,187:INFO:Initializing create_model()
2023-06-07 19:10:05,187:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017E2573BAC0>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017E26D71210>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 19:10:05,187:INFO:Checking exceptions
2023-06-07 19:10:05,187:INFO:Importing libraries
2023-06-07 19:10:05,189:INFO:Copying training dataset
2023-06-07 19:10:05,243:INFO:Defining folds
2023-06-07 19:10:05,244:INFO:Declaring metric variables
2023-06-07 19:10:05,248:INFO:Importing untrained model
2023-06-07 19:10:05,255:INFO:Bayesian Ridge Imported successfully
2023-06-07 19:10:05,264:INFO:Starting cross validation
2023-06-07 19:10:05,266:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 19:10:09,393:INFO:Calculating mean and std
2023-06-07 19:10:09,394:INFO:Creating metrics dataframe
2023-06-07 19:10:09,769:INFO:Uploading results into container
2023-06-07 19:10:09,770:INFO:Uploading model into container now
2023-06-07 19:10:09,772:INFO:_master_model_container: 8
2023-06-07 19:10:09,772:INFO:_display_container: 2
2023-06-07 19:10:09,773:INFO:BayesianRidge()
2023-06-07 19:10:09,773:INFO:create_model() successfully completed......................................
2023-06-07 19:10:09,893:INFO:SubProcess create_model() end ==================================
2023-06-07 19:10:09,893:INFO:Creating metrics dataframe
2023-06-07 19:10:09,910:INFO:Initializing Passive Aggressive Regressor
2023-06-07 19:10:09,910:INFO:Total runtime is 0.8497599522272745 minutes
2023-06-07 19:10:09,915:INFO:SubProcess create_model() called ==================================
2023-06-07 19:10:09,915:INFO:Initializing create_model()
2023-06-07 19:10:09,915:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017E2573BAC0>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017E26D71210>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 19:10:09,915:INFO:Checking exceptions
2023-06-07 19:10:09,915:INFO:Importing libraries
2023-06-07 19:10:09,916:INFO:Copying training dataset
2023-06-07 19:10:09,971:INFO:Defining folds
2023-06-07 19:10:09,971:INFO:Declaring metric variables
2023-06-07 19:10:09,978:INFO:Importing untrained model
2023-06-07 19:10:09,983:INFO:Passive Aggressive Regressor Imported successfully
2023-06-07 19:10:09,992:INFO:Starting cross validation
2023-06-07 19:10:09,994:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 19:10:14,047:INFO:Calculating mean and std
2023-06-07 19:10:14,049:INFO:Creating metrics dataframe
2023-06-07 19:10:14,425:INFO:Uploading results into container
2023-06-07 19:10:14,426:INFO:Uploading model into container now
2023-06-07 19:10:14,427:INFO:_master_model_container: 9
2023-06-07 19:10:14,427:INFO:_display_container: 2
2023-06-07 19:10:14,428:INFO:PassiveAggressiveRegressor(random_state=123)
2023-06-07 19:10:14,428:INFO:create_model() successfully completed......................................
2023-06-07 19:10:14,548:INFO:SubProcess create_model() end ==================================
2023-06-07 19:10:14,548:INFO:Creating metrics dataframe
2023-06-07 19:10:14,565:INFO:Initializing Huber Regressor
2023-06-07 19:10:14,565:INFO:Total runtime is 0.9273575941721598 minutes
2023-06-07 19:10:14,570:INFO:SubProcess create_model() called ==================================
2023-06-07 19:10:14,571:INFO:Initializing create_model()
2023-06-07 19:10:14,571:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017E2573BAC0>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017E26D71210>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 19:10:14,572:INFO:Checking exceptions
2023-06-07 19:10:14,572:INFO:Importing libraries
2023-06-07 19:10:14,572:INFO:Copying training dataset
2023-06-07 19:10:14,626:INFO:Defining folds
2023-06-07 19:10:14,626:INFO:Declaring metric variables
2023-06-07 19:10:14,631:INFO:Importing untrained model
2023-06-07 19:10:14,638:INFO:Huber Regressor Imported successfully
2023-06-07 19:10:14,647:INFO:Starting cross validation
2023-06-07 19:10:14,649:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 19:10:18,684:INFO:Calculating mean and std
2023-06-07 19:10:18,686:INFO:Creating metrics dataframe
2023-06-07 19:10:19,067:INFO:Uploading results into container
2023-06-07 19:10:19,068:INFO:Uploading model into container now
2023-06-07 19:10:19,069:INFO:_master_model_container: 10
2023-06-07 19:10:19,069:INFO:_display_container: 2
2023-06-07 19:10:19,069:INFO:HuberRegressor()
2023-06-07 19:10:19,069:INFO:create_model() successfully completed......................................
2023-06-07 19:10:19,189:INFO:SubProcess create_model() end ==================================
2023-06-07 19:10:19,189:INFO:Creating metrics dataframe
2023-06-07 19:10:19,206:INFO:Initializing K Neighbors Regressor
2023-06-07 19:10:19,206:INFO:Total runtime is 1.0046967347462972 minutes
2023-06-07 19:10:19,211:INFO:SubProcess create_model() called ==================================
2023-06-07 19:10:19,212:INFO:Initializing create_model()
2023-06-07 19:10:19,212:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017E2573BAC0>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017E26D71210>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 19:10:19,212:INFO:Checking exceptions
2023-06-07 19:10:19,212:INFO:Importing libraries
2023-06-07 19:10:19,212:INFO:Copying training dataset
2023-06-07 19:10:19,266:INFO:Defining folds
2023-06-07 19:10:19,267:INFO:Declaring metric variables
2023-06-07 19:10:19,273:INFO:Importing untrained model
2023-06-07 19:10:19,279:INFO:K Neighbors Regressor Imported successfully
2023-06-07 19:10:19,288:INFO:Starting cross validation
2023-06-07 19:10:19,290:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 19:10:28,206:INFO:Calculating mean and std
2023-06-07 19:10:28,208:INFO:Creating metrics dataframe
2023-06-07 19:10:28,583:INFO:Uploading results into container
2023-06-07 19:10:28,584:INFO:Uploading model into container now
2023-06-07 19:10:28,585:INFO:_master_model_container: 11
2023-06-07 19:10:28,585:INFO:_display_container: 2
2023-06-07 19:10:28,585:INFO:KNeighborsRegressor(n_jobs=-1)
2023-06-07 19:10:28,586:INFO:create_model() successfully completed......................................
2023-06-07 19:10:28,706:INFO:SubProcess create_model() end ==================================
2023-06-07 19:10:28,706:INFO:Creating metrics dataframe
2023-06-07 19:10:28,723:INFO:Initializing Decision Tree Regressor
2023-06-07 19:10:28,724:INFO:Total runtime is 1.163334329922994 minutes
2023-06-07 19:10:28,728:INFO:SubProcess create_model() called ==================================
2023-06-07 19:10:28,729:INFO:Initializing create_model()
2023-06-07 19:10:28,729:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017E2573BAC0>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017E26D71210>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 19:10:28,729:INFO:Checking exceptions
2023-06-07 19:10:28,730:INFO:Importing libraries
2023-06-07 19:10:28,730:INFO:Copying training dataset
2023-06-07 19:10:28,785:INFO:Defining folds
2023-06-07 19:10:28,785:INFO:Declaring metric variables
2023-06-07 19:10:28,790:INFO:Importing untrained model
2023-06-07 19:10:28,797:INFO:Decision Tree Regressor Imported successfully
2023-06-07 19:10:28,810:INFO:Starting cross validation
2023-06-07 19:10:28,812:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 19:10:32,874:INFO:Calculating mean and std
2023-06-07 19:10:32,876:INFO:Creating metrics dataframe
2023-06-07 19:10:33,253:INFO:Uploading results into container
2023-06-07 19:10:33,255:INFO:Uploading model into container now
2023-06-07 19:10:33,256:INFO:_master_model_container: 12
2023-06-07 19:10:33,256:INFO:_display_container: 2
2023-06-07 19:10:33,257:INFO:DecisionTreeRegressor(random_state=123)
2023-06-07 19:10:33,257:INFO:create_model() successfully completed......................................
2023-06-07 19:10:33,377:INFO:SubProcess create_model() end ==================================
2023-06-07 19:10:33,377:INFO:Creating metrics dataframe
2023-06-07 19:10:33,395:INFO:Initializing Random Forest Regressor
2023-06-07 19:10:33,395:INFO:Total runtime is 1.2411807656288145 minutes
2023-06-07 19:10:33,400:INFO:SubProcess create_model() called ==================================
2023-06-07 19:10:33,400:INFO:Initializing create_model()
2023-06-07 19:10:33,400:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017E2573BAC0>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017E26D71210>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 19:10:33,400:INFO:Checking exceptions
2023-06-07 19:10:33,401:INFO:Importing libraries
2023-06-07 19:10:33,401:INFO:Copying training dataset
2023-06-07 19:10:33,457:INFO:Defining folds
2023-06-07 19:10:33,457:INFO:Declaring metric variables
2023-06-07 19:10:33,463:INFO:Importing untrained model
2023-06-07 19:10:33,468:INFO:Random Forest Regressor Imported successfully
2023-06-07 19:10:33,477:INFO:Starting cross validation
2023-06-07 19:10:33,479:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 19:10:42,473:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.53s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-07 19:10:46,414:INFO:Calculating mean and std
2023-06-07 19:10:46,425:INFO:Creating metrics dataframe
2023-06-07 19:10:46,829:INFO:Uploading results into container
2023-06-07 19:10:46,832:INFO:Uploading model into container now
2023-06-07 19:10:46,833:INFO:_master_model_container: 13
2023-06-07 19:10:46,833:INFO:_display_container: 2
2023-06-07 19:10:46,834:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2023-06-07 19:10:46,834:INFO:create_model() successfully completed......................................
2023-06-07 19:10:47,033:INFO:SubProcess create_model() end ==================================
2023-06-07 19:10:47,034:INFO:Creating metrics dataframe
2023-06-07 19:10:47,054:INFO:Initializing Extra Trees Regressor
2023-06-07 19:10:47,054:INFO:Total runtime is 1.4688347061475115 minutes
2023-06-07 19:10:47,061:INFO:SubProcess create_model() called ==================================
2023-06-07 19:10:47,061:INFO:Initializing create_model()
2023-06-07 19:10:47,062:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017E2573BAC0>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017E26D71210>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 19:10:47,062:INFO:Checking exceptions
2023-06-07 19:10:47,062:INFO:Importing libraries
2023-06-07 19:10:47,063:INFO:Copying training dataset
2023-06-07 19:10:47,124:INFO:Defining folds
2023-06-07 19:10:47,124:INFO:Declaring metric variables
2023-06-07 19:10:47,129:INFO:Importing untrained model
2023-06-07 19:10:47,134:INFO:Extra Trees Regressor Imported successfully
2023-06-07 19:10:47,142:INFO:Starting cross validation
2023-06-07 19:10:47,145:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 19:11:10,322:INFO:Calculating mean and std
2023-06-07 19:11:10,342:INFO:Creating metrics dataframe
2023-06-07 19:11:10,760:INFO:Uploading results into container
2023-06-07 19:11:10,764:INFO:Uploading model into container now
2023-06-07 19:11:10,765:INFO:_master_model_container: 14
2023-06-07 19:11:10,765:INFO:_display_container: 2
2023-06-07 19:11:10,768:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2023-06-07 19:11:10,768:INFO:create_model() successfully completed......................................
2023-06-07 19:11:11,013:INFO:SubProcess create_model() end ==================================
2023-06-07 19:11:11,013:INFO:Creating metrics dataframe
2023-06-07 19:11:11,035:INFO:Initializing AdaBoost Regressor
2023-06-07 19:11:11,035:INFO:Total runtime is 1.868514275550842 minutes
2023-06-07 19:11:11,041:INFO:SubProcess create_model() called ==================================
2023-06-07 19:11:11,042:INFO:Initializing create_model()
2023-06-07 19:11:11,042:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017E2573BAC0>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017E26D71210>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 19:11:11,042:INFO:Checking exceptions
2023-06-07 19:11:11,042:INFO:Importing libraries
2023-06-07 19:11:11,043:INFO:Copying training dataset
2023-06-07 19:11:11,140:INFO:Defining folds
2023-06-07 19:11:11,141:INFO:Declaring metric variables
2023-06-07 19:11:11,146:INFO:Importing untrained model
2023-06-07 19:11:11,153:INFO:AdaBoost Regressor Imported successfully
2023-06-07 19:11:11,163:INFO:Starting cross validation
2023-06-07 19:11:11,166:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 19:11:15,925:INFO:Calculating mean and std
2023-06-07 19:11:15,926:INFO:Creating metrics dataframe
2023-06-07 19:11:16,307:INFO:Uploading results into container
2023-06-07 19:11:16,308:INFO:Uploading model into container now
2023-06-07 19:11:16,309:INFO:_master_model_container: 15
2023-06-07 19:11:16,309:INFO:_display_container: 2
2023-06-07 19:11:16,310:INFO:AdaBoostRegressor(random_state=123)
2023-06-07 19:11:16,310:INFO:create_model() successfully completed......................................
2023-06-07 19:11:16,429:INFO:SubProcess create_model() end ==================================
2023-06-07 19:11:16,429:INFO:Creating metrics dataframe
2023-06-07 19:11:16,450:INFO:Initializing Gradient Boosting Regressor
2023-06-07 19:11:16,451:INFO:Total runtime is 1.958785545825958 minutes
2023-06-07 19:11:16,456:INFO:SubProcess create_model() called ==================================
2023-06-07 19:11:16,456:INFO:Initializing create_model()
2023-06-07 19:11:16,457:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017E2573BAC0>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017E26D71210>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 19:11:16,457:INFO:Checking exceptions
2023-06-07 19:11:16,457:INFO:Importing libraries
2023-06-07 19:11:16,457:INFO:Copying training dataset
2023-06-07 19:11:16,512:INFO:Defining folds
2023-06-07 19:11:16,512:INFO:Declaring metric variables
2023-06-07 19:11:16,517:INFO:Importing untrained model
2023-06-07 19:11:16,522:INFO:Gradient Boosting Regressor Imported successfully
2023-06-07 19:11:16,532:INFO:Starting cross validation
2023-06-07 19:11:16,534:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 19:11:20,798:INFO:Calculating mean and std
2023-06-07 19:11:20,799:INFO:Creating metrics dataframe
2023-06-07 19:11:21,185:INFO:Uploading results into container
2023-06-07 19:11:21,186:INFO:Uploading model into container now
2023-06-07 19:11:21,186:INFO:_master_model_container: 16
2023-06-07 19:11:21,186:INFO:_display_container: 2
2023-06-07 19:11:21,187:INFO:GradientBoostingRegressor(random_state=123)
2023-06-07 19:11:21,187:INFO:create_model() successfully completed......................................
2023-06-07 19:11:21,303:INFO:SubProcess create_model() end ==================================
2023-06-07 19:11:21,303:INFO:Creating metrics dataframe
2023-06-07 19:11:21,318:INFO:Initializing Light Gradient Boosting Machine
2023-06-07 19:11:21,318:INFO:Total runtime is 2.039907419681549 minutes
2023-06-07 19:11:21,333:INFO:SubProcess create_model() called ==================================
2023-06-07 19:11:21,333:INFO:Initializing create_model()
2023-06-07 19:11:21,333:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017E2573BAC0>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017E26D71210>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 19:11:21,333:INFO:Checking exceptions
2023-06-07 19:11:21,333:INFO:Importing libraries
2023-06-07 19:11:21,334:INFO:Copying training dataset
2023-06-07 19:11:21,394:INFO:Defining folds
2023-06-07 19:11:21,394:INFO:Declaring metric variables
2023-06-07 19:11:21,399:INFO:Importing untrained model
2023-06-07 19:11:21,404:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-07 19:11:21,414:INFO:Starting cross validation
2023-06-07 19:11:21,416:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 19:11:29,061:INFO:Calculating mean and std
2023-06-07 19:11:29,063:INFO:Creating metrics dataframe
2023-06-07 19:11:29,476:INFO:Uploading results into container
2023-06-07 19:11:29,477:INFO:Uploading model into container now
2023-06-07 19:11:29,478:INFO:_master_model_container: 17
2023-06-07 19:11:29,478:INFO:_display_container: 2
2023-06-07 19:11:29,478:INFO:LGBMRegressor(random_state=123)
2023-06-07 19:11:29,479:INFO:create_model() successfully completed......................................
2023-06-07 19:11:29,603:INFO:SubProcess create_model() end ==================================
2023-06-07 19:11:29,606:INFO:Creating metrics dataframe
2023-06-07 19:11:29,626:INFO:Initializing Dummy Regressor
2023-06-07 19:11:29,626:INFO:Total runtime is 2.178372772534688 minutes
2023-06-07 19:11:29,631:INFO:SubProcess create_model() called ==================================
2023-06-07 19:11:29,632:INFO:Initializing create_model()
2023-06-07 19:11:29,632:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017E2573BAC0>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017E26D71210>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 19:11:29,632:INFO:Checking exceptions
2023-06-07 19:11:29,632:INFO:Importing libraries
2023-06-07 19:11:29,632:INFO:Copying training dataset
2023-06-07 19:11:29,692:INFO:Defining folds
2023-06-07 19:11:29,693:INFO:Declaring metric variables
2023-06-07 19:11:29,698:INFO:Importing untrained model
2023-06-07 19:11:29,703:INFO:Dummy Regressor Imported successfully
2023-06-07 19:11:29,715:INFO:Starting cross validation
2023-06-07 19:11:29,717:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 19:11:33,956:INFO:Calculating mean and std
2023-06-07 19:11:33,958:INFO:Creating metrics dataframe
2023-06-07 19:11:34,354:INFO:Uploading results into container
2023-06-07 19:11:34,355:INFO:Uploading model into container now
2023-06-07 19:11:34,355:INFO:_master_model_container: 18
2023-06-07 19:11:34,356:INFO:_display_container: 2
2023-06-07 19:11:34,356:INFO:DummyRegressor()
2023-06-07 19:11:34,356:INFO:create_model() successfully completed......................................
2023-06-07 19:11:34,478:INFO:SubProcess create_model() end ==================================
2023-06-07 19:11:34,479:INFO:Creating metrics dataframe
2023-06-07 19:11:34,517:INFO:Initializing create_model()
2023-06-07 19:11:34,517:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017E2573BAC0>, estimator=RandomForestRegressor(n_jobs=-1, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-07 19:11:34,518:INFO:Checking exceptions
2023-06-07 19:11:34,521:INFO:Importing libraries
2023-06-07 19:11:34,521:INFO:Copying training dataset
2023-06-07 19:11:34,580:INFO:Defining folds
2023-06-07 19:11:34,581:INFO:Declaring metric variables
2023-06-07 19:11:34,581:INFO:Importing untrained model
2023-06-07 19:11:34,581:INFO:Declaring custom model
2023-06-07 19:11:34,582:INFO:Random Forest Regressor Imported successfully
2023-06-07 19:11:34,583:INFO:Cross validation set to False
2023-06-07 19:11:34,583:INFO:Fitting Model
2023-06-07 19:11:35,695:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2023-06-07 19:11:35,695:INFO:create_model() successfully completed......................................
2023-06-07 19:11:35,865:INFO:_master_model_container: 18
2023-06-07 19:11:35,865:INFO:_display_container: 2
2023-06-07 19:11:35,866:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2023-06-07 19:11:35,866:INFO:compare_models() successfully completed......................................
2023-06-07 19:11:36,318:INFO:Initializing plot_model()
2023-06-07 19:11:36,318:INFO:plot_model(plot=residuals, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=RandomForestRegressor(n_jobs=-1, random_state=123), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017E2573BAC0>, system=True)
2023-06-07 19:11:36,318:INFO:Checking exceptions
2023-06-07 19:11:36,425:INFO:Preloading libraries
2023-06-07 19:11:36,692:INFO:Copying training dataset
2023-06-07 19:11:36,692:INFO:Plot type: residuals
2023-06-07 19:11:37,116:INFO:Fitting Model
2023-06-07 19:11:38,323:INFO:Scoring test/hold-out set
2023-06-07 19:11:40,570:INFO:Visual Rendered Successfully
2023-06-07 19:11:40,713:INFO:plot_model() successfully completed......................................
2023-06-07 19:12:01,031:INFO:Initializing predict_model()
2023-06-07 19:12:01,031:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017E2573BAC0>, estimator=RandomForestRegressor(n_jobs=-1, random_state=123), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017E527DDE10>)
2023-06-07 19:12:01,032:INFO:Checking exceptions
2023-06-07 19:12:01,032:INFO:Preloading libraries
2023-06-07 19:12:29,836:INFO:Initializing evaluate_model()
2023-06-07 19:12:29,836:INFO:evaluate_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017E2573BAC0>, estimator=RandomForestRegressor(n_jobs=-1, random_state=123), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-07 19:12:29,888:INFO:Initializing plot_model()
2023-06-07 19:12:29,889:INFO:plot_model(plot=pipeline, fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestRegressor(n_jobs=-1, random_state=123), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017E2573BAC0>, system=True)
2023-06-07 19:12:29,889:INFO:Checking exceptions
2023-06-07 19:12:29,937:INFO:Preloading libraries
2023-06-07 19:12:30,205:INFO:Copying training dataset
2023-06-07 19:12:30,205:INFO:Plot type: pipeline
2023-06-07 19:12:30,403:INFO:Visual Rendered Successfully
2023-06-07 19:12:30,531:INFO:plot_model() successfully completed......................................
2023-06-07 19:12:43,503:INFO:Initializing predict_model()
2023-06-07 19:12:43,503:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017E2573BAC0>, estimator=RandomForestRegressor(n_jobs=-1, random_state=123), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017E527DD7E0>)
2023-06-07 19:12:43,503:INFO:Checking exceptions
2023-06-07 19:12:43,503:INFO:Preloading libraries
2023-06-07 19:12:43,507:INFO:Set up data.
2023-06-07 19:12:43,574:INFO:Set up index.
2023-06-07 19:12:54,741:INFO:Initializing evaluate_model()
2023-06-07 19:12:54,741:INFO:evaluate_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017E2573BAC0>, estimator=             data  codigo_ibge   latitude  longitude  T2M_RANGE         TS  \
0      2003-01-01      4100103 -23.304899 -50.313301      12.71  26.830000   
1      2003-01-05      4100103 -23.304899 -50.313301       8.83  24.480000   
2      2003-01-07      4100103 -23.304899 -50.313301      12.34  25.910000   
3      2003-01-12      4100103 -23.304899 -50.313301       7.14  23.870001   
4      2003-01-18      4100103 -23.304899 -50.313301      12.57  26.090000   
...           ...          ...        ...        ...        ...        ...   
19995  2003-11-26      4122602 -23.412001 -52.765900       6.27  22.459999   
19996  2003-12-04      4122602 -23.412001 -52.765900       8.40  23.660000   
19997  2003-12-10      4122602 -23.412001 -52.765900      13.72  19.040001   
19998  2003-12-11      4122602 -23.412001 -52.765900       7.04  23.020000   
19999  2003-12-16      4122602 -23.412001 -52.765900      10.12  21.799999   

          T2MDEW     T2MWET    T2M_MAX    T2M_MIN  ...  ALLSKY_SFC_SW_DWN  \
0      21.080000  23.770000  33.150002  20.430000  ...          23.500000   
1      21.580000  22.940001  29.209999  20.379999  ...          15.150000   
2      19.400000  22.610001  32.380001  20.040001  ...          29.959999   
3      20.730000  22.170000  27.620001  20.480000  ...          12.940000   
4      20.650000  23.129999  32.349998  19.780001  ...          21.129999   
...          ...        ...        ...        ...  ...                ...   
19995  21.200001  21.830000  25.650000  19.379999  ...           6.910000   
19996  20.709999  22.190001  28.010000  19.610001  ...          15.030000   
19997  14.160000  16.580000  24.959999  11.240000  ...          27.480000   
19998  21.090000  22.059999  26.809999  19.770000  ...          19.900000   
19999  19.330000  20.580000  26.910000  16.799999  ...          21.360001   

       CLRSKY_SFC_SW_DWN  TOA_SW_DWN  ALLSKY_SFC_PAR_TOT  CLRSKY_SFC_PAR_TOT  \
0              30.530001   42.750000          129.630005          165.100006   
1              29.280001   42.660000           85.010002          155.690002   
2              31.299999   42.610001          158.970001          164.380005   
3              28.889999   42.450001           74.300003          154.050003   
4              29.799999   42.189999          115.839996          159.610001   
...                  ...         ...                 ...                 ...   
19995          28.020000   41.970001           40.520000          147.460007   
19996          28.950001   42.380001           84.639999          154.130005   
19997          30.510000   42.580002          147.820007          161.199997   
19998          29.680000   42.610001          110.110001          159.740005   
19999          29.830000   42.709999          116.290001          157.800003   

       ALLSKY_SFC_UVA  ALLSKY_SFC_UVB  ALLSKY_SFC_UV_INDEX         PS  \
0           17.950001            0.57                 2.99  94.139999   
1           11.800000            0.37                 1.91  93.800003   
2           21.120001            0.66                 3.51  94.199997   
3           10.420000            0.33                 1.70  94.279999   
4           15.790000            0.51                 2.62  94.150002   
...               ...             ...                  ...        ...   
19995        5.670000            0.16                 0.84  96.510002   
19996       11.700000            0.35                 1.80  96.190002   
19997       19.559999            0.58                 2.98  96.680000   
19998       14.950000            0.45                 2.32  96.650002   
19999       15.410000            0.46                 2.37  96.650002   

       prediction_label  
0             94.150800  
1             93.979901  
2             94.251698  
3             94.293899  
4             94.193601  
...                 ...  
19995         96.443901  
19996         96.209402  
19997         96.671200  
19998         96.619201  
19999         96.672401  

[20000 rows x 39 columns], fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-07 19:12:54,837:INFO:Initializing plot_model()
2023-06-07 19:12:54,837:INFO:plot_model(plot=pipeline, fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=             data  codigo_ibge   latitude  longitude  T2M_RANGE         TS  \
0      2003-01-01      4100103 -23.304899 -50.313301      12.71  26.830000   
1      2003-01-05      4100103 -23.304899 -50.313301       8.83  24.480000   
2      2003-01-07      4100103 -23.304899 -50.313301      12.34  25.910000   
3      2003-01-12      4100103 -23.304899 -50.313301       7.14  23.870001   
4      2003-01-18      4100103 -23.304899 -50.313301      12.57  26.090000   
...           ...          ...        ...        ...        ...        ...   
19995  2003-11-26      4122602 -23.412001 -52.765900       6.27  22.459999   
19996  2003-12-04      4122602 -23.412001 -52.765900       8.40  23.660000   
19997  2003-12-10      4122602 -23.412001 -52.765900      13.72  19.040001   
19998  2003-12-11      4122602 -23.412001 -52.765900       7.04  23.020000   
19999  2003-12-16      4122602 -23.412001 -52.765900      10.12  21.799999   

          T2MDEW     T2MWET    T2M_MAX    T2M_MIN  ...  ALLSKY_SFC_SW_DWN  \
0      21.080000  23.770000  33.150002  20.430000  ...          23.500000   
1      21.580000  22.940001  29.209999  20.379999  ...          15.150000   
2      19.400000  22.610001  32.380001  20.040001  ...          29.959999   
3      20.730000  22.170000  27.620001  20.480000  ...          12.940000   
4      20.650000  23.129999  32.349998  19.780001  ...          21.129999   
...          ...        ...        ...        ...  ...                ...   
19995  21.200001  21.830000  25.650000  19.379999  ...           6.910000   
19996  20.709999  22.190001  28.010000  19.610001  ...          15.030000   
19997  14.160000  16.580000  24.959999  11.240000  ...          27.480000   
19998  21.090000  22.059999  26.809999  19.770000  ...          19.900000   
19999  19.330000  20.580000  26.910000  16.799999  ...          21.360001   

       CLRSKY_SFC_SW_DWN  TOA_SW_DWN  ALLSKY_SFC_PAR_TOT  CLRSKY_SFC_PAR_TOT  \
0              30.530001   42.750000          129.630005          165.100006   
1              29.280001   42.660000           85.010002          155.690002   
2              31.299999   42.610001          158.970001          164.380005   
3              28.889999   42.450001           74.300003          154.050003   
4              29.799999   42.189999          115.839996          159.610001   
...                  ...         ...                 ...                 ...   
19995          28.020000   41.970001           40.520000          147.460007   
19996          28.950001   42.380001           84.639999          154.130005   
19997          30.510000   42.580002          147.820007          161.199997   
19998          29.680000   42.610001          110.110001          159.740005   
19999          29.830000   42.709999          116.290001          157.800003   

       ALLSKY_SFC_UVA  ALLSKY_SFC_UVB  ALLSKY_SFC_UV_INDEX         PS  \
0           17.950001            0.57                 2.99  94.139999   
1           11.800000            0.37                 1.91  93.800003   
2           21.120001            0.66                 3.51  94.199997   
3           10.420000            0.33                 1.70  94.279999   
4           15.790000            0.51                 2.62  94.150002   
...               ...             ...                  ...        ...   
19995        5.670000            0.16                 0.84  96.510002   
19996       11.700000            0.35                 1.80  96.190002   
19997       19.559999            0.58                 2.98  96.680000   
19998       14.950000            0.45                 2.32  96.650002   
19999       15.410000            0.46                 2.37  96.650002   

       prediction_label  
0             94.150800  
1             93.979901  
2             94.251698  
3             94.293899  
4             94.193601  
...                 ...  
19995         96.443901  
19996         96.209402  
19997         96.671200  
19998         96.619201  
19999         96.672401  

[20000 rows x 39 columns], feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017E2573BAC0>, system=True)
2023-06-07 19:12:54,837:INFO:Checking exceptions
2023-06-07 19:13:20,206:INFO:Initializing plot_model()
2023-06-07 19:13:20,207:INFO:plot_model(plot=parameter, fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=             data  codigo_ibge   latitude  longitude  T2M_RANGE         TS  \
0      2003-01-01      4100103 -23.304899 -50.313301      12.71  26.830000   
1      2003-01-05      4100103 -23.304899 -50.313301       8.83  24.480000   
2      2003-01-07      4100103 -23.304899 -50.313301      12.34  25.910000   
3      2003-01-12      4100103 -23.304899 -50.313301       7.14  23.870001   
4      2003-01-18      4100103 -23.304899 -50.313301      12.57  26.090000   
...           ...          ...        ...        ...        ...        ...   
19995  2003-11-26      4122602 -23.412001 -52.765900       6.27  22.459999   
19996  2003-12-04      4122602 -23.412001 -52.765900       8.40  23.660000   
19997  2003-12-10      4122602 -23.412001 -52.765900      13.72  19.040001   
19998  2003-12-11      4122602 -23.412001 -52.765900       7.04  23.020000   
19999  2003-12-16      4122602 -23.412001 -52.765900      10.12  21.799999   

          T2MDEW     T2MWET    T2M_MAX    T2M_MIN  ...  ALLSKY_SFC_SW_DWN  \
0      21.080000  23.770000  33.150002  20.430000  ...          23.500000   
1      21.580000  22.940001  29.209999  20.379999  ...          15.150000   
2      19.400000  22.610001  32.380001  20.040001  ...          29.959999   
3      20.730000  22.170000  27.620001  20.480000  ...          12.940000   
4      20.650000  23.129999  32.349998  19.780001  ...          21.129999   
...          ...        ...        ...        ...  ...                ...   
19995  21.200001  21.830000  25.650000  19.379999  ...           6.910000   
19996  20.709999  22.190001  28.010000  19.610001  ...          15.030000   
19997  14.160000  16.580000  24.959999  11.240000  ...          27.480000   
19998  21.090000  22.059999  26.809999  19.770000  ...          19.900000   
19999  19.330000  20.580000  26.910000  16.799999  ...          21.360001   

       CLRSKY_SFC_SW_DWN  TOA_SW_DWN  ALLSKY_SFC_PAR_TOT  CLRSKY_SFC_PAR_TOT  \
0              30.530001   42.750000          129.630005          165.100006   
1              29.280001   42.660000           85.010002          155.690002   
2              31.299999   42.610001          158.970001          164.380005   
3              28.889999   42.450001           74.300003          154.050003   
4              29.799999   42.189999          115.839996          159.610001   
...                  ...         ...                 ...                 ...   
19995          28.020000   41.970001           40.520000          147.460007   
19996          28.950001   42.380001           84.639999          154.130005   
19997          30.510000   42.580002          147.820007          161.199997   
19998          29.680000   42.610001          110.110001          159.740005   
19999          29.830000   42.709999          116.290001          157.800003   

       ALLSKY_SFC_UVA  ALLSKY_SFC_UVB  ALLSKY_SFC_UV_INDEX         PS  \
0           17.950001            0.57                 2.99  94.139999   
1           11.800000            0.37                 1.91  93.800003   
2           21.120001            0.66                 3.51  94.199997   
3           10.420000            0.33                 1.70  94.279999   
4           15.790000            0.51                 2.62  94.150002   
...               ...             ...                  ...        ...   
19995        5.670000            0.16                 0.84  96.510002   
19996       11.700000            0.35                 1.80  96.190002   
19997       19.559999            0.58                 2.98  96.680000   
19998       14.950000            0.45                 2.32  96.650002   
19999       15.410000            0.46                 2.37  96.650002   

       prediction_label  
0             94.150800  
1             93.979901  
2             94.251698  
3             94.293899  
4             94.193601  
...                 ...  
19995         96.443901  
19996         96.209402  
19997         96.671200  
19998         96.619201  
19999         96.672401  

[20000 rows x 39 columns], feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017E2573BAC0>, system=True)
2023-06-07 19:13:20,207:INFO:Checking exceptions
2023-06-07 19:13:22,621:INFO:Initializing plot_model()
2023-06-07 19:13:22,622:INFO:plot_model(plot=residuals, fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=             data  codigo_ibge   latitude  longitude  T2M_RANGE         TS  \
0      2003-01-01      4100103 -23.304899 -50.313301      12.71  26.830000   
1      2003-01-05      4100103 -23.304899 -50.313301       8.83  24.480000   
2      2003-01-07      4100103 -23.304899 -50.313301      12.34  25.910000   
3      2003-01-12      4100103 -23.304899 -50.313301       7.14  23.870001   
4      2003-01-18      4100103 -23.304899 -50.313301      12.57  26.090000   
...           ...          ...        ...        ...        ...        ...   
19995  2003-11-26      4122602 -23.412001 -52.765900       6.27  22.459999   
19996  2003-12-04      4122602 -23.412001 -52.765900       8.40  23.660000   
19997  2003-12-10      4122602 -23.412001 -52.765900      13.72  19.040001   
19998  2003-12-11      4122602 -23.412001 -52.765900       7.04  23.020000   
19999  2003-12-16      4122602 -23.412001 -52.765900      10.12  21.799999   

          T2MDEW     T2MWET    T2M_MAX    T2M_MIN  ...  ALLSKY_SFC_SW_DWN  \
0      21.080000  23.770000  33.150002  20.430000  ...          23.500000   
1      21.580000  22.940001  29.209999  20.379999  ...          15.150000   
2      19.400000  22.610001  32.380001  20.040001  ...          29.959999   
3      20.730000  22.170000  27.620001  20.480000  ...          12.940000   
4      20.650000  23.129999  32.349998  19.780001  ...          21.129999   
...          ...        ...        ...        ...  ...                ...   
19995  21.200001  21.830000  25.650000  19.379999  ...           6.910000   
19996  20.709999  22.190001  28.010000  19.610001  ...          15.030000   
19997  14.160000  16.580000  24.959999  11.240000  ...          27.480000   
19998  21.090000  22.059999  26.809999  19.770000  ...          19.900000   
19999  19.330000  20.580000  26.910000  16.799999  ...          21.360001   

       CLRSKY_SFC_SW_DWN  TOA_SW_DWN  ALLSKY_SFC_PAR_TOT  CLRSKY_SFC_PAR_TOT  \
0              30.530001   42.750000          129.630005          165.100006   
1              29.280001   42.660000           85.010002          155.690002   
2              31.299999   42.610001          158.970001          164.380005   
3              28.889999   42.450001           74.300003          154.050003   
4              29.799999   42.189999          115.839996          159.610001   
...                  ...         ...                 ...                 ...   
19995          28.020000   41.970001           40.520000          147.460007   
19996          28.950001   42.380001           84.639999          154.130005   
19997          30.510000   42.580002          147.820007          161.199997   
19998          29.680000   42.610001          110.110001          159.740005   
19999          29.830000   42.709999          116.290001          157.800003   

       ALLSKY_SFC_UVA  ALLSKY_SFC_UVB  ALLSKY_SFC_UV_INDEX         PS  \
0           17.950001            0.57                 2.99  94.139999   
1           11.800000            0.37                 1.91  93.800003   
2           21.120001            0.66                 3.51  94.199997   
3           10.420000            0.33                 1.70  94.279999   
4           15.790000            0.51                 2.62  94.150002   
...               ...             ...                  ...        ...   
19995        5.670000            0.16                 0.84  96.510002   
19996       11.700000            0.35                 1.80  96.190002   
19997       19.559999            0.58                 2.98  96.680000   
19998       14.950000            0.45                 2.32  96.650002   
19999       15.410000            0.46                 2.37  96.650002   

       prediction_label  
0             94.150800  
1             93.979901  
2             94.251698  
3             94.293899  
4             94.193601  
...                 ...  
19995         96.443901  
19996         96.209402  
19997         96.671200  
19998         96.619201  
19999         96.672401  

[20000 rows x 39 columns], feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017E2573BAC0>, system=True)
2023-06-07 19:13:22,622:INFO:Checking exceptions
2023-06-07 19:13:25,070:INFO:Initializing plot_model()
2023-06-07 19:13:25,070:INFO:plot_model(plot=error, fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=             data  codigo_ibge   latitude  longitude  T2M_RANGE         TS  \
0      2003-01-01      4100103 -23.304899 -50.313301      12.71  26.830000   
1      2003-01-05      4100103 -23.304899 -50.313301       8.83  24.480000   
2      2003-01-07      4100103 -23.304899 -50.313301      12.34  25.910000   
3      2003-01-12      4100103 -23.304899 -50.313301       7.14  23.870001   
4      2003-01-18      4100103 -23.304899 -50.313301      12.57  26.090000   
...           ...          ...        ...        ...        ...        ...   
19995  2003-11-26      4122602 -23.412001 -52.765900       6.27  22.459999   
19996  2003-12-04      4122602 -23.412001 -52.765900       8.40  23.660000   
19997  2003-12-10      4122602 -23.412001 -52.765900      13.72  19.040001   
19998  2003-12-11      4122602 -23.412001 -52.765900       7.04  23.020000   
19999  2003-12-16      4122602 -23.412001 -52.765900      10.12  21.799999   

          T2MDEW     T2MWET    T2M_MAX    T2M_MIN  ...  ALLSKY_SFC_SW_DWN  \
0      21.080000  23.770000  33.150002  20.430000  ...          23.500000   
1      21.580000  22.940001  29.209999  20.379999  ...          15.150000   
2      19.400000  22.610001  32.380001  20.040001  ...          29.959999   
3      20.730000  22.170000  27.620001  20.480000  ...          12.940000   
4      20.650000  23.129999  32.349998  19.780001  ...          21.129999   
...          ...        ...        ...        ...  ...                ...   
19995  21.200001  21.830000  25.650000  19.379999  ...           6.910000   
19996  20.709999  22.190001  28.010000  19.610001  ...          15.030000   
19997  14.160000  16.580000  24.959999  11.240000  ...          27.480000   
19998  21.090000  22.059999  26.809999  19.770000  ...          19.900000   
19999  19.330000  20.580000  26.910000  16.799999  ...          21.360001   

       CLRSKY_SFC_SW_DWN  TOA_SW_DWN  ALLSKY_SFC_PAR_TOT  CLRSKY_SFC_PAR_TOT  \
0              30.530001   42.750000          129.630005          165.100006   
1              29.280001   42.660000           85.010002          155.690002   
2              31.299999   42.610001          158.970001          164.380005   
3              28.889999   42.450001           74.300003          154.050003   
4              29.799999   42.189999          115.839996          159.610001   
...                  ...         ...                 ...                 ...   
19995          28.020000   41.970001           40.520000          147.460007   
19996          28.950001   42.380001           84.639999          154.130005   
19997          30.510000   42.580002          147.820007          161.199997   
19998          29.680000   42.610001          110.110001          159.740005   
19999          29.830000   42.709999          116.290001          157.800003   

       ALLSKY_SFC_UVA  ALLSKY_SFC_UVB  ALLSKY_SFC_UV_INDEX         PS  \
0           17.950001            0.57                 2.99  94.139999   
1           11.800000            0.37                 1.91  93.800003   
2           21.120001            0.66                 3.51  94.199997   
3           10.420000            0.33                 1.70  94.279999   
4           15.790000            0.51                 2.62  94.150002   
...               ...             ...                  ...        ...   
19995        5.670000            0.16                 0.84  96.510002   
19996       11.700000            0.35                 1.80  96.190002   
19997       19.559999            0.58                 2.98  96.680000   
19998       14.950000            0.45                 2.32  96.650002   
19999       15.410000            0.46                 2.37  96.650002   

       prediction_label  
0             94.150800  
1             93.979901  
2             94.251698  
3             94.293899  
4             94.193601  
...                 ...  
19995         96.443901  
19996         96.209402  
19997         96.671200  
19998         96.619201  
19999         96.672401  

[20000 rows x 39 columns], feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017E2573BAC0>, system=True)
2023-06-07 19:13:25,071:INFO:Checking exceptions
2023-06-07 19:13:27,685:INFO:Initializing plot_model()
2023-06-07 19:13:27,685:INFO:plot_model(plot=manifold, fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=             data  codigo_ibge   latitude  longitude  T2M_RANGE         TS  \
0      2003-01-01      4100103 -23.304899 -50.313301      12.71  26.830000   
1      2003-01-05      4100103 -23.304899 -50.313301       8.83  24.480000   
2      2003-01-07      4100103 -23.304899 -50.313301      12.34  25.910000   
3      2003-01-12      4100103 -23.304899 -50.313301       7.14  23.870001   
4      2003-01-18      4100103 -23.304899 -50.313301      12.57  26.090000   
...           ...          ...        ...        ...        ...        ...   
19995  2003-11-26      4122602 -23.412001 -52.765900       6.27  22.459999   
19996  2003-12-04      4122602 -23.412001 -52.765900       8.40  23.660000   
19997  2003-12-10      4122602 -23.412001 -52.765900      13.72  19.040001   
19998  2003-12-11      4122602 -23.412001 -52.765900       7.04  23.020000   
19999  2003-12-16      4122602 -23.412001 -52.765900      10.12  21.799999   

          T2MDEW     T2MWET    T2M_MAX    T2M_MIN  ...  ALLSKY_SFC_SW_DWN  \
0      21.080000  23.770000  33.150002  20.430000  ...          23.500000   
1      21.580000  22.940001  29.209999  20.379999  ...          15.150000   
2      19.400000  22.610001  32.380001  20.040001  ...          29.959999   
3      20.730000  22.170000  27.620001  20.480000  ...          12.940000   
4      20.650000  23.129999  32.349998  19.780001  ...          21.129999   
...          ...        ...        ...        ...  ...                ...   
19995  21.200001  21.830000  25.650000  19.379999  ...           6.910000   
19996  20.709999  22.190001  28.010000  19.610001  ...          15.030000   
19997  14.160000  16.580000  24.959999  11.240000  ...          27.480000   
19998  21.090000  22.059999  26.809999  19.770000  ...          19.900000   
19999  19.330000  20.580000  26.910000  16.799999  ...          21.360001   

       CLRSKY_SFC_SW_DWN  TOA_SW_DWN  ALLSKY_SFC_PAR_TOT  CLRSKY_SFC_PAR_TOT  \
0              30.530001   42.750000          129.630005          165.100006   
1              29.280001   42.660000           85.010002          155.690002   
2              31.299999   42.610001          158.970001          164.380005   
3              28.889999   42.450001           74.300003          154.050003   
4              29.799999   42.189999          115.839996          159.610001   
...                  ...         ...                 ...                 ...   
19995          28.020000   41.970001           40.520000          147.460007   
19996          28.950001   42.380001           84.639999          154.130005   
19997          30.510000   42.580002          147.820007          161.199997   
19998          29.680000   42.610001          110.110001          159.740005   
19999          29.830000   42.709999          116.290001          157.800003   

       ALLSKY_SFC_UVA  ALLSKY_SFC_UVB  ALLSKY_SFC_UV_INDEX         PS  \
0           17.950001            0.57                 2.99  94.139999   
1           11.800000            0.37                 1.91  93.800003   
2           21.120001            0.66                 3.51  94.199997   
3           10.420000            0.33                 1.70  94.279999   
4           15.790000            0.51                 2.62  94.150002   
...               ...             ...                  ...        ...   
19995        5.670000            0.16                 0.84  96.510002   
19996       11.700000            0.35                 1.80  96.190002   
19997       19.559999            0.58                 2.98  96.680000   
19998       14.950000            0.45                 2.32  96.650002   
19999       15.410000            0.46                 2.37  96.650002   

       prediction_label  
0             94.150800  
1             93.979901  
2             94.251698  
3             94.293899  
4             94.193601  
...                 ...  
19995         96.443901  
19996         96.209402  
19997         96.671200  
19998         96.619201  
19999         96.672401  

[20000 rows x 39 columns], feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017E2573BAC0>, system=True)
2023-06-07 19:13:27,685:INFO:Checking exceptions
2023-06-07 19:13:30,537:INFO:Initializing plot_model()
2023-06-07 19:13:30,537:INFO:plot_model(plot=learning, fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=             data  codigo_ibge   latitude  longitude  T2M_RANGE         TS  \
0      2003-01-01      4100103 -23.304899 -50.313301      12.71  26.830000   
1      2003-01-05      4100103 -23.304899 -50.313301       8.83  24.480000   
2      2003-01-07      4100103 -23.304899 -50.313301      12.34  25.910000   
3      2003-01-12      4100103 -23.304899 -50.313301       7.14  23.870001   
4      2003-01-18      4100103 -23.304899 -50.313301      12.57  26.090000   
...           ...          ...        ...        ...        ...        ...   
19995  2003-11-26      4122602 -23.412001 -52.765900       6.27  22.459999   
19996  2003-12-04      4122602 -23.412001 -52.765900       8.40  23.660000   
19997  2003-12-10      4122602 -23.412001 -52.765900      13.72  19.040001   
19998  2003-12-11      4122602 -23.412001 -52.765900       7.04  23.020000   
19999  2003-12-16      4122602 -23.412001 -52.765900      10.12  21.799999   

          T2MDEW     T2MWET    T2M_MAX    T2M_MIN  ...  ALLSKY_SFC_SW_DWN  \
0      21.080000  23.770000  33.150002  20.430000  ...          23.500000   
1      21.580000  22.940001  29.209999  20.379999  ...          15.150000   
2      19.400000  22.610001  32.380001  20.040001  ...          29.959999   
3      20.730000  22.170000  27.620001  20.480000  ...          12.940000   
4      20.650000  23.129999  32.349998  19.780001  ...          21.129999   
...          ...        ...        ...        ...  ...                ...   
19995  21.200001  21.830000  25.650000  19.379999  ...           6.910000   
19996  20.709999  22.190001  28.010000  19.610001  ...          15.030000   
19997  14.160000  16.580000  24.959999  11.240000  ...          27.480000   
19998  21.090000  22.059999  26.809999  19.770000  ...          19.900000   
19999  19.330000  20.580000  26.910000  16.799999  ...          21.360001   

       CLRSKY_SFC_SW_DWN  TOA_SW_DWN  ALLSKY_SFC_PAR_TOT  CLRSKY_SFC_PAR_TOT  \
0              30.530001   42.750000          129.630005          165.100006   
1              29.280001   42.660000           85.010002          155.690002   
2              31.299999   42.610001          158.970001          164.380005   
3              28.889999   42.450001           74.300003          154.050003   
4              29.799999   42.189999          115.839996          159.610001   
...                  ...         ...                 ...                 ...   
19995          28.020000   41.970001           40.520000          147.460007   
19996          28.950001   42.380001           84.639999          154.130005   
19997          30.510000   42.580002          147.820007          161.199997   
19998          29.680000   42.610001          110.110001          159.740005   
19999          29.830000   42.709999          116.290001          157.800003   

       ALLSKY_SFC_UVA  ALLSKY_SFC_UVB  ALLSKY_SFC_UV_INDEX         PS  \
0           17.950001            0.57                 2.99  94.139999   
1           11.800000            0.37                 1.91  93.800003   
2           21.120001            0.66                 3.51  94.199997   
3           10.420000            0.33                 1.70  94.279999   
4           15.790000            0.51                 2.62  94.150002   
...               ...             ...                  ...        ...   
19995        5.670000            0.16                 0.84  96.510002   
19996       11.700000            0.35                 1.80  96.190002   
19997       19.559999            0.58                 2.98  96.680000   
19998       14.950000            0.45                 2.32  96.650002   
19999       15.410000            0.46                 2.37  96.650002   

       prediction_label  
0             94.150800  
1             93.979901  
2             94.251698  
3             94.293899  
4             94.193601  
...                 ...  
19995         96.443901  
19996         96.209402  
19997         96.671200  
19998         96.619201  
19999         96.672401  

[20000 rows x 39 columns], feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017E2573BAC0>, system=True)
2023-06-07 19:13:30,537:INFO:Checking exceptions
2023-06-07 19:13:34,496:INFO:Initializing plot_model()
2023-06-07 19:13:34,496:INFO:plot_model(plot=learning, fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestRegressor(n_jobs=-1, random_state=123), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017E2573BAC0>, system=True)
2023-06-07 19:13:34,496:INFO:Checking exceptions
2023-06-07 19:13:34,551:INFO:Preloading libraries
2023-06-07 19:13:34,801:INFO:Copying training dataset
2023-06-07 19:13:34,801:INFO:Plot type: learning
2023-06-07 19:13:35,098:INFO:Fitting Model
2023-06-07 19:18:24,826:INFO:Initializing predict_model()
2023-06-07 19:18:24,827:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017E2573BAC0>, estimator=RandomForestRegressor(n_jobs=-1, random_state=123), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017E631792D0>)
2023-06-07 19:18:24,827:INFO:Checking exceptions
2023-06-07 19:18:24,827:INFO:Preloading libraries
2023-06-07 19:18:24,830:INFO:Set up data.
2023-06-07 19:18:24,852:INFO:Set up index.
2023-06-07 19:18:28,431:INFO:Initializing plot_model()
2023-06-07 19:18:28,432:INFO:plot_model(plot=rfe, fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestRegressor(n_jobs=-1, random_state=123), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017E2573BAC0>, system=True)
2023-06-07 19:18:28,432:INFO:Checking exceptions
2023-06-07 19:18:28,509:INFO:Preloading libraries
2023-06-07 19:18:28,819:INFO:Copying training dataset
2023-06-07 19:18:28,819:INFO:Plot type: rfe
2023-06-07 19:18:29,238:INFO:Fitting Model
2023-06-07 19:20:21,598:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-07 19:20:21,598:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-07 19:20:21,598:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-07 19:20:21,598:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-07 19:20:23,085:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-07 19:20:50,354:INFO:PyCaret RegressionExperiment
2023-06-07 19:20:50,355:INFO:Logging name: reg-default-name
2023-06-07 19:20:50,355:INFO:ML Usecase: MLUsecase.REGRESSION
2023-06-07 19:20:50,355:INFO:version 3.0.2
2023-06-07 19:20:50,355:INFO:Initializing setup()
2023-06-07 19:20:50,355:INFO:self.USI: e441
2023-06-07 19:20:50,355:INFO:self._variable_keys: {'n_jobs_param', '_available_plots', 'X_test', 'fold_generator', 'y_test', '_ml_usecase', 'html_param', 'exp_id', 'pipeline', 'transform_target_param', 'fold_groups_param', 'gpu_n_jobs_param', 'gpu_param', 'data', 'fold_shuffle_param', 'exp_name_log', 'idx', 'USI', 'X', 'y', 'X_train', 'y_train', 'seed', 'target_param', 'memory', 'log_plots_param', 'logging_param'}
2023-06-07 19:20:50,355:INFO:Checking environment
2023-06-07 19:20:50,355:INFO:python_version: 3.10.9
2023-06-07 19:20:50,355:INFO:python_build: ('main', 'Mar  1 2023 18:18:15')
2023-06-07 19:20:50,355:INFO:machine: AMD64
2023-06-07 19:20:50,355:INFO:platform: Windows-10-10.0.19041-SP0
2023-06-07 19:20:50,355:INFO:Memory: svmem(total=6378106880, available=2639802368, percent=58.6, used=3738304512, free=2639802368)
2023-06-07 19:20:50,356:INFO:Physical Core: 4
2023-06-07 19:20:50,356:INFO:Logical Core: 8
2023-06-07 19:20:50,356:INFO:Checking libraries
2023-06-07 19:20:50,356:INFO:System:
2023-06-07 19:20:50,356:INFO:    python: 3.10.9 | packaged by Anaconda, Inc. | (main, Mar  1 2023, 18:18:15) [MSC v.1916 64 bit (AMD64)]
2023-06-07 19:20:50,356:INFO:executable: c:\Users\Crossddelta\anaconda3\python.exe
2023-06-07 19:20:50,356:INFO:   machine: Windows-10-10.0.19041-SP0
2023-06-07 19:20:50,356:INFO:PyCaret required dependencies:
2023-06-07 19:20:50,356:INFO:                 pip: 22.3.1
2023-06-07 19:20:50,356:INFO:          setuptools: 65.6.3
2023-06-07 19:20:50,356:INFO:             pycaret: 3.0.2
2023-06-07 19:20:50,356:INFO:             IPython: 8.10.0
2023-06-07 19:20:50,356:INFO:          ipywidgets: 7.6.5
2023-06-07 19:20:50,356:INFO:                tqdm: 4.64.1
2023-06-07 19:20:50,357:INFO:               numpy: 1.23.5
2023-06-07 19:20:50,357:INFO:              pandas: 1.5.3
2023-06-07 19:20:50,357:INFO:              jinja2: 3.1.2
2023-06-07 19:20:50,357:INFO:               scipy: 1.10.0
2023-06-07 19:20:50,357:INFO:              joblib: 1.2.0
2023-06-07 19:20:50,357:INFO:             sklearn: 1.2.1
2023-06-07 19:20:50,357:INFO:                pyod: 1.0.9
2023-06-07 19:20:50,357:INFO:            imblearn: 0.10.1
2023-06-07 19:20:50,357:INFO:   category_encoders: 2.6.1
2023-06-07 19:20:50,357:INFO:            lightgbm: 3.3.5
2023-06-07 19:20:50,357:INFO:               numba: 0.56.4
2023-06-07 19:20:50,357:INFO:            requests: 2.28.1
2023-06-07 19:20:50,357:INFO:          matplotlib: 3.7.0
2023-06-07 19:20:50,357:INFO:          scikitplot: 0.3.7
2023-06-07 19:20:50,357:INFO:         yellowbrick: 1.5
2023-06-07 19:20:50,357:INFO:              plotly: 5.9.0
2023-06-07 19:20:50,357:INFO:             kaleido: 0.2.1
2023-06-07 19:20:50,357:INFO:         statsmodels: 0.13.5
2023-06-07 19:20:50,358:INFO:              sktime: 0.17.0
2023-06-07 19:20:50,358:INFO:               tbats: 1.1.3
2023-06-07 19:20:50,358:INFO:            pmdarima: 2.0.3
2023-06-07 19:20:50,358:INFO:              psutil: 5.9.0
2023-06-07 19:20:50,358:INFO:PyCaret optional dependencies:
2023-06-07 19:20:50,378:INFO:                shap: Not installed
2023-06-07 19:20:50,379:INFO:           interpret: Not installed
2023-06-07 19:20:50,379:INFO:                umap: Not installed
2023-06-07 19:20:50,379:INFO:    pandas_profiling: Not installed
2023-06-07 19:20:50,379:INFO:  explainerdashboard: Not installed
2023-06-07 19:20:50,379:INFO:             autoviz: Not installed
2023-06-07 19:20:50,379:INFO:           fairlearn: Not installed
2023-06-07 19:20:50,379:INFO:             xgboost: Not installed
2023-06-07 19:20:50,379:INFO:            catboost: Not installed
2023-06-07 19:20:50,379:INFO:              kmodes: Not installed
2023-06-07 19:20:50,379:INFO:             mlxtend: Not installed
2023-06-07 19:20:50,379:INFO:       statsforecast: Not installed
2023-06-07 19:20:50,379:INFO:        tune_sklearn: Not installed
2023-06-07 19:20:50,379:INFO:                 ray: Not installed
2023-06-07 19:20:50,379:INFO:            hyperopt: Not installed
2023-06-07 19:20:50,379:INFO:              optuna: Not installed
2023-06-07 19:20:50,380:INFO:               skopt: Not installed
2023-06-07 19:20:50,380:INFO:              mlflow: Not installed
2023-06-07 19:20:50,380:INFO:              gradio: Not installed
2023-06-07 19:20:50,380:INFO:             fastapi: Not installed
2023-06-07 19:20:50,380:INFO:             uvicorn: Not installed
2023-06-07 19:20:50,380:INFO:              m2cgen: Not installed
2023-06-07 19:20:50,380:INFO:           evidently: Not installed
2023-06-07 19:20:50,380:INFO:               fugue: Not installed
2023-06-07 19:20:50,380:INFO:           streamlit: Not installed
2023-06-07 19:20:50,380:INFO:             prophet: Not installed
2023-06-07 19:20:50,380:INFO:None
2023-06-07 19:20:50,380:INFO:Set up data.
2023-06-07 19:20:50,477:INFO:Set up train/test split.
2023-06-07 19:20:50,534:INFO:Set up index.
2023-06-07 19:20:50,538:INFO:Set up folding strategy.
2023-06-07 19:20:50,538:INFO:Assigning column types.
2023-06-07 19:20:50,584:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-07 19:20:50,585:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-07 19:20:50,593:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-07 19:20:50,600:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-07 19:20:50,727:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 19:20:50,796:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-07 19:20:50,797:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:20:51,149:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:20:51,150:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-07 19:20:51,157:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-07 19:20:51,164:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-07 19:20:51,296:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 19:20:51,367:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-07 19:20:51,368:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:20:51,369:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:20:51,369:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-06-07 19:20:51,376:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-07 19:20:51,383:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-07 19:20:51,510:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 19:20:51,579:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-07 19:20:51,579:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:20:51,580:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:20:51,587:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-07 19:20:51,594:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-07 19:20:51,725:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 19:20:51,794:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-07 19:20:51,795:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:20:51,796:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:20:51,796:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-06-07 19:20:51,810:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-07 19:20:51,939:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 19:20:52,012:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-07 19:20:52,013:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:20:52,013:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:20:52,030:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-07 19:20:52,204:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 19:20:52,279:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-07 19:20:52,280:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:20:52,280:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:20:52,281:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-06-07 19:20:52,428:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 19:20:52,496:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-07 19:20:52,497:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:20:52,497:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:20:52,637:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 19:20:52,704:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-07 19:20:52,705:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:20:52,705:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:20:52,706:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-07 19:20:52,849:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 19:20:52,919:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:20:52,919:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:20:53,103:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 19:20:53,192:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:20:53,192:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:20:53,192:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-06-07 19:20:53,401:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:20:53,402:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:20:53,620:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:20:53,621:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:20:53,623:INFO:Preparing preprocessing pipeline...
2023-06-07 19:20:53,623:INFO:Set up simple imputation.
2023-06-07 19:20:53,649:INFO:Set up encoding of categorical features.
2023-06-07 19:20:53,980:INFO:Finished creating preprocessing pipeline.
2023-06-07 19:20:53,996:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\CROSSD~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['codigo_ibge', 'latitude',
                                             'longitude', 'T2M_RANGE', 'TS',
                                             'T2MDEW', 'T2MWET', 'T2M_MAX',
                                             'T2M_MIN', 'T2M', 'QV2M', 'RH2M',
                                             'PRECTOTCORR', 'WS2M', 'WS2M_MAX',
                                             'WS2M_MIN', 'WS2M_RANGE', 'WS10M',
                                             'WS10M_MAX', 'WS10M_MIN',
                                             'WS10M_RANGE'...
                                             'WS50M_RANGE', 'GWETTOP',
                                             'GWETROOT', 'GWETPROF',
                                             'ALLSKY_SFC_SW_DWN',
                                             'CLRSKY_SFC_SW_DWN', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['data'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rest_encoding',
                 TransformerWrapper(include=['data'],
                                    transformer=TargetEncoder(cols=['data'],
                                                              handle_missing='return_nan')))])
2023-06-07 19:20:53,997:INFO:Creating final display dataframe.
2023-06-07 19:20:54,346:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target                PS
2                   Target type        Regression
3           Original data shape       (80000, 38)
4        Transformed data shape       (80000, 38)
5   Transformed train set shape       (56000, 38)
6    Transformed test set shape       (24000, 38)
7              Numeric features                36
8          Categorical features                 1
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15               Fold Generator             KFold
16                  Fold Number                10
17                     CPU Jobs                -1
18                      Use GPU             False
19               Log Experiment             False
20              Experiment Name  reg-default-name
21                          USI              e441
2023-06-07 19:20:54,614:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:20:54,614:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:20:54,830:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:20:54,831:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:20:54,832:INFO:setup() successfully completed in 4.83s...............
2023-06-07 19:20:58,826:INFO:Initializing compare_models()
2023-06-07 19:20:58,827:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001EAFF201270>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000001EAFF201270>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2023-06-07 19:20:58,828:INFO:Checking exceptions
2023-06-07 19:20:58,868:INFO:Preparing display monitor
2023-06-07 19:20:58,914:INFO:Initializing Linear Regression
2023-06-07 19:20:58,915:INFO:Total runtime is 1.6669432322184246e-05 minutes
2023-06-07 19:20:58,921:INFO:SubProcess create_model() called ==================================
2023-06-07 19:20:58,922:INFO:Initializing create_model()
2023-06-07 19:20:58,922:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001EAFF201270>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EA81445A20>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 19:20:58,922:INFO:Checking exceptions
2023-06-07 19:20:58,922:INFO:Importing libraries
2023-06-07 19:20:58,922:INFO:Copying training dataset
2023-06-07 19:20:59,013:INFO:Defining folds
2023-06-07 19:20:59,014:INFO:Declaring metric variables
2023-06-07 19:20:59,019:INFO:Importing untrained model
2023-06-07 19:20:59,025:INFO:Linear Regression Imported successfully
2023-06-07 19:20:59,036:INFO:Starting cross validation
2023-06-07 19:20:59,048:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 19:21:14,376:INFO:Calculating mean and std
2023-06-07 19:21:14,378:INFO:Creating metrics dataframe
2023-06-07 19:21:14,768:INFO:Uploading results into container
2023-06-07 19:21:14,769:INFO:Uploading model into container now
2023-06-07 19:21:14,770:INFO:_master_model_container: 1
2023-06-07 19:21:14,770:INFO:_display_container: 2
2023-06-07 19:21:14,771:INFO:LinearRegression(n_jobs=-1)
2023-06-07 19:21:14,771:INFO:create_model() successfully completed......................................
2023-06-07 19:21:14,900:INFO:SubProcess create_model() end ==================================
2023-06-07 19:21:14,901:INFO:Creating metrics dataframe
2023-06-07 19:21:14,913:INFO:Initializing Lasso Regression
2023-06-07 19:21:14,913:INFO:Total runtime is 0.26664674679438277 minutes
2023-06-07 19:21:14,918:INFO:SubProcess create_model() called ==================================
2023-06-07 19:21:14,918:INFO:Initializing create_model()
2023-06-07 19:21:14,918:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001EAFF201270>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EA81445A20>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 19:21:14,919:INFO:Checking exceptions
2023-06-07 19:21:14,919:INFO:Importing libraries
2023-06-07 19:21:14,919:INFO:Copying training dataset
2023-06-07 19:21:14,988:INFO:Defining folds
2023-06-07 19:21:14,988:INFO:Declaring metric variables
2023-06-07 19:21:14,994:INFO:Importing untrained model
2023-06-07 19:21:15,001:INFO:Lasso Regression Imported successfully
2023-06-07 19:21:15,013:INFO:Starting cross validation
2023-06-07 19:21:15,016:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 19:21:20,302:INFO:Calculating mean and std
2023-06-07 19:21:20,304:INFO:Creating metrics dataframe
2023-06-07 19:21:20,729:INFO:Uploading results into container
2023-06-07 19:21:20,731:INFO:Uploading model into container now
2023-06-07 19:21:20,732:INFO:_master_model_container: 2
2023-06-07 19:21:20,732:INFO:_display_container: 2
2023-06-07 19:21:20,732:INFO:Lasso(random_state=123)
2023-06-07 19:21:20,732:INFO:create_model() successfully completed......................................
2023-06-07 19:21:20,900:INFO:SubProcess create_model() end ==================================
2023-06-07 19:21:20,900:INFO:Creating metrics dataframe
2023-06-07 19:21:20,916:INFO:Initializing Ridge Regression
2023-06-07 19:21:20,917:INFO:Total runtime is 0.36670715014139815 minutes
2023-06-07 19:21:20,922:INFO:SubProcess create_model() called ==================================
2023-06-07 19:21:20,922:INFO:Initializing create_model()
2023-06-07 19:21:20,922:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001EAFF201270>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EA81445A20>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 19:21:20,922:INFO:Checking exceptions
2023-06-07 19:21:20,923:INFO:Importing libraries
2023-06-07 19:21:20,923:INFO:Copying training dataset
2023-06-07 19:21:20,987:INFO:Defining folds
2023-06-07 19:21:20,987:INFO:Declaring metric variables
2023-06-07 19:21:20,994:INFO:Importing untrained model
2023-06-07 19:21:21,000:INFO:Ridge Regression Imported successfully
2023-06-07 19:21:21,012:INFO:Starting cross validation
2023-06-07 19:21:21,015:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 19:21:25,317:INFO:Calculating mean and std
2023-06-07 19:21:25,319:INFO:Creating metrics dataframe
2023-06-07 19:21:25,706:INFO:Uploading results into container
2023-06-07 19:21:25,707:INFO:Uploading model into container now
2023-06-07 19:21:25,708:INFO:_master_model_container: 3
2023-06-07 19:21:25,709:INFO:_display_container: 2
2023-06-07 19:21:25,709:INFO:Ridge(random_state=123)
2023-06-07 19:21:25,710:INFO:create_model() successfully completed......................................
2023-06-07 19:21:25,831:INFO:SubProcess create_model() end ==================================
2023-06-07 19:21:25,832:INFO:Creating metrics dataframe
2023-06-07 19:21:25,846:INFO:Initializing Elastic Net
2023-06-07 19:21:25,846:INFO:Total runtime is 0.44885434309641525 minutes
2023-06-07 19:21:25,851:INFO:SubProcess create_model() called ==================================
2023-06-07 19:21:25,852:INFO:Initializing create_model()
2023-06-07 19:21:25,852:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001EAFF201270>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EA81445A20>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 19:21:25,852:INFO:Checking exceptions
2023-06-07 19:21:25,853:INFO:Importing libraries
2023-06-07 19:21:25,853:INFO:Copying training dataset
2023-06-07 19:21:25,914:INFO:Defining folds
2023-06-07 19:21:25,914:INFO:Declaring metric variables
2023-06-07 19:21:25,920:INFO:Importing untrained model
2023-06-07 19:21:25,925:INFO:Elastic Net Imported successfully
2023-06-07 19:21:25,935:INFO:Starting cross validation
2023-06-07 19:21:25,937:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 19:21:30,226:INFO:Calculating mean and std
2023-06-07 19:21:30,228:INFO:Creating metrics dataframe
2023-06-07 19:21:30,629:INFO:Uploading results into container
2023-06-07 19:21:30,631:INFO:Uploading model into container now
2023-06-07 19:21:30,631:INFO:_master_model_container: 4
2023-06-07 19:21:30,631:INFO:_display_container: 2
2023-06-07 19:21:30,632:INFO:ElasticNet(random_state=123)
2023-06-07 19:21:30,632:INFO:create_model() successfully completed......................................
2023-06-07 19:21:30,762:INFO:SubProcess create_model() end ==================================
2023-06-07 19:21:30,763:INFO:Creating metrics dataframe
2023-06-07 19:21:30,778:INFO:Initializing Least Angle Regression
2023-06-07 19:21:30,778:INFO:Total runtime is 0.5310635447502137 minutes
2023-06-07 19:21:30,783:INFO:SubProcess create_model() called ==================================
2023-06-07 19:21:30,784:INFO:Initializing create_model()
2023-06-07 19:21:30,784:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001EAFF201270>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EA81445A20>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 19:21:30,784:INFO:Checking exceptions
2023-06-07 19:21:30,784:INFO:Importing libraries
2023-06-07 19:21:30,784:INFO:Copying training dataset
2023-06-07 19:21:30,846:INFO:Defining folds
2023-06-07 19:21:30,847:INFO:Declaring metric variables
2023-06-07 19:21:30,852:INFO:Importing untrained model
2023-06-07 19:21:30,857:INFO:Least Angle Regression Imported successfully
2023-06-07 19:21:30,867:INFO:Starting cross validation
2023-06-07 19:21:30,869:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 19:21:35,265:INFO:Calculating mean and std
2023-06-07 19:21:35,267:INFO:Creating metrics dataframe
2023-06-07 19:21:35,667:INFO:Uploading results into container
2023-06-07 19:21:35,668:INFO:Uploading model into container now
2023-06-07 19:21:35,669:INFO:_master_model_container: 5
2023-06-07 19:21:35,669:INFO:_display_container: 2
2023-06-07 19:21:35,670:INFO:Lars(random_state=123)
2023-06-07 19:21:35,670:INFO:create_model() successfully completed......................................
2023-06-07 19:21:35,792:INFO:SubProcess create_model() end ==================================
2023-06-07 19:21:35,792:INFO:Creating metrics dataframe
2023-06-07 19:21:35,808:INFO:Initializing Lasso Least Angle Regression
2023-06-07 19:21:35,808:INFO:Total runtime is 0.6149028102556865 minutes
2023-06-07 19:21:35,814:INFO:SubProcess create_model() called ==================================
2023-06-07 19:21:35,814:INFO:Initializing create_model()
2023-06-07 19:21:35,814:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001EAFF201270>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EA81445A20>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 19:21:35,815:INFO:Checking exceptions
2023-06-07 19:21:35,815:INFO:Importing libraries
2023-06-07 19:21:35,815:INFO:Copying training dataset
2023-06-07 19:21:35,872:INFO:Defining folds
2023-06-07 19:21:35,873:INFO:Declaring metric variables
2023-06-07 19:21:35,880:INFO:Importing untrained model
2023-06-07 19:21:35,903:INFO:Lasso Least Angle Regression Imported successfully
2023-06-07 19:21:35,913:INFO:Starting cross validation
2023-06-07 19:21:35,913:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 19:21:40,271:INFO:Calculating mean and std
2023-06-07 19:21:40,272:INFO:Creating metrics dataframe
2023-06-07 19:21:40,672:INFO:Uploading results into container
2023-06-07 19:21:40,673:INFO:Uploading model into container now
2023-06-07 19:21:40,673:INFO:_master_model_container: 6
2023-06-07 19:21:40,673:INFO:_display_container: 2
2023-06-07 19:21:40,675:INFO:LassoLars(random_state=123)
2023-06-07 19:21:40,675:INFO:create_model() successfully completed......................................
2023-06-07 19:21:40,799:INFO:SubProcess create_model() end ==================================
2023-06-07 19:21:40,799:INFO:Creating metrics dataframe
2023-06-07 19:21:40,816:INFO:Initializing Orthogonal Matching Pursuit
2023-06-07 19:21:40,817:INFO:Total runtime is 0.6983724872271221 minutes
2023-06-07 19:21:40,822:INFO:SubProcess create_model() called ==================================
2023-06-07 19:21:40,822:INFO:Initializing create_model()
2023-06-07 19:21:40,823:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001EAFF201270>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EA81445A20>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 19:21:40,823:INFO:Checking exceptions
2023-06-07 19:21:40,823:INFO:Importing libraries
2023-06-07 19:21:40,823:INFO:Copying training dataset
2023-06-07 19:21:40,881:INFO:Defining folds
2023-06-07 19:21:40,881:INFO:Declaring metric variables
2023-06-07 19:21:40,886:INFO:Importing untrained model
2023-06-07 19:21:40,892:INFO:Orthogonal Matching Pursuit Imported successfully
2023-06-07 19:21:40,901:INFO:Starting cross validation
2023-06-07 19:21:40,903:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 19:21:45,163:INFO:Calculating mean and std
2023-06-07 19:21:45,164:INFO:Creating metrics dataframe
2023-06-07 19:21:45,547:INFO:Uploading results into container
2023-06-07 19:21:45,548:INFO:Uploading model into container now
2023-06-07 19:21:45,549:INFO:_master_model_container: 7
2023-06-07 19:21:45,549:INFO:_display_container: 2
2023-06-07 19:21:45,549:INFO:OrthogonalMatchingPursuit()
2023-06-07 19:21:45,550:INFO:create_model() successfully completed......................................
2023-06-07 19:21:45,670:INFO:SubProcess create_model() end ==================================
2023-06-07 19:21:45,670:INFO:Creating metrics dataframe
2023-06-07 19:21:45,685:INFO:Initializing Bayesian Ridge
2023-06-07 19:21:45,686:INFO:Total runtime is 0.7795276165008546 minutes
2023-06-07 19:21:45,691:INFO:SubProcess create_model() called ==================================
2023-06-07 19:21:45,691:INFO:Initializing create_model()
2023-06-07 19:21:45,692:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001EAFF201270>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EA81445A20>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 19:21:45,692:INFO:Checking exceptions
2023-06-07 19:21:45,692:INFO:Importing libraries
2023-06-07 19:21:45,692:INFO:Copying training dataset
2023-06-07 19:21:45,750:INFO:Defining folds
2023-06-07 19:21:45,750:INFO:Declaring metric variables
2023-06-07 19:21:45,757:INFO:Importing untrained model
2023-06-07 19:21:45,763:INFO:Bayesian Ridge Imported successfully
2023-06-07 19:21:45,771:INFO:Starting cross validation
2023-06-07 19:21:45,773:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 19:21:49,832:INFO:Calculating mean and std
2023-06-07 19:21:49,834:INFO:Creating metrics dataframe
2023-06-07 19:21:50,218:INFO:Uploading results into container
2023-06-07 19:21:50,219:INFO:Uploading model into container now
2023-06-07 19:21:50,219:INFO:_master_model_container: 8
2023-06-07 19:21:50,219:INFO:_display_container: 2
2023-06-07 19:21:50,220:INFO:BayesianRidge()
2023-06-07 19:21:50,220:INFO:create_model() successfully completed......................................
2023-06-07 19:21:50,339:INFO:SubProcess create_model() end ==================================
2023-06-07 19:21:50,340:INFO:Creating metrics dataframe
2023-06-07 19:21:50,355:INFO:Initializing Passive Aggressive Regressor
2023-06-07 19:21:50,355:INFO:Total runtime is 0.8573532144228618 minutes
2023-06-07 19:21:50,362:INFO:SubProcess create_model() called ==================================
2023-06-07 19:21:50,362:INFO:Initializing create_model()
2023-06-07 19:21:50,363:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001EAFF201270>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EA81445A20>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 19:21:50,363:INFO:Checking exceptions
2023-06-07 19:21:50,363:INFO:Importing libraries
2023-06-07 19:21:50,363:INFO:Copying training dataset
2023-06-07 19:21:50,418:INFO:Defining folds
2023-06-07 19:21:50,419:INFO:Declaring metric variables
2023-06-07 19:21:50,424:INFO:Importing untrained model
2023-06-07 19:21:50,430:INFO:Passive Aggressive Regressor Imported successfully
2023-06-07 19:21:50,440:INFO:Starting cross validation
2023-06-07 19:21:50,443:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 19:21:54,501:INFO:Calculating mean and std
2023-06-07 19:21:54,502:INFO:Creating metrics dataframe
2023-06-07 19:21:54,892:INFO:Uploading results into container
2023-06-07 19:21:54,894:INFO:Uploading model into container now
2023-06-07 19:21:54,894:INFO:_master_model_container: 9
2023-06-07 19:21:54,894:INFO:_display_container: 2
2023-06-07 19:21:54,895:INFO:PassiveAggressiveRegressor(random_state=123)
2023-06-07 19:21:54,895:INFO:create_model() successfully completed......................................
2023-06-07 19:21:55,015:INFO:SubProcess create_model() end ==================================
2023-06-07 19:21:55,016:INFO:Creating metrics dataframe
2023-06-07 19:21:55,032:INFO:Initializing Huber Regressor
2023-06-07 19:21:55,032:INFO:Total runtime is 0.9352923909823101 minutes
2023-06-07 19:21:55,037:INFO:SubProcess create_model() called ==================================
2023-06-07 19:21:55,037:INFO:Initializing create_model()
2023-06-07 19:21:55,038:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001EAFF201270>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EA81445A20>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 19:21:55,038:INFO:Checking exceptions
2023-06-07 19:21:55,038:INFO:Importing libraries
2023-06-07 19:21:55,038:INFO:Copying training dataset
2023-06-07 19:21:55,095:INFO:Defining folds
2023-06-07 19:21:55,095:INFO:Declaring metric variables
2023-06-07 19:21:55,102:INFO:Importing untrained model
2023-06-07 19:21:55,107:INFO:Huber Regressor Imported successfully
2023-06-07 19:21:55,118:INFO:Starting cross validation
2023-06-07 19:21:55,120:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 19:21:59,168:INFO:Calculating mean and std
2023-06-07 19:21:59,170:INFO:Creating metrics dataframe
2023-06-07 19:21:59,555:INFO:Uploading results into container
2023-06-07 19:21:59,557:INFO:Uploading model into container now
2023-06-07 19:21:59,557:INFO:_master_model_container: 10
2023-06-07 19:21:59,558:INFO:_display_container: 2
2023-06-07 19:21:59,559:INFO:HuberRegressor()
2023-06-07 19:21:59,559:INFO:create_model() successfully completed......................................
2023-06-07 19:21:59,690:INFO:SubProcess create_model() end ==================================
2023-06-07 19:21:59,690:INFO:Creating metrics dataframe
2023-06-07 19:21:59,707:INFO:Initializing K Neighbors Regressor
2023-06-07 19:21:59,707:INFO:Total runtime is 1.0132093509038291 minutes
2023-06-07 19:21:59,713:INFO:SubProcess create_model() called ==================================
2023-06-07 19:21:59,713:INFO:Initializing create_model()
2023-06-07 19:21:59,713:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001EAFF201270>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EA81445A20>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 19:21:59,714:INFO:Checking exceptions
2023-06-07 19:21:59,714:INFO:Importing libraries
2023-06-07 19:21:59,714:INFO:Copying training dataset
2023-06-07 19:21:59,771:INFO:Defining folds
2023-06-07 19:21:59,772:INFO:Declaring metric variables
2023-06-07 19:21:59,779:INFO:Importing untrained model
2023-06-07 19:21:59,785:INFO:K Neighbors Regressor Imported successfully
2023-06-07 19:21:59,794:INFO:Starting cross validation
2023-06-07 19:21:59,796:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 19:22:08,876:INFO:Calculating mean and std
2023-06-07 19:22:08,878:INFO:Creating metrics dataframe
2023-06-07 19:22:09,259:INFO:Uploading results into container
2023-06-07 19:22:09,261:INFO:Uploading model into container now
2023-06-07 19:22:09,261:INFO:_master_model_container: 11
2023-06-07 19:22:09,261:INFO:_display_container: 2
2023-06-07 19:22:09,262:INFO:KNeighborsRegressor(n_jobs=-1)
2023-06-07 19:22:09,262:INFO:create_model() successfully completed......................................
2023-06-07 19:22:09,382:INFO:SubProcess create_model() end ==================================
2023-06-07 19:22:09,382:INFO:Creating metrics dataframe
2023-06-07 19:22:09,399:INFO:Initializing Decision Tree Regressor
2023-06-07 19:22:09,399:INFO:Total runtime is 1.174738136927287 minutes
2023-06-07 19:22:09,405:INFO:SubProcess create_model() called ==================================
2023-06-07 19:22:09,405:INFO:Initializing create_model()
2023-06-07 19:22:09,405:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001EAFF201270>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EA81445A20>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 19:22:09,405:INFO:Checking exceptions
2023-06-07 19:22:09,405:INFO:Importing libraries
2023-06-07 19:22:09,406:INFO:Copying training dataset
2023-06-07 19:22:09,462:INFO:Defining folds
2023-06-07 19:22:09,463:INFO:Declaring metric variables
2023-06-07 19:22:09,468:INFO:Importing untrained model
2023-06-07 19:22:09,479:INFO:Decision Tree Regressor Imported successfully
2023-06-07 19:22:09,507:INFO:Starting cross validation
2023-06-07 19:22:09,509:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 19:22:13,578:INFO:Calculating mean and std
2023-06-07 19:22:13,580:INFO:Creating metrics dataframe
2023-06-07 19:22:13,961:INFO:Uploading results into container
2023-06-07 19:22:13,962:INFO:Uploading model into container now
2023-06-07 19:22:13,962:INFO:_master_model_container: 12
2023-06-07 19:22:13,963:INFO:_display_container: 2
2023-06-07 19:22:13,963:INFO:DecisionTreeRegressor(random_state=123)
2023-06-07 19:22:13,963:INFO:create_model() successfully completed......................................
2023-06-07 19:22:14,084:INFO:SubProcess create_model() end ==================================
2023-06-07 19:22:14,084:INFO:Creating metrics dataframe
2023-06-07 19:22:14,102:INFO:Initializing Random Forest Regressor
2023-06-07 19:22:14,102:INFO:Total runtime is 1.2531273206075033 minutes
2023-06-07 19:22:14,107:INFO:SubProcess create_model() called ==================================
2023-06-07 19:22:14,108:INFO:Initializing create_model()
2023-06-07 19:22:14,108:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001EAFF201270>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EA81445A20>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 19:22:14,108:INFO:Checking exceptions
2023-06-07 19:22:14,108:INFO:Importing libraries
2023-06-07 19:22:14,109:INFO:Copying training dataset
2023-06-07 19:22:14,167:INFO:Defining folds
2023-06-07 19:22:14,168:INFO:Declaring metric variables
2023-06-07 19:22:14,172:INFO:Importing untrained model
2023-06-07 19:22:14,178:INFO:Random Forest Regressor Imported successfully
2023-06-07 19:22:14,187:INFO:Starting cross validation
2023-06-07 19:22:14,189:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 19:22:27,889:INFO:Calculating mean and std
2023-06-07 19:22:27,900:INFO:Creating metrics dataframe
2023-06-07 19:22:28,296:INFO:Uploading results into container
2023-06-07 19:22:28,298:INFO:Uploading model into container now
2023-06-07 19:22:28,299:INFO:_master_model_container: 13
2023-06-07 19:22:28,299:INFO:_display_container: 2
2023-06-07 19:22:28,300:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2023-06-07 19:22:28,300:INFO:create_model() successfully completed......................................
2023-06-07 19:22:28,502:INFO:SubProcess create_model() end ==================================
2023-06-07 19:22:28,502:INFO:Creating metrics dataframe
2023-06-07 19:22:28,524:INFO:Initializing Extra Trees Regressor
2023-06-07 19:22:28,524:INFO:Total runtime is 1.4934914231300356 minutes
2023-06-07 19:22:28,530:INFO:SubProcess create_model() called ==================================
2023-06-07 19:22:28,530:INFO:Initializing create_model()
2023-06-07 19:22:28,531:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001EAFF201270>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EA81445A20>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 19:22:28,531:INFO:Checking exceptions
2023-06-07 19:22:28,531:INFO:Importing libraries
2023-06-07 19:22:28,532:INFO:Copying training dataset
2023-06-07 19:22:28,593:INFO:Defining folds
2023-06-07 19:22:28,594:INFO:Declaring metric variables
2023-06-07 19:22:28,599:INFO:Importing untrained model
2023-06-07 19:22:28,604:INFO:Extra Trees Regressor Imported successfully
2023-06-07 19:22:28,613:INFO:Starting cross validation
2023-06-07 19:22:28,614:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 19:22:51,572:INFO:Calculating mean and std
2023-06-07 19:22:51,593:INFO:Creating metrics dataframe
2023-06-07 19:22:51,990:INFO:Uploading results into container
2023-06-07 19:22:51,994:INFO:Uploading model into container now
2023-06-07 19:22:51,996:INFO:_master_model_container: 14
2023-06-07 19:22:51,996:INFO:_display_container: 2
2023-06-07 19:22:51,999:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2023-06-07 19:22:51,999:INFO:create_model() successfully completed......................................
2023-06-07 19:22:52,305:INFO:SubProcess create_model() end ==================================
2023-06-07 19:22:52,305:INFO:Creating metrics dataframe
2023-06-07 19:22:52,330:INFO:Initializing AdaBoost Regressor
2023-06-07 19:22:52,330:INFO:Total runtime is 1.890267324447632 minutes
2023-06-07 19:22:52,337:INFO:SubProcess create_model() called ==================================
2023-06-07 19:22:52,338:INFO:Initializing create_model()
2023-06-07 19:22:52,338:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001EAFF201270>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EA81445A20>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 19:22:52,338:INFO:Checking exceptions
2023-06-07 19:22:52,338:INFO:Importing libraries
2023-06-07 19:22:52,340:INFO:Copying training dataset
2023-06-07 19:22:52,431:INFO:Defining folds
2023-06-07 19:22:52,431:INFO:Declaring metric variables
2023-06-07 19:22:52,436:INFO:Importing untrained model
2023-06-07 19:22:52,441:INFO:AdaBoost Regressor Imported successfully
2023-06-07 19:22:52,451:INFO:Starting cross validation
2023-06-07 19:22:52,454:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 19:22:56,976:INFO:Calculating mean and std
2023-06-07 19:22:56,977:INFO:Creating metrics dataframe
2023-06-07 19:22:57,360:INFO:Uploading results into container
2023-06-07 19:22:57,362:INFO:Uploading model into container now
2023-06-07 19:22:57,363:INFO:_master_model_container: 15
2023-06-07 19:22:57,363:INFO:_display_container: 2
2023-06-07 19:22:57,363:INFO:AdaBoostRegressor(random_state=123)
2023-06-07 19:22:57,363:INFO:create_model() successfully completed......................................
2023-06-07 19:22:57,484:INFO:SubProcess create_model() end ==================================
2023-06-07 19:22:57,484:INFO:Creating metrics dataframe
2023-06-07 19:22:57,503:INFO:Initializing Gradient Boosting Regressor
2023-06-07 19:22:57,503:INFO:Total runtime is 1.9764708916346234 minutes
2023-06-07 19:22:57,509:INFO:SubProcess create_model() called ==================================
2023-06-07 19:22:57,509:INFO:Initializing create_model()
2023-06-07 19:22:57,510:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001EAFF201270>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EA81445A20>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 19:22:57,510:INFO:Checking exceptions
2023-06-07 19:22:57,510:INFO:Importing libraries
2023-06-07 19:22:57,510:INFO:Copying training dataset
2023-06-07 19:22:57,570:INFO:Defining folds
2023-06-07 19:22:57,571:INFO:Declaring metric variables
2023-06-07 19:22:57,577:INFO:Importing untrained model
2023-06-07 19:22:57,582:INFO:Gradient Boosting Regressor Imported successfully
2023-06-07 19:22:57,590:INFO:Starting cross validation
2023-06-07 19:22:57,593:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 19:23:01,831:INFO:Calculating mean and std
2023-06-07 19:23:01,832:INFO:Creating metrics dataframe
2023-06-07 19:23:02,217:INFO:Uploading results into container
2023-06-07 19:23:02,218:INFO:Uploading model into container now
2023-06-07 19:23:02,218:INFO:_master_model_container: 16
2023-06-07 19:23:02,218:INFO:_display_container: 2
2023-06-07 19:23:02,219:INFO:GradientBoostingRegressor(random_state=123)
2023-06-07 19:23:02,220:INFO:create_model() successfully completed......................................
2023-06-07 19:23:02,339:INFO:SubProcess create_model() end ==================================
2023-06-07 19:23:02,339:INFO:Creating metrics dataframe
2023-06-07 19:23:02,358:INFO:Initializing Light Gradient Boosting Machine
2023-06-07 19:23:02,359:INFO:Total runtime is 2.057419772942861 minutes
2023-06-07 19:23:02,364:INFO:SubProcess create_model() called ==================================
2023-06-07 19:23:02,364:INFO:Initializing create_model()
2023-06-07 19:23:02,364:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001EAFF201270>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EA81445A20>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 19:23:02,364:INFO:Checking exceptions
2023-06-07 19:23:02,364:INFO:Importing libraries
2023-06-07 19:23:02,365:INFO:Copying training dataset
2023-06-07 19:23:02,423:INFO:Defining folds
2023-06-07 19:23:02,424:INFO:Declaring metric variables
2023-06-07 19:23:02,430:INFO:Importing untrained model
2023-06-07 19:23:02,436:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-07 19:23:02,446:INFO:Starting cross validation
2023-06-07 19:23:02,448:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 19:23:09,512:INFO:Calculating mean and std
2023-06-07 19:23:09,514:INFO:Creating metrics dataframe
2023-06-07 19:23:09,896:INFO:Uploading results into container
2023-06-07 19:23:09,897:INFO:Uploading model into container now
2023-06-07 19:23:09,897:INFO:_master_model_container: 17
2023-06-07 19:23:09,898:INFO:_display_container: 2
2023-06-07 19:23:09,898:INFO:LGBMRegressor(random_state=123)
2023-06-07 19:23:09,898:INFO:create_model() successfully completed......................................
2023-06-07 19:23:10,019:INFO:SubProcess create_model() end ==================================
2023-06-07 19:23:10,019:INFO:Creating metrics dataframe
2023-06-07 19:23:10,045:INFO:Initializing Dummy Regressor
2023-06-07 19:23:10,045:INFO:Total runtime is 2.185505565007528 minutes
2023-06-07 19:23:10,049:INFO:SubProcess create_model() called ==================================
2023-06-07 19:23:10,050:INFO:Initializing create_model()
2023-06-07 19:23:10,050:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001EAFF201270>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EA81445A20>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 19:23:10,050:INFO:Checking exceptions
2023-06-07 19:23:10,050:INFO:Importing libraries
2023-06-07 19:23:10,051:INFO:Copying training dataset
2023-06-07 19:23:10,108:INFO:Defining folds
2023-06-07 19:23:10,108:INFO:Declaring metric variables
2023-06-07 19:23:10,115:INFO:Importing untrained model
2023-06-07 19:23:10,120:INFO:Dummy Regressor Imported successfully
2023-06-07 19:23:10,129:INFO:Starting cross validation
2023-06-07 19:23:10,131:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 19:23:14,196:INFO:Calculating mean and std
2023-06-07 19:23:14,197:INFO:Creating metrics dataframe
2023-06-07 19:23:14,580:INFO:Uploading results into container
2023-06-07 19:23:14,582:INFO:Uploading model into container now
2023-06-07 19:23:14,582:INFO:_master_model_container: 18
2023-06-07 19:23:14,582:INFO:_display_container: 2
2023-06-07 19:23:14,583:INFO:DummyRegressor()
2023-06-07 19:23:14,583:INFO:create_model() successfully completed......................................
2023-06-07 19:23:14,704:INFO:SubProcess create_model() end ==================================
2023-06-07 19:23:14,704:INFO:Creating metrics dataframe
2023-06-07 19:23:14,737:INFO:Initializing create_model()
2023-06-07 19:23:14,737:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001EAFF201270>, estimator=RandomForestRegressor(n_jobs=-1, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-07 19:23:14,737:INFO:Checking exceptions
2023-06-07 19:23:14,742:INFO:Importing libraries
2023-06-07 19:23:14,742:INFO:Copying training dataset
2023-06-07 19:23:14,797:INFO:Defining folds
2023-06-07 19:23:14,797:INFO:Declaring metric variables
2023-06-07 19:23:14,798:INFO:Importing untrained model
2023-06-07 19:23:14,798:INFO:Declaring custom model
2023-06-07 19:23:14,799:INFO:Random Forest Regressor Imported successfully
2023-06-07 19:23:14,800:INFO:Cross validation set to False
2023-06-07 19:23:14,800:INFO:Fitting Model
2023-06-07 19:23:15,942:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2023-06-07 19:23:15,942:INFO:create_model() successfully completed......................................
2023-06-07 19:23:16,121:INFO:_master_model_container: 18
2023-06-07 19:23:16,121:INFO:_display_container: 2
2023-06-07 19:23:16,122:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2023-06-07 19:23:16,122:INFO:compare_models() successfully completed......................................
2023-06-07 19:23:17,681:INFO:Initializing plot_model()
2023-06-07 19:23:17,681:INFO:plot_model(plot=residuals, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=RandomForestRegressor(n_jobs=-1, random_state=123), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001EAFF201270>, system=True)
2023-06-07 19:23:17,682:INFO:Checking exceptions
2023-06-07 19:23:17,784:INFO:Preloading libraries
2023-06-07 19:23:18,050:INFO:Copying training dataset
2023-06-07 19:23:18,050:INFO:Plot type: residuals
2023-06-07 19:23:18,443:INFO:Fitting Model
2023-06-07 19:23:19,564:INFO:Scoring test/hold-out set
2023-06-07 19:23:21,751:INFO:Visual Rendered Successfully
2023-06-07 19:23:21,881:INFO:plot_model() successfully completed......................................
2023-06-07 19:23:22,016:INFO:Initializing predict_model()
2023-06-07 19:23:22,016:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001EAFF201270>, estimator=RandomForestRegressor(n_jobs=-1, random_state=123), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EAAC85C790>)
2023-06-07 19:23:22,016:INFO:Checking exceptions
2023-06-07 19:23:22,017:INFO:Preloading libraries
2023-06-07 19:23:22,586:INFO:Initializing evaluate_model()
2023-06-07 19:23:22,586:INFO:evaluate_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001EAFF201270>, estimator=RandomForestRegressor(n_jobs=-1, random_state=123), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-07 19:23:22,634:INFO:Initializing plot_model()
2023-06-07 19:23:22,635:INFO:plot_model(plot=pipeline, fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestRegressor(n_jobs=-1, random_state=123), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001EAFF201270>, system=True)
2023-06-07 19:23:22,635:INFO:Checking exceptions
2023-06-07 19:23:22,687:INFO:Preloading libraries
2023-06-07 19:23:22,972:INFO:Copying training dataset
2023-06-07 19:23:22,972:INFO:Plot type: pipeline
2023-06-07 19:23:23,181:INFO:Visual Rendered Successfully
2023-06-07 19:23:23,349:INFO:plot_model() successfully completed......................................
2023-06-07 19:23:23,826:INFO:Initializing predict_model()
2023-06-07 19:23:23,827:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001EAFF201270>, estimator=RandomForestRegressor(n_jobs=-1, random_state=123), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EAAC7CD990>)
2023-06-07 19:23:23,827:INFO:Checking exceptions
2023-06-07 19:23:23,827:INFO:Preloading libraries
2023-06-07 19:23:23,830:INFO:Set up data.
2023-06-07 19:23:23,921:INFO:Set up index.
2023-06-07 19:29:17,463:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-07 19:29:17,464:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-07 19:29:17,464:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-07 19:29:17,464:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-07 19:29:18,987:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-07 19:29:45,968:INFO:PyCaret RegressionExperiment
2023-06-07 19:29:45,968:INFO:Logging name: reg-default-name
2023-06-07 19:29:45,968:INFO:ML Usecase: MLUsecase.REGRESSION
2023-06-07 19:29:45,968:INFO:version 3.0.2
2023-06-07 19:29:45,968:INFO:Initializing setup()
2023-06-07 19:29:45,968:INFO:self.USI: 5455
2023-06-07 19:29:45,969:INFO:self._variable_keys: {'n_jobs_param', 'fold_shuffle_param', 'logging_param', 'pipeline', 'X_test', 'gpu_n_jobs_param', 'y_train', '_available_plots', 'exp_name_log', 'USI', 'log_plots_param', 'fold_generator', 'idx', 'data', 'y_test', 'fold_groups_param', 'gpu_param', 'y', 'target_param', 'seed', '_ml_usecase', 'X_train', 'exp_id', 'memory', 'html_param', 'X', 'transform_target_param'}
2023-06-07 19:29:45,969:INFO:Checking environment
2023-06-07 19:29:45,969:INFO:python_version: 3.10.9
2023-06-07 19:29:45,969:INFO:python_build: ('main', 'Mar  1 2023 18:18:15')
2023-06-07 19:29:45,969:INFO:machine: AMD64
2023-06-07 19:29:45,969:INFO:platform: Windows-10-10.0.19041-SP0
2023-06-07 19:29:45,969:INFO:Memory: svmem(total=6378106880, available=3041431552, percent=52.3, used=3336675328, free=3041431552)
2023-06-07 19:29:45,969:INFO:Physical Core: 4
2023-06-07 19:29:45,969:INFO:Logical Core: 8
2023-06-07 19:29:45,969:INFO:Checking libraries
2023-06-07 19:29:45,969:INFO:System:
2023-06-07 19:29:45,969:INFO:    python: 3.10.9 | packaged by Anaconda, Inc. | (main, Mar  1 2023, 18:18:15) [MSC v.1916 64 bit (AMD64)]
2023-06-07 19:29:45,970:INFO:executable: c:\Users\Crossddelta\anaconda3\python.exe
2023-06-07 19:29:45,970:INFO:   machine: Windows-10-10.0.19041-SP0
2023-06-07 19:29:45,970:INFO:PyCaret required dependencies:
2023-06-07 19:29:45,970:INFO:                 pip: 22.3.1
2023-06-07 19:29:45,970:INFO:          setuptools: 65.6.3
2023-06-07 19:29:45,970:INFO:             pycaret: 3.0.2
2023-06-07 19:29:45,970:INFO:             IPython: 8.10.0
2023-06-07 19:29:45,970:INFO:          ipywidgets: 7.6.5
2023-06-07 19:29:45,970:INFO:                tqdm: 4.64.1
2023-06-07 19:29:45,970:INFO:               numpy: 1.23.5
2023-06-07 19:29:45,970:INFO:              pandas: 1.5.3
2023-06-07 19:29:45,970:INFO:              jinja2: 3.1.2
2023-06-07 19:29:45,970:INFO:               scipy: 1.10.0
2023-06-07 19:29:45,970:INFO:              joblib: 1.2.0
2023-06-07 19:29:45,970:INFO:             sklearn: 1.2.1
2023-06-07 19:29:45,971:INFO:                pyod: 1.0.9
2023-06-07 19:29:45,971:INFO:            imblearn: 0.10.1
2023-06-07 19:29:45,971:INFO:   category_encoders: 2.6.1
2023-06-07 19:29:45,971:INFO:            lightgbm: 3.3.5
2023-06-07 19:29:45,971:INFO:               numba: 0.56.4
2023-06-07 19:29:45,971:INFO:            requests: 2.28.1
2023-06-07 19:29:45,971:INFO:          matplotlib: 3.7.0
2023-06-07 19:29:45,971:INFO:          scikitplot: 0.3.7
2023-06-07 19:29:45,971:INFO:         yellowbrick: 1.5
2023-06-07 19:29:45,971:INFO:              plotly: 5.9.0
2023-06-07 19:29:45,971:INFO:             kaleido: 0.2.1
2023-06-07 19:29:45,971:INFO:         statsmodels: 0.13.5
2023-06-07 19:29:45,971:INFO:              sktime: 0.17.0
2023-06-07 19:29:45,971:INFO:               tbats: 1.1.3
2023-06-07 19:29:45,971:INFO:            pmdarima: 2.0.3
2023-06-07 19:29:45,972:INFO:              psutil: 5.9.0
2023-06-07 19:29:45,972:INFO:PyCaret optional dependencies:
2023-06-07 19:29:45,992:INFO:                shap: Not installed
2023-06-07 19:29:45,992:INFO:           interpret: Not installed
2023-06-07 19:29:45,992:INFO:                umap: Not installed
2023-06-07 19:29:45,992:INFO:    pandas_profiling: Not installed
2023-06-07 19:29:45,992:INFO:  explainerdashboard: Not installed
2023-06-07 19:29:45,992:INFO:             autoviz: Not installed
2023-06-07 19:29:45,992:INFO:           fairlearn: Not installed
2023-06-07 19:29:45,994:INFO:             xgboost: Not installed
2023-06-07 19:29:45,994:INFO:            catboost: Not installed
2023-06-07 19:29:45,994:INFO:              kmodes: Not installed
2023-06-07 19:29:45,994:INFO:             mlxtend: Not installed
2023-06-07 19:29:45,994:INFO:       statsforecast: Not installed
2023-06-07 19:29:45,994:INFO:        tune_sklearn: Not installed
2023-06-07 19:29:45,994:INFO:                 ray: Not installed
2023-06-07 19:29:45,994:INFO:            hyperopt: Not installed
2023-06-07 19:29:45,994:INFO:              optuna: Not installed
2023-06-07 19:29:45,994:INFO:               skopt: Not installed
2023-06-07 19:29:45,994:INFO:              mlflow: Not installed
2023-06-07 19:29:45,994:INFO:              gradio: Not installed
2023-06-07 19:29:45,994:INFO:             fastapi: Not installed
2023-06-07 19:29:45,995:INFO:             uvicorn: Not installed
2023-06-07 19:29:45,995:INFO:              m2cgen: Not installed
2023-06-07 19:29:45,995:INFO:           evidently: Not installed
2023-06-07 19:29:45,995:INFO:               fugue: Not installed
2023-06-07 19:29:45,995:INFO:           streamlit: Not installed
2023-06-07 19:29:45,995:INFO:             prophet: Not installed
2023-06-07 19:29:45,995:INFO:None
2023-06-07 19:29:45,995:INFO:Set up data.
2023-06-07 19:29:46,090:INFO:Set up train/test split.
2023-06-07 19:29:46,152:INFO:Set up index.
2023-06-07 19:29:46,155:INFO:Set up folding strategy.
2023-06-07 19:29:46,156:INFO:Assigning column types.
2023-06-07 19:29:46,202:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-07 19:29:46,202:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-07 19:29:46,209:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-07 19:29:46,216:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-07 19:29:46,345:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 19:29:46,417:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-07 19:29:46,418:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:29:46,767:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:29:46,768:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-07 19:29:46,775:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-07 19:29:46,784:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-07 19:29:46,912:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 19:29:46,981:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-07 19:29:46,982:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:29:46,982:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:29:46,982:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-06-07 19:29:46,989:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-07 19:29:46,996:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-07 19:29:47,125:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 19:29:47,195:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-07 19:29:47,196:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:29:47,196:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:29:47,203:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-07 19:29:47,210:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-07 19:29:47,345:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 19:29:47,416:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-07 19:29:47,417:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:29:47,417:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:29:47,417:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-06-07 19:29:47,433:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-07 19:29:47,593:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 19:29:47,663:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-07 19:29:47,664:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:29:47,665:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:29:47,679:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-07 19:29:47,806:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 19:29:47,875:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-07 19:29:47,876:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:29:47,876:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:29:47,877:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-06-07 19:29:48,052:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 19:29:48,125:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-07 19:29:48,125:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:29:48,125:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:29:48,276:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 19:29:48,351:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-07 19:29:48,352:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:29:48,353:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:29:48,353:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-07 19:29:48,536:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 19:29:48,625:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:29:48,626:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:29:48,791:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 19:29:48,878:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:29:48,879:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:29:48,880:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-06-07 19:29:49,151:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:29:49,152:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:29:49,373:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:29:49,374:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:29:49,379:INFO:Preparing preprocessing pipeline...
2023-06-07 19:29:49,379:INFO:Set up simple imputation.
2023-06-07 19:29:49,405:INFO:Set up encoding of categorical features.
2023-06-07 19:29:49,740:INFO:Finished creating preprocessing pipeline.
2023-06-07 19:29:49,755:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\CROSSD~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['codigo_ibge', 'latitude',
                                             'longitude', 'T2M_RANGE', 'TS',
                                             'T2MDEW', 'T2MWET', 'T2M_MAX',
                                             'T2M_MIN', 'T2M', 'QV2M', 'RH2M',
                                             'PRECTOTCORR', 'WS2M', 'WS2M_MAX',
                                             'WS2M_MIN', 'WS2M_RANGE', 'WS10M',
                                             'WS10M_MAX', 'WS10M_MIN',
                                             'WS10M_RANGE'...
                                             'WS50M_RANGE', 'GWETTOP',
                                             'GWETROOT', 'GWETPROF',
                                             'ALLSKY_SFC_SW_DWN',
                                             'CLRSKY_SFC_SW_DWN', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['data'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rest_encoding',
                 TransformerWrapper(include=['data'],
                                    transformer=TargetEncoder(cols=['data'],
                                                              handle_missing='return_nan')))])
2023-06-07 19:29:49,755:INFO:Creating final display dataframe.
2023-06-07 19:29:50,055:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target                PS
2                   Target type        Regression
3           Original data shape       (80000, 38)
4        Transformed data shape       (80000, 38)
5   Transformed train set shape       (56000, 38)
6    Transformed test set shape       (24000, 38)
7              Numeric features                36
8          Categorical features                 1
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15               Fold Generator             KFold
16                  Fold Number                10
17                     CPU Jobs                -1
18                      Use GPU             False
19               Log Experiment             False
20              Experiment Name  reg-default-name
21                          USI              5455
2023-06-07 19:29:50,320:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:29:50,320:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:29:50,602:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:29:50,603:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:29:50,604:INFO:setup() successfully completed in 4.99s...............
2023-06-07 19:29:50,675:INFO:Initializing compare_models()
2023-06-07 19:29:50,675:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C6C6BE0310>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000001C6C6BE0310>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2023-06-07 19:29:50,675:INFO:Checking exceptions
2023-06-07 19:29:50,709:INFO:Preparing display monitor
2023-06-07 19:29:50,760:INFO:Initializing Linear Regression
2023-06-07 19:29:50,761:INFO:Total runtime is 1.6657511393229165e-05 minutes
2023-06-07 19:29:50,771:INFO:SubProcess create_model() called ==================================
2023-06-07 19:29:50,772:INFO:Initializing create_model()
2023-06-07 19:29:50,772:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C6C6BE0310>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C6889BBEB0>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 19:29:50,773:INFO:Checking exceptions
2023-06-07 19:29:50,773:INFO:Importing libraries
2023-06-07 19:29:50,773:INFO:Copying training dataset
2023-06-07 19:29:50,849:INFO:Defining folds
2023-06-07 19:29:50,850:INFO:Declaring metric variables
2023-06-07 19:29:50,854:INFO:Importing untrained model
2023-06-07 19:29:50,858:INFO:Linear Regression Imported successfully
2023-06-07 19:29:50,870:INFO:Starting cross validation
2023-06-07 19:29:50,881:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 19:30:05,097:INFO:Calculating mean and std
2023-06-07 19:30:05,098:INFO:Creating metrics dataframe
2023-06-07 19:30:05,485:INFO:Uploading results into container
2023-06-07 19:30:05,486:INFO:Uploading model into container now
2023-06-07 19:30:05,487:INFO:_master_model_container: 1
2023-06-07 19:30:05,487:INFO:_display_container: 2
2023-06-07 19:30:05,487:INFO:LinearRegression(n_jobs=-1)
2023-06-07 19:30:05,487:INFO:create_model() successfully completed......................................
2023-06-07 19:30:05,615:INFO:SubProcess create_model() end ==================================
2023-06-07 19:30:05,615:INFO:Creating metrics dataframe
2023-06-07 19:30:05,630:INFO:Initializing Lasso Regression
2023-06-07 19:30:05,630:INFO:Total runtime is 0.24782454570134482 minutes
2023-06-07 19:30:05,635:INFO:SubProcess create_model() called ==================================
2023-06-07 19:30:05,636:INFO:Initializing create_model()
2023-06-07 19:30:05,636:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C6C6BE0310>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C6889BBEB0>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 19:30:05,636:INFO:Checking exceptions
2023-06-07 19:30:05,636:INFO:Importing libraries
2023-06-07 19:30:05,636:INFO:Copying training dataset
2023-06-07 19:30:05,696:INFO:Defining folds
2023-06-07 19:30:05,697:INFO:Declaring metric variables
2023-06-07 19:30:05,702:INFO:Importing untrained model
2023-06-07 19:30:05,708:INFO:Lasso Regression Imported successfully
2023-06-07 19:30:05,719:INFO:Starting cross validation
2023-06-07 19:30:05,722:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 19:30:09,814:INFO:Calculating mean and std
2023-06-07 19:30:09,815:INFO:Creating metrics dataframe
2023-06-07 19:30:10,198:INFO:Uploading results into container
2023-06-07 19:30:10,199:INFO:Uploading model into container now
2023-06-07 19:30:10,199:INFO:_master_model_container: 2
2023-06-07 19:30:10,199:INFO:_display_container: 2
2023-06-07 19:30:10,200:INFO:Lasso(random_state=123)
2023-06-07 19:30:10,200:INFO:create_model() successfully completed......................................
2023-06-07 19:30:10,321:INFO:SubProcess create_model() end ==================================
2023-06-07 19:30:10,322:INFO:Creating metrics dataframe
2023-06-07 19:30:10,336:INFO:Initializing Ridge Regression
2023-06-07 19:30:10,336:INFO:Total runtime is 0.32627003192901616 minutes
2023-06-07 19:30:10,341:INFO:SubProcess create_model() called ==================================
2023-06-07 19:30:10,341:INFO:Initializing create_model()
2023-06-07 19:30:10,341:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C6C6BE0310>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C6889BBEB0>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 19:30:10,342:INFO:Checking exceptions
2023-06-07 19:30:10,342:INFO:Importing libraries
2023-06-07 19:30:10,342:INFO:Copying training dataset
2023-06-07 19:30:10,397:INFO:Defining folds
2023-06-07 19:30:10,397:INFO:Declaring metric variables
2023-06-07 19:30:10,402:INFO:Importing untrained model
2023-06-07 19:30:10,407:INFO:Ridge Regression Imported successfully
2023-06-07 19:30:10,418:INFO:Starting cross validation
2023-06-07 19:30:10,420:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 19:30:14,433:INFO:Calculating mean and std
2023-06-07 19:30:14,434:INFO:Creating metrics dataframe
2023-06-07 19:30:14,819:INFO:Uploading results into container
2023-06-07 19:30:14,820:INFO:Uploading model into container now
2023-06-07 19:30:14,820:INFO:_master_model_container: 3
2023-06-07 19:30:14,821:INFO:_display_container: 2
2023-06-07 19:30:14,821:INFO:Ridge(random_state=123)
2023-06-07 19:30:14,821:INFO:create_model() successfully completed......................................
2023-06-07 19:30:14,942:INFO:SubProcess create_model() end ==================================
2023-06-07 19:30:14,942:INFO:Creating metrics dataframe
2023-06-07 19:30:14,955:INFO:Initializing Elastic Net
2023-06-07 19:30:14,956:INFO:Total runtime is 0.40326532920201624 minutes
2023-06-07 19:30:14,962:INFO:SubProcess create_model() called ==================================
2023-06-07 19:30:14,962:INFO:Initializing create_model()
2023-06-07 19:30:14,962:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C6C6BE0310>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C6889BBEB0>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 19:30:14,963:INFO:Checking exceptions
2023-06-07 19:30:14,963:INFO:Importing libraries
2023-06-07 19:30:14,963:INFO:Copying training dataset
2023-06-07 19:30:15,019:INFO:Defining folds
2023-06-07 19:30:15,019:INFO:Declaring metric variables
2023-06-07 19:30:15,024:INFO:Importing untrained model
2023-06-07 19:30:15,029:INFO:Elastic Net Imported successfully
2023-06-07 19:30:15,038:INFO:Starting cross validation
2023-06-07 19:30:15,040:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 19:30:19,063:INFO:Calculating mean and std
2023-06-07 19:30:19,064:INFO:Creating metrics dataframe
2023-06-07 19:30:19,452:INFO:Uploading results into container
2023-06-07 19:30:19,453:INFO:Uploading model into container now
2023-06-07 19:30:19,453:INFO:_master_model_container: 4
2023-06-07 19:30:19,454:INFO:_display_container: 2
2023-06-07 19:30:19,454:INFO:ElasticNet(random_state=123)
2023-06-07 19:30:19,454:INFO:create_model() successfully completed......................................
2023-06-07 19:30:19,577:INFO:SubProcess create_model() end ==================================
2023-06-07 19:30:19,577:INFO:Creating metrics dataframe
2023-06-07 19:30:19,593:INFO:Initializing Least Angle Regression
2023-06-07 19:30:19,593:INFO:Total runtime is 0.48054002523422246 minutes
2023-06-07 19:30:19,599:INFO:SubProcess create_model() called ==================================
2023-06-07 19:30:19,600:INFO:Initializing create_model()
2023-06-07 19:30:19,600:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C6C6BE0310>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C6889BBEB0>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 19:30:19,600:INFO:Checking exceptions
2023-06-07 19:30:19,600:INFO:Importing libraries
2023-06-07 19:30:19,601:INFO:Copying training dataset
2023-06-07 19:30:19,657:INFO:Defining folds
2023-06-07 19:30:19,657:INFO:Declaring metric variables
2023-06-07 19:30:19,663:INFO:Importing untrained model
2023-06-07 19:30:19,670:INFO:Least Angle Regression Imported successfully
2023-06-07 19:30:19,679:INFO:Starting cross validation
2023-06-07 19:30:19,681:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 19:30:23,805:INFO:Calculating mean and std
2023-06-07 19:30:23,806:INFO:Creating metrics dataframe
2023-06-07 19:30:24,192:INFO:Uploading results into container
2023-06-07 19:30:24,193:INFO:Uploading model into container now
2023-06-07 19:30:24,193:INFO:_master_model_container: 5
2023-06-07 19:30:24,194:INFO:_display_container: 2
2023-06-07 19:30:24,194:INFO:Lars(random_state=123)
2023-06-07 19:30:24,194:INFO:create_model() successfully completed......................................
2023-06-07 19:30:24,314:INFO:SubProcess create_model() end ==================================
2023-06-07 19:30:24,315:INFO:Creating metrics dataframe
2023-06-07 19:30:24,329:INFO:Initializing Lasso Least Angle Regression
2023-06-07 19:30:24,329:INFO:Total runtime is 0.5594845215479534 minutes
2023-06-07 19:30:24,334:INFO:SubProcess create_model() called ==================================
2023-06-07 19:30:24,334:INFO:Initializing create_model()
2023-06-07 19:30:24,334:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C6C6BE0310>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C6889BBEB0>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 19:30:24,334:INFO:Checking exceptions
2023-06-07 19:30:24,335:INFO:Importing libraries
2023-06-07 19:30:24,335:INFO:Copying training dataset
2023-06-07 19:30:24,390:INFO:Defining folds
2023-06-07 19:30:24,390:INFO:Declaring metric variables
2023-06-07 19:30:24,395:INFO:Importing untrained model
2023-06-07 19:30:24,401:INFO:Lasso Least Angle Regression Imported successfully
2023-06-07 19:30:24,410:INFO:Starting cross validation
2023-06-07 19:30:24,412:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 19:30:28,535:INFO:Calculating mean and std
2023-06-07 19:30:28,536:INFO:Creating metrics dataframe
2023-06-07 19:30:28,924:INFO:Uploading results into container
2023-06-07 19:30:28,925:INFO:Uploading model into container now
2023-06-07 19:30:28,926:INFO:_master_model_container: 6
2023-06-07 19:30:28,926:INFO:_display_container: 2
2023-06-07 19:30:28,927:INFO:LassoLars(random_state=123)
2023-06-07 19:30:28,927:INFO:create_model() successfully completed......................................
2023-06-07 19:30:29,047:INFO:SubProcess create_model() end ==================================
2023-06-07 19:30:29,048:INFO:Creating metrics dataframe
2023-06-07 19:30:29,065:INFO:Initializing Orthogonal Matching Pursuit
2023-06-07 19:30:29,066:INFO:Total runtime is 0.6384237408638002 minutes
2023-06-07 19:30:29,070:INFO:SubProcess create_model() called ==================================
2023-06-07 19:30:29,071:INFO:Initializing create_model()
2023-06-07 19:30:29,071:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C6C6BE0310>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C6889BBEB0>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 19:30:29,071:INFO:Checking exceptions
2023-06-07 19:30:29,071:INFO:Importing libraries
2023-06-07 19:30:29,071:INFO:Copying training dataset
2023-06-07 19:30:29,129:INFO:Defining folds
2023-06-07 19:30:29,130:INFO:Declaring metric variables
2023-06-07 19:30:29,135:INFO:Importing untrained model
2023-06-07 19:30:29,140:INFO:Orthogonal Matching Pursuit Imported successfully
2023-06-07 19:30:29,151:INFO:Starting cross validation
2023-06-07 19:30:29,153:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 19:30:33,270:INFO:Calculating mean and std
2023-06-07 19:30:33,271:INFO:Creating metrics dataframe
2023-06-07 19:30:33,657:INFO:Uploading results into container
2023-06-07 19:30:33,658:INFO:Uploading model into container now
2023-06-07 19:30:33,659:INFO:_master_model_container: 7
2023-06-07 19:30:33,659:INFO:_display_container: 2
2023-06-07 19:30:33,659:INFO:OrthogonalMatchingPursuit()
2023-06-07 19:30:33,660:INFO:create_model() successfully completed......................................
2023-06-07 19:30:33,782:INFO:SubProcess create_model() end ==================================
2023-06-07 19:30:33,782:INFO:Creating metrics dataframe
2023-06-07 19:30:33,797:INFO:Initializing Bayesian Ridge
2023-06-07 19:30:33,797:INFO:Total runtime is 0.7172851204872133 minutes
2023-06-07 19:30:33,801:INFO:SubProcess create_model() called ==================================
2023-06-07 19:30:33,802:INFO:Initializing create_model()
2023-06-07 19:30:33,802:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C6C6BE0310>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C6889BBEB0>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 19:30:33,802:INFO:Checking exceptions
2023-06-07 19:30:33,802:INFO:Importing libraries
2023-06-07 19:30:33,803:INFO:Copying training dataset
2023-06-07 19:30:33,858:INFO:Defining folds
2023-06-07 19:30:33,859:INFO:Declaring metric variables
2023-06-07 19:30:33,864:INFO:Importing untrained model
2023-06-07 19:30:33,869:INFO:Bayesian Ridge Imported successfully
2023-06-07 19:30:33,879:INFO:Starting cross validation
2023-06-07 19:30:33,881:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 19:30:37,919:INFO:Calculating mean and std
2023-06-07 19:30:37,920:INFO:Creating metrics dataframe
2023-06-07 19:30:38,311:INFO:Uploading results into container
2023-06-07 19:30:38,313:INFO:Uploading model into container now
2023-06-07 19:30:38,313:INFO:_master_model_container: 8
2023-06-07 19:30:38,314:INFO:_display_container: 2
2023-06-07 19:30:38,314:INFO:BayesianRidge()
2023-06-07 19:30:38,315:INFO:create_model() successfully completed......................................
2023-06-07 19:30:38,436:INFO:SubProcess create_model() end ==================================
2023-06-07 19:30:38,436:INFO:Creating metrics dataframe
2023-06-07 19:30:38,452:INFO:Initializing Passive Aggressive Regressor
2023-06-07 19:30:38,452:INFO:Total runtime is 0.7948597908020021 minutes
2023-06-07 19:30:38,457:INFO:SubProcess create_model() called ==================================
2023-06-07 19:30:38,457:INFO:Initializing create_model()
2023-06-07 19:30:38,457:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C6C6BE0310>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C6889BBEB0>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 19:30:38,457:INFO:Checking exceptions
2023-06-07 19:30:38,457:INFO:Importing libraries
2023-06-07 19:30:38,458:INFO:Copying training dataset
2023-06-07 19:30:38,513:INFO:Defining folds
2023-06-07 19:30:38,513:INFO:Declaring metric variables
2023-06-07 19:30:38,518:INFO:Importing untrained model
2023-06-07 19:30:38,523:INFO:Passive Aggressive Regressor Imported successfully
2023-06-07 19:30:38,532:INFO:Starting cross validation
2023-06-07 19:30:38,534:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 19:30:42,567:INFO:Calculating mean and std
2023-06-07 19:30:42,569:INFO:Creating metrics dataframe
2023-06-07 19:30:42,953:INFO:Uploading results into container
2023-06-07 19:30:42,954:INFO:Uploading model into container now
2023-06-07 19:30:42,955:INFO:_master_model_container: 9
2023-06-07 19:30:42,955:INFO:_display_container: 2
2023-06-07 19:30:42,956:INFO:PassiveAggressiveRegressor(random_state=123)
2023-06-07 19:30:42,956:INFO:create_model() successfully completed......................................
2023-06-07 19:30:43,079:INFO:SubProcess create_model() end ==================================
2023-06-07 19:30:43,079:INFO:Creating metrics dataframe
2023-06-07 19:30:43,097:INFO:Initializing Huber Regressor
2023-06-07 19:30:43,097:INFO:Total runtime is 0.8722840587298076 minutes
2023-06-07 19:30:43,103:INFO:SubProcess create_model() called ==================================
2023-06-07 19:30:43,103:INFO:Initializing create_model()
2023-06-07 19:30:43,103:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C6C6BE0310>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C6889BBEB0>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 19:30:43,104:INFO:Checking exceptions
2023-06-07 19:30:43,104:INFO:Importing libraries
2023-06-07 19:30:43,104:INFO:Copying training dataset
2023-06-07 19:30:43,161:INFO:Defining folds
2023-06-07 19:30:43,161:INFO:Declaring metric variables
2023-06-07 19:30:43,167:INFO:Importing untrained model
2023-06-07 19:30:43,172:INFO:Huber Regressor Imported successfully
2023-06-07 19:30:43,182:INFO:Starting cross validation
2023-06-07 19:30:43,184:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 19:30:47,235:INFO:Calculating mean and std
2023-06-07 19:30:47,236:INFO:Creating metrics dataframe
2023-06-07 19:30:47,622:INFO:Uploading results into container
2023-06-07 19:30:47,623:INFO:Uploading model into container now
2023-06-07 19:30:47,624:INFO:_master_model_container: 10
2023-06-07 19:30:47,624:INFO:_display_container: 2
2023-06-07 19:30:47,624:INFO:HuberRegressor()
2023-06-07 19:30:47,624:INFO:create_model() successfully completed......................................
2023-06-07 19:30:47,747:INFO:SubProcess create_model() end ==================================
2023-06-07 19:30:47,748:INFO:Creating metrics dataframe
2023-06-07 19:30:47,765:INFO:Initializing K Neighbors Regressor
2023-06-07 19:30:47,765:INFO:Total runtime is 0.9500837047894797 minutes
2023-06-07 19:30:47,770:INFO:SubProcess create_model() called ==================================
2023-06-07 19:30:47,770:INFO:Initializing create_model()
2023-06-07 19:30:47,770:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C6C6BE0310>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C6889BBEB0>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 19:30:47,770:INFO:Checking exceptions
2023-06-07 19:30:47,771:INFO:Importing libraries
2023-06-07 19:30:47,771:INFO:Copying training dataset
2023-06-07 19:30:47,826:INFO:Defining folds
2023-06-07 19:30:47,826:INFO:Declaring metric variables
2023-06-07 19:30:47,832:INFO:Importing untrained model
2023-06-07 19:30:47,836:INFO:K Neighbors Regressor Imported successfully
2023-06-07 19:30:47,847:INFO:Starting cross validation
2023-06-07 19:30:47,849:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 19:30:56,764:INFO:Calculating mean and std
2023-06-07 19:30:56,765:INFO:Creating metrics dataframe
2023-06-07 19:30:57,150:INFO:Uploading results into container
2023-06-07 19:30:57,151:INFO:Uploading model into container now
2023-06-07 19:30:57,152:INFO:_master_model_container: 11
2023-06-07 19:30:57,152:INFO:_display_container: 2
2023-06-07 19:30:57,152:INFO:KNeighborsRegressor(n_jobs=-1)
2023-06-07 19:30:57,153:INFO:create_model() successfully completed......................................
2023-06-07 19:30:57,273:INFO:SubProcess create_model() end ==================================
2023-06-07 19:30:57,274:INFO:Creating metrics dataframe
2023-06-07 19:30:57,291:INFO:Initializing Decision Tree Regressor
2023-06-07 19:30:57,291:INFO:Total runtime is 1.1088496764500937 minutes
2023-06-07 19:30:57,296:INFO:SubProcess create_model() called ==================================
2023-06-07 19:30:57,297:INFO:Initializing create_model()
2023-06-07 19:30:57,297:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C6C6BE0310>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C6889BBEB0>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 19:30:57,297:INFO:Checking exceptions
2023-06-07 19:30:57,297:INFO:Importing libraries
2023-06-07 19:30:57,297:INFO:Copying training dataset
2023-06-07 19:30:57,356:INFO:Defining folds
2023-06-07 19:30:57,356:INFO:Declaring metric variables
2023-06-07 19:30:57,362:INFO:Importing untrained model
2023-06-07 19:30:57,367:INFO:Decision Tree Regressor Imported successfully
2023-06-07 19:30:57,376:INFO:Starting cross validation
2023-06-07 19:30:57,380:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 19:31:01,548:INFO:Calculating mean and std
2023-06-07 19:31:01,549:INFO:Creating metrics dataframe
2023-06-07 19:31:01,935:INFO:Uploading results into container
2023-06-07 19:31:01,936:INFO:Uploading model into container now
2023-06-07 19:31:01,937:INFO:_master_model_container: 12
2023-06-07 19:31:01,937:INFO:_display_container: 2
2023-06-07 19:31:01,937:INFO:DecisionTreeRegressor(random_state=123)
2023-06-07 19:31:01,937:INFO:create_model() successfully completed......................................
2023-06-07 19:31:02,058:INFO:SubProcess create_model() end ==================================
2023-06-07 19:31:02,059:INFO:Creating metrics dataframe
2023-06-07 19:31:02,076:INFO:Initializing Random Forest Regressor
2023-06-07 19:31:02,076:INFO:Total runtime is 1.1886056383450827 minutes
2023-06-07 19:31:02,082:INFO:SubProcess create_model() called ==================================
2023-06-07 19:31:02,082:INFO:Initializing create_model()
2023-06-07 19:31:02,082:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C6C6BE0310>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C6889BBEB0>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 19:31:02,082:INFO:Checking exceptions
2023-06-07 19:31:02,083:INFO:Importing libraries
2023-06-07 19:31:02,083:INFO:Copying training dataset
2023-06-07 19:31:02,138:INFO:Defining folds
2023-06-07 19:31:02,138:INFO:Declaring metric variables
2023-06-07 19:31:02,144:INFO:Importing untrained model
2023-06-07 19:31:02,150:INFO:Random Forest Regressor Imported successfully
2023-06-07 19:31:02,159:INFO:Starting cross validation
2023-06-07 19:31:02,161:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 19:31:15,825:INFO:Calculating mean and std
2023-06-07 19:31:15,835:INFO:Creating metrics dataframe
2023-06-07 19:31:16,254:INFO:Uploading results into container
2023-06-07 19:31:16,256:INFO:Uploading model into container now
2023-06-07 19:31:16,258:INFO:_master_model_container: 13
2023-06-07 19:31:16,258:INFO:_display_container: 2
2023-06-07 19:31:16,259:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2023-06-07 19:31:16,259:INFO:create_model() successfully completed......................................
2023-06-07 19:31:16,460:INFO:SubProcess create_model() end ==================================
2023-06-07 19:31:16,460:INFO:Creating metrics dataframe
2023-06-07 19:31:16,484:INFO:Initializing Extra Trees Regressor
2023-06-07 19:31:16,484:INFO:Total runtime is 1.4287275473276775 minutes
2023-06-07 19:31:16,490:INFO:SubProcess create_model() called ==================================
2023-06-07 19:31:16,491:INFO:Initializing create_model()
2023-06-07 19:31:16,491:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C6C6BE0310>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C6889BBEB0>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 19:31:16,491:INFO:Checking exceptions
2023-06-07 19:31:16,491:INFO:Importing libraries
2023-06-07 19:31:16,492:INFO:Copying training dataset
2023-06-07 19:31:16,555:INFO:Defining folds
2023-06-07 19:31:16,555:INFO:Declaring metric variables
2023-06-07 19:31:16,561:INFO:Importing untrained model
2023-06-07 19:31:16,567:INFO:Extra Trees Regressor Imported successfully
2023-06-07 19:31:16,575:INFO:Starting cross validation
2023-06-07 19:31:16,578:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 19:31:42,751:INFO:Calculating mean and std
2023-06-07 19:31:42,771:INFO:Creating metrics dataframe
2023-06-07 19:31:43,195:INFO:Uploading results into container
2023-06-07 19:31:43,198:INFO:Uploading model into container now
2023-06-07 19:31:43,200:INFO:_master_model_container: 14
2023-06-07 19:31:43,200:INFO:_display_container: 2
2023-06-07 19:31:43,203:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2023-06-07 19:31:43,203:INFO:create_model() successfully completed......................................
2023-06-07 19:31:43,536:INFO:SubProcess create_model() end ==================================
2023-06-07 19:31:43,536:INFO:Creating metrics dataframe
2023-06-07 19:31:43,563:INFO:Initializing AdaBoost Regressor
2023-06-07 19:31:43,563:INFO:Total runtime is 1.8800437927246094 minutes
2023-06-07 19:31:43,568:INFO:SubProcess create_model() called ==================================
2023-06-07 19:31:43,569:INFO:Initializing create_model()
2023-06-07 19:31:43,569:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C6C6BE0310>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C6889BBEB0>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 19:31:43,569:INFO:Checking exceptions
2023-06-07 19:31:43,569:INFO:Importing libraries
2023-06-07 19:31:43,570:INFO:Copying training dataset
2023-06-07 19:31:43,638:INFO:Defining folds
2023-06-07 19:31:43,638:INFO:Declaring metric variables
2023-06-07 19:31:43,644:INFO:Importing untrained model
2023-06-07 19:31:43,650:INFO:AdaBoost Regressor Imported successfully
2023-06-07 19:31:43,661:INFO:Starting cross validation
2023-06-07 19:31:43,664:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 19:31:48,723:INFO:Calculating mean and std
2023-06-07 19:31:48,725:INFO:Creating metrics dataframe
2023-06-07 19:31:49,134:INFO:Uploading results into container
2023-06-07 19:31:49,135:INFO:Uploading model into container now
2023-06-07 19:31:49,135:INFO:_master_model_container: 15
2023-06-07 19:31:49,135:INFO:_display_container: 2
2023-06-07 19:31:49,149:INFO:AdaBoostRegressor(random_state=123)
2023-06-07 19:31:49,149:INFO:create_model() successfully completed......................................
2023-06-07 19:31:49,275:INFO:SubProcess create_model() end ==================================
2023-06-07 19:31:49,275:INFO:Creating metrics dataframe
2023-06-07 19:31:49,297:INFO:Initializing Gradient Boosting Regressor
2023-06-07 19:31:49,297:INFO:Total runtime is 1.9756151119867962 minutes
2023-06-07 19:31:49,303:INFO:SubProcess create_model() called ==================================
2023-06-07 19:31:49,303:INFO:Initializing create_model()
2023-06-07 19:31:49,303:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C6C6BE0310>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C6889BBEB0>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 19:31:49,303:INFO:Checking exceptions
2023-06-07 19:31:49,304:INFO:Importing libraries
2023-06-07 19:31:49,304:INFO:Copying training dataset
2023-06-07 19:31:49,370:INFO:Defining folds
2023-06-07 19:31:49,371:INFO:Declaring metric variables
2023-06-07 19:31:49,376:INFO:Importing untrained model
2023-06-07 19:31:49,383:INFO:Gradient Boosting Regressor Imported successfully
2023-06-07 19:31:49,392:INFO:Starting cross validation
2023-06-07 19:31:49,394:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 19:31:53,871:INFO:Calculating mean and std
2023-06-07 19:31:53,872:INFO:Creating metrics dataframe
2023-06-07 19:31:54,258:INFO:Uploading results into container
2023-06-07 19:31:54,259:INFO:Uploading model into container now
2023-06-07 19:31:54,259:INFO:_master_model_container: 16
2023-06-07 19:31:54,259:INFO:_display_container: 2
2023-06-07 19:31:54,260:INFO:GradientBoostingRegressor(random_state=123)
2023-06-07 19:31:54,260:INFO:create_model() successfully completed......................................
2023-06-07 19:31:54,381:INFO:SubProcess create_model() end ==================================
2023-06-07 19:31:54,382:INFO:Creating metrics dataframe
2023-06-07 19:31:54,402:INFO:Initializing Light Gradient Boosting Machine
2023-06-07 19:31:54,402:INFO:Total runtime is 2.0606974442799886 minutes
2023-06-07 19:31:54,407:INFO:SubProcess create_model() called ==================================
2023-06-07 19:31:54,408:INFO:Initializing create_model()
2023-06-07 19:31:54,408:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C6C6BE0310>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C6889BBEB0>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 19:31:54,408:INFO:Checking exceptions
2023-06-07 19:31:54,408:INFO:Importing libraries
2023-06-07 19:31:54,408:INFO:Copying training dataset
2023-06-07 19:31:54,465:INFO:Defining folds
2023-06-07 19:31:54,465:INFO:Declaring metric variables
2023-06-07 19:31:54,471:INFO:Importing untrained model
2023-06-07 19:31:54,478:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-07 19:31:54,488:INFO:Starting cross validation
2023-06-07 19:31:54,490:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 19:32:01,554:INFO:Calculating mean and std
2023-06-07 19:32:01,555:INFO:Creating metrics dataframe
2023-06-07 19:32:01,941:INFO:Uploading results into container
2023-06-07 19:32:01,942:INFO:Uploading model into container now
2023-06-07 19:32:01,942:INFO:_master_model_container: 17
2023-06-07 19:32:01,942:INFO:_display_container: 2
2023-06-07 19:32:01,943:INFO:LGBMRegressor(random_state=123)
2023-06-07 19:32:01,943:INFO:create_model() successfully completed......................................
2023-06-07 19:32:02,066:INFO:SubProcess create_model() end ==================================
2023-06-07 19:32:02,066:INFO:Creating metrics dataframe
2023-06-07 19:32:02,086:INFO:Initializing Dummy Regressor
2023-06-07 19:32:02,087:INFO:Total runtime is 2.188781217734019 minutes
2023-06-07 19:32:02,092:INFO:SubProcess create_model() called ==================================
2023-06-07 19:32:02,092:INFO:Initializing create_model()
2023-06-07 19:32:02,092:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C6C6BE0310>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C6889BBEB0>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 19:32:02,093:INFO:Checking exceptions
2023-06-07 19:32:02,093:INFO:Importing libraries
2023-06-07 19:32:02,093:INFO:Copying training dataset
2023-06-07 19:32:02,150:INFO:Defining folds
2023-06-07 19:32:02,150:INFO:Declaring metric variables
2023-06-07 19:32:02,156:INFO:Importing untrained model
2023-06-07 19:32:02,162:INFO:Dummy Regressor Imported successfully
2023-06-07 19:32:02,171:INFO:Starting cross validation
2023-06-07 19:32:02,173:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 19:32:06,270:INFO:Calculating mean and std
2023-06-07 19:32:06,272:INFO:Creating metrics dataframe
2023-06-07 19:32:06,659:INFO:Uploading results into container
2023-06-07 19:32:06,660:INFO:Uploading model into container now
2023-06-07 19:32:06,661:INFO:_master_model_container: 18
2023-06-07 19:32:06,661:INFO:_display_container: 2
2023-06-07 19:32:06,661:INFO:DummyRegressor()
2023-06-07 19:32:06,661:INFO:create_model() successfully completed......................................
2023-06-07 19:32:06,782:INFO:SubProcess create_model() end ==================================
2023-06-07 19:32:06,783:INFO:Creating metrics dataframe
2023-06-07 19:32:06,823:INFO:Initializing create_model()
2023-06-07 19:32:06,823:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C6C6BE0310>, estimator=RandomForestRegressor(n_jobs=-1, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-07 19:32:06,823:INFO:Checking exceptions
2023-06-07 19:32:06,827:INFO:Importing libraries
2023-06-07 19:32:06,828:INFO:Copying training dataset
2023-06-07 19:32:06,882:INFO:Defining folds
2023-06-07 19:32:06,882:INFO:Declaring metric variables
2023-06-07 19:32:06,882:INFO:Importing untrained model
2023-06-07 19:32:06,882:INFO:Declaring custom model
2023-06-07 19:32:06,883:INFO:Random Forest Regressor Imported successfully
2023-06-07 19:32:06,885:INFO:Cross validation set to False
2023-06-07 19:32:06,885:INFO:Fitting Model
2023-06-07 19:32:07,959:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2023-06-07 19:32:07,959:INFO:create_model() successfully completed......................................
2023-06-07 19:32:08,129:INFO:_master_model_container: 18
2023-06-07 19:32:08,129:INFO:_display_container: 2
2023-06-07 19:32:08,130:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2023-06-07 19:32:08,131:INFO:compare_models() successfully completed......................................
2023-06-07 19:32:09,071:INFO:Initializing plot_model()
2023-06-07 19:32:09,071:INFO:plot_model(plot=residuals, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=RandomForestRegressor(n_jobs=-1, random_state=123), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C6C6BE0310>, system=True)
2023-06-07 19:32:09,071:INFO:Checking exceptions
2023-06-07 19:32:09,171:INFO:Preloading libraries
2023-06-07 19:32:09,445:INFO:Copying training dataset
2023-06-07 19:32:09,445:INFO:Plot type: residuals
2023-06-07 19:32:09,867:INFO:Fitting Model
2023-06-07 19:32:11,015:INFO:Scoring test/hold-out set
2023-06-07 19:32:13,267:INFO:Visual Rendered Successfully
2023-06-07 19:32:13,403:INFO:plot_model() successfully completed......................................
2023-06-07 19:32:13,674:INFO:Initializing predict_model()
2023-06-07 19:32:13,675:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C6C6BE0310>, estimator=RandomForestRegressor(n_jobs=-1, random_state=123), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001C6926F0A60>)
2023-06-07 19:32:13,675:INFO:Checking exceptions
2023-06-07 19:32:13,675:INFO:Preloading libraries
2023-06-07 19:32:14,372:INFO:Initializing evaluate_model()
2023-06-07 19:32:14,372:INFO:evaluate_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C6C6BE0310>, estimator=RandomForestRegressor(n_jobs=-1, random_state=123), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-07 19:32:14,428:INFO:Initializing plot_model()
2023-06-07 19:32:14,428:INFO:plot_model(plot=pipeline, fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestRegressor(n_jobs=-1, random_state=123), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C6C6BE0310>, system=True)
2023-06-07 19:32:14,429:INFO:Checking exceptions
2023-06-07 19:32:14,499:INFO:Preloading libraries
2023-06-07 19:32:14,750:INFO:Copying training dataset
2023-06-07 19:32:14,750:INFO:Plot type: pipeline
2023-06-07 19:32:14,960:INFO:Visual Rendered Successfully
2023-06-07 19:32:15,082:INFO:plot_model() successfully completed......................................
2023-06-07 19:32:15,204:INFO:Initializing predict_model()
2023-06-07 19:32:15,205:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C6C6BE0310>, estimator=RandomForestRegressor(n_jobs=-1, random_state=123), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001C6925F7490>)
2023-06-07 19:32:15,205:INFO:Checking exceptions
2023-06-07 19:32:15,205:INFO:Preloading libraries
2023-06-07 19:32:15,208:INFO:Set up data.
2023-06-07 19:32:15,289:INFO:Set up index.
2023-06-07 19:32:16,719:INFO:Initializing predict_model()
2023-06-07 19:32:16,719:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C6C6BE0310>, estimator=RandomForestRegressor(n_jobs=-1, random_state=123), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001C68B8BCD30>)
2023-06-07 19:32:16,720:INFO:Checking exceptions
2023-06-07 19:32:16,720:INFO:Preloading libraries
2023-06-07 19:32:16,722:INFO:Set up data.
2023-06-07 19:32:17,710:INFO:Set up index.
2023-06-07 19:34:14,466:INFO:Initializing plot_model()
2023-06-07 19:34:14,466:INFO:plot_model(plot=confusion_matrix, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=              data  codigo_ibge   latitude  longitude  T2M_RANGE         TS  \
100000  2003-12-22      4122602 -23.412001 -52.765900   7.240000  23.530001   
100001  2003-12-23      4122602 -23.412001 -52.765900   7.940000  24.090000   
100002  2003-12-24      4122602 -23.412001 -52.765900   8.590000  22.309999   
100003  2003-12-25      4122602 -23.412001 -52.765900   9.870000  20.430000   
100004  2003-12-26      4122602 -23.412001 -52.765900  11.270000  21.510000   
...            ...          ...        ...        ...        ...        ...   
999994  2012-10-14      4111209 -25.961901 -52.815201  14.590000  23.110001   
999995  2012-10-15      4111209 -25.961901 -52.815201  18.200001  24.440001   
999996  2012-10-16      4111209 -25.961901 -52.815201  18.410000  25.920000   
999997  2012-10-17      4111209 -25.961901 -52.815201  13.220000  26.760000   
999998  2012-10-18      4111209 -25.961901 -52.815201  18.700001  25.799999   

           T2MDEW     T2MWET    T2M_MAX  T2M_MIN  ...  ALLSKY_SFC_SW_DWN  \
100000  22.260000  22.920000  27.480000    20.24  ...          24.469999   
100001  21.540001  22.840000  28.440001    20.50  ...          26.139999   
100002  17.760000  20.040001  26.770000    18.18  ...          28.530001   
100003  15.120000  17.799999  25.440001    15.58  ...          30.950001   
100004  16.870001  19.200001  27.139999    15.87  ...          27.540001   
...           ...        ...        ...      ...  ...                ...   
999994  13.750000  17.730000  29.709999    15.12  ...          28.290001   
999995  13.650000  18.200001  32.189999    14.01  ...          24.889999   
999996  15.760000  20.190001  34.730000    16.33  ...          20.469999   
999997  17.370001  21.410000  32.700001    19.48  ...          29.000000   
999998  10.390000  17.790001  34.259998    15.56  ...          27.549999   

        CLRSKY_SFC_SW_DWN  TOA_SW_DWN  ALLSKY_SFC_PAR_TOT  CLRSKY_SFC_PAR_TOT  \
100000          30.770000   42.790001          132.600006          163.589996   
100001          30.900000   42.790001          142.169998          164.479996   
100002          31.170000   42.790001          152.050003          164.210007   
100003          32.119999   42.790001          161.559998          166.199997   
100004          31.150000   42.790001          147.039993          164.360001   
...                   ...         ...                 ...                 ...   
999994          28.770000   37.279999          144.279999          146.619995   
999995          27.370001   37.450001          131.000000          142.860001   
999996          26.910000   37.619999          111.540001          143.550003   
999997          29.080000   37.779999          148.539993          148.770004   
999998          28.930000   37.950001          141.229996          148.050003   

        ALLSKY_SFC_UVA  ALLSKY_SFC_UVB  ALLSKY_SFC_UV_INDEX         PS  \
100000       17.690001            0.55                 2.92  96.400002   
100001       18.950001            0.57                 2.98  96.449997   
100002       20.120001            0.59                 3.13  96.919998   
100003       21.200001            0.62                 3.27  97.110001   
100004       19.559999            0.59                 3.07  96.800003   
...                ...             ...                  ...        ...   
999994       18.900000            0.48                 2.45  94.419998   
999995       17.320000            0.49                 2.55  94.070000   
999996       15.260000            0.45                 2.34  93.870003   
999997       19.450001            0.52                 2.64  94.120003   
999998       18.420000            0.49              -999.00  94.209999   

        prediction_label  
100000         96.393901  
100001         96.433400  
100002         96.921398  
100003         97.084200  
100004         96.772401  
...                  ...  
999994         94.712800  
999995         94.742801  
999996         94.577600  
999997         94.675800  
999998         94.661000  

[899999 rows x 39 columns], feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C6C6BE0310>, system=True)
2023-06-07 19:34:14,467:INFO:Checking exceptions
2023-06-07 19:34:57,135:INFO:Initializing plot_model()
2023-06-07 19:34:57,135:INFO:plot_model(plot=threshold, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=              data  codigo_ibge   latitude  longitude  T2M_RANGE         TS  \
100000  2003-12-22      4122602 -23.412001 -52.765900   7.240000  23.530001   
100001  2003-12-23      4122602 -23.412001 -52.765900   7.940000  24.090000   
100002  2003-12-24      4122602 -23.412001 -52.765900   8.590000  22.309999   
100003  2003-12-25      4122602 -23.412001 -52.765900   9.870000  20.430000   
100004  2003-12-26      4122602 -23.412001 -52.765900  11.270000  21.510000   
...            ...          ...        ...        ...        ...        ...   
999994  2012-10-14      4111209 -25.961901 -52.815201  14.590000  23.110001   
999995  2012-10-15      4111209 -25.961901 -52.815201  18.200001  24.440001   
999996  2012-10-16      4111209 -25.961901 -52.815201  18.410000  25.920000   
999997  2012-10-17      4111209 -25.961901 -52.815201  13.220000  26.760000   
999998  2012-10-18      4111209 -25.961901 -52.815201  18.700001  25.799999   

           T2MDEW     T2MWET    T2M_MAX  T2M_MIN  ...  ALLSKY_SFC_SW_DWN  \
100000  22.260000  22.920000  27.480000    20.24  ...          24.469999   
100001  21.540001  22.840000  28.440001    20.50  ...          26.139999   
100002  17.760000  20.040001  26.770000    18.18  ...          28.530001   
100003  15.120000  17.799999  25.440001    15.58  ...          30.950001   
100004  16.870001  19.200001  27.139999    15.87  ...          27.540001   
...           ...        ...        ...      ...  ...                ...   
999994  13.750000  17.730000  29.709999    15.12  ...          28.290001   
999995  13.650000  18.200001  32.189999    14.01  ...          24.889999   
999996  15.760000  20.190001  34.730000    16.33  ...          20.469999   
999997  17.370001  21.410000  32.700001    19.48  ...          29.000000   
999998  10.390000  17.790001  34.259998    15.56  ...          27.549999   

        CLRSKY_SFC_SW_DWN  TOA_SW_DWN  ALLSKY_SFC_PAR_TOT  CLRSKY_SFC_PAR_TOT  \
100000          30.770000   42.790001          132.600006          163.589996   
100001          30.900000   42.790001          142.169998          164.479996   
100002          31.170000   42.790001          152.050003          164.210007   
100003          32.119999   42.790001          161.559998          166.199997   
100004          31.150000   42.790001          147.039993          164.360001   
...                   ...         ...                 ...                 ...   
999994          28.770000   37.279999          144.279999          146.619995   
999995          27.370001   37.450001          131.000000          142.860001   
999996          26.910000   37.619999          111.540001          143.550003   
999997          29.080000   37.779999          148.539993          148.770004   
999998          28.930000   37.950001          141.229996          148.050003   

        ALLSKY_SFC_UVA  ALLSKY_SFC_UVB  ALLSKY_SFC_UV_INDEX         PS  \
100000       17.690001            0.55                 2.92  96.400002   
100001       18.950001            0.57                 2.98  96.449997   
100002       20.120001            0.59                 3.13  96.919998   
100003       21.200001            0.62                 3.27  97.110001   
100004       19.559999            0.59                 3.07  96.800003   
...                ...             ...                  ...        ...   
999994       18.900000            0.48                 2.45  94.419998   
999995       17.320000            0.49                 2.55  94.070000   
999996       15.260000            0.45                 2.34  93.870003   
999997       19.450001            0.52                 2.64  94.120003   
999998       18.420000            0.49              -999.00  94.209999   

        prediction_label  
100000         96.393901  
100001         96.433400  
100002         96.921398  
100003         97.084200  
100004         96.772401  
...                  ...  
999994         94.712800  
999995         94.742801  
999996         94.577600  
999997         94.675800  
999998         94.661000  

[899999 rows x 39 columns], feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C6C6BE0310>, system=True)
2023-06-07 19:34:57,136:INFO:Checking exceptions
2023-06-07 19:37:35,784:INFO:Initializing plot_model()
2023-06-07 19:37:35,784:INFO:plot_model(plot=residuals, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=              data  codigo_ibge   latitude  longitude  T2M_RANGE         TS  \
100000  2003-12-22      4122602 -23.412001 -52.765900   7.240000  23.530001   
100001  2003-12-23      4122602 -23.412001 -52.765900   7.940000  24.090000   
100002  2003-12-24      4122602 -23.412001 -52.765900   8.590000  22.309999   
100003  2003-12-25      4122602 -23.412001 -52.765900   9.870000  20.430000   
100004  2003-12-26      4122602 -23.412001 -52.765900  11.270000  21.510000   
...            ...          ...        ...        ...        ...        ...   
999994  2012-10-14      4111209 -25.961901 -52.815201  14.590000  23.110001   
999995  2012-10-15      4111209 -25.961901 -52.815201  18.200001  24.440001   
999996  2012-10-16      4111209 -25.961901 -52.815201  18.410000  25.920000   
999997  2012-10-17      4111209 -25.961901 -52.815201  13.220000  26.760000   
999998  2012-10-18      4111209 -25.961901 -52.815201  18.700001  25.799999   

           T2MDEW     T2MWET    T2M_MAX  T2M_MIN  ...  ALLSKY_SFC_SW_DWN  \
100000  22.260000  22.920000  27.480000    20.24  ...          24.469999   
100001  21.540001  22.840000  28.440001    20.50  ...          26.139999   
100002  17.760000  20.040001  26.770000    18.18  ...          28.530001   
100003  15.120000  17.799999  25.440001    15.58  ...          30.950001   
100004  16.870001  19.200001  27.139999    15.87  ...          27.540001   
...           ...        ...        ...      ...  ...                ...   
999994  13.750000  17.730000  29.709999    15.12  ...          28.290001   
999995  13.650000  18.200001  32.189999    14.01  ...          24.889999   
999996  15.760000  20.190001  34.730000    16.33  ...          20.469999   
999997  17.370001  21.410000  32.700001    19.48  ...          29.000000   
999998  10.390000  17.790001  34.259998    15.56  ...          27.549999   

        CLRSKY_SFC_SW_DWN  TOA_SW_DWN  ALLSKY_SFC_PAR_TOT  CLRSKY_SFC_PAR_TOT  \
100000          30.770000   42.790001          132.600006          163.589996   
100001          30.900000   42.790001          142.169998          164.479996   
100002          31.170000   42.790001          152.050003          164.210007   
100003          32.119999   42.790001          161.559998          166.199997   
100004          31.150000   42.790001          147.039993          164.360001   
...                   ...         ...                 ...                 ...   
999994          28.770000   37.279999          144.279999          146.619995   
999995          27.370001   37.450001          131.000000          142.860001   
999996          26.910000   37.619999          111.540001          143.550003   
999997          29.080000   37.779999          148.539993          148.770004   
999998          28.930000   37.950001          141.229996          148.050003   

        ALLSKY_SFC_UVA  ALLSKY_SFC_UVB  ALLSKY_SFC_UV_INDEX         PS  \
100000       17.690001            0.55                 2.92  96.400002   
100001       18.950001            0.57                 2.98  96.449997   
100002       20.120001            0.59                 3.13  96.919998   
100003       21.200001            0.62                 3.27  97.110001   
100004       19.559999            0.59                 3.07  96.800003   
...                ...             ...                  ...        ...   
999994       18.900000            0.48                 2.45  94.419998   
999995       17.320000            0.49                 2.55  94.070000   
999996       15.260000            0.45                 2.34  93.870003   
999997       19.450001            0.52                 2.64  94.120003   
999998       18.420000            0.49              -999.00  94.209999   

        prediction_label  
100000         96.393901  
100001         96.433400  
100002         96.921398  
100003         97.084200  
100004         96.772401  
...                  ...  
999994         94.712800  
999995         94.742801  
999996         94.577600  
999997         94.675800  
999998         94.661000  

[899999 rows x 39 columns], feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C6C6BE0310>, system=True)
2023-06-07 19:37:35,784:INFO:Checking exceptions
2023-06-07 19:43:14,916:INFO:Initializing predict_model()
2023-06-07 19:43:14,917:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C6C6BE0310>, estimator=RandomForestRegressor(n_jobs=-1, random_state=123), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001C6DA81D000>)
2023-06-07 19:43:14,917:INFO:Checking exceptions
2023-06-07 19:43:14,917:INFO:Preloading libraries
2023-06-07 19:43:14,921:INFO:Set up data.
2023-06-07 19:43:15,612:INFO:Set up index.
2023-06-07 19:45:44,237:INFO:Initializing predict_model()
2023-06-07 19:45:44,237:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C6C6BE0310>, estimator=RandomForestRegressor(n_jobs=-1, random_state=123), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001C6D6ECB760>)
2023-06-07 19:45:44,238:INFO:Checking exceptions
2023-06-07 19:45:44,238:INFO:Preloading libraries
2023-06-07 19:45:44,241:INFO:Set up data.
2023-06-07 19:45:44,264:INFO:Set up index.
2023-06-07 19:49:39,341:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-07 19:49:39,341:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-07 19:49:39,341:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-07 19:49:39,341:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-07 19:49:40,753:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-07 19:50:04,129:INFO:PyCaret RegressionExperiment
2023-06-07 19:50:04,129:INFO:Logging name: reg-default-name
2023-06-07 19:50:04,129:INFO:ML Usecase: MLUsecase.REGRESSION
2023-06-07 19:50:04,129:INFO:version 3.0.2
2023-06-07 19:50:04,129:INFO:Initializing setup()
2023-06-07 19:50:04,129:INFO:self.USI: 7887
2023-06-07 19:50:04,129:INFO:self._variable_keys: {'y', 'logging_param', 'fold_shuffle_param', 'pipeline', 'fold_groups_param', 'memory', '_ml_usecase', 'html_param', 'fold_generator', 'log_plots_param', 'USI', 'y_train', 'data', 'n_jobs_param', 'gpu_param', '_available_plots', 'gpu_n_jobs_param', 'y_test', 'seed', 'X_test', 'transform_target_param', 'exp_name_log', 'idx', 'exp_id', 'X_train', 'X', 'target_param'}
2023-06-07 19:50:04,129:INFO:Checking environment
2023-06-07 19:50:04,129:INFO:python_version: 3.10.9
2023-06-07 19:50:04,129:INFO:python_build: ('main', 'Mar  1 2023 18:18:15')
2023-06-07 19:50:04,130:INFO:machine: AMD64
2023-06-07 19:50:04,130:INFO:platform: Windows-10-10.0.19041-SP0
2023-06-07 19:50:04,130:INFO:Memory: svmem(total=6378106880, available=2651049984, percent=58.4, used=3727056896, free=2651049984)
2023-06-07 19:50:04,130:INFO:Physical Core: 4
2023-06-07 19:50:04,130:INFO:Logical Core: 8
2023-06-07 19:50:04,130:INFO:Checking libraries
2023-06-07 19:50:04,130:INFO:System:
2023-06-07 19:50:04,130:INFO:    python: 3.10.9 | packaged by Anaconda, Inc. | (main, Mar  1 2023, 18:18:15) [MSC v.1916 64 bit (AMD64)]
2023-06-07 19:50:04,130:INFO:executable: c:\Users\Crossddelta\anaconda3\python.exe
2023-06-07 19:50:04,130:INFO:   machine: Windows-10-10.0.19041-SP0
2023-06-07 19:50:04,130:INFO:PyCaret required dependencies:
2023-06-07 19:50:04,130:INFO:                 pip: 22.3.1
2023-06-07 19:50:04,130:INFO:          setuptools: 65.6.3
2023-06-07 19:50:04,131:INFO:             pycaret: 3.0.2
2023-06-07 19:50:04,131:INFO:             IPython: 8.10.0
2023-06-07 19:50:04,131:INFO:          ipywidgets: 7.6.5
2023-06-07 19:50:04,131:INFO:                tqdm: 4.64.1
2023-06-07 19:50:04,131:INFO:               numpy: 1.23.5
2023-06-07 19:50:04,131:INFO:              pandas: 1.5.3
2023-06-07 19:50:04,131:INFO:              jinja2: 3.1.2
2023-06-07 19:50:04,131:INFO:               scipy: 1.10.0
2023-06-07 19:50:04,131:INFO:              joblib: 1.2.0
2023-06-07 19:50:04,131:INFO:             sklearn: 1.2.1
2023-06-07 19:50:04,131:INFO:                pyod: 1.0.9
2023-06-07 19:50:04,131:INFO:            imblearn: 0.10.1
2023-06-07 19:50:04,131:INFO:   category_encoders: 2.6.1
2023-06-07 19:50:04,131:INFO:            lightgbm: 3.3.5
2023-06-07 19:50:04,131:INFO:               numba: 0.56.4
2023-06-07 19:50:04,132:INFO:            requests: 2.28.1
2023-06-07 19:50:04,132:INFO:          matplotlib: 3.7.0
2023-06-07 19:50:04,132:INFO:          scikitplot: 0.3.7
2023-06-07 19:50:04,132:INFO:         yellowbrick: 1.5
2023-06-07 19:50:04,132:INFO:              plotly: 5.9.0
2023-06-07 19:50:04,132:INFO:             kaleido: 0.2.1
2023-06-07 19:50:04,132:INFO:         statsmodels: 0.13.5
2023-06-07 19:50:04,132:INFO:              sktime: 0.17.0
2023-06-07 19:50:04,132:INFO:               tbats: 1.1.3
2023-06-07 19:50:04,132:INFO:            pmdarima: 2.0.3
2023-06-07 19:50:04,132:INFO:              psutil: 5.9.0
2023-06-07 19:50:04,132:INFO:PyCaret optional dependencies:
2023-06-07 19:50:04,153:INFO:                shap: Not installed
2023-06-07 19:50:04,153:INFO:           interpret: Not installed
2023-06-07 19:50:04,153:INFO:                umap: Not installed
2023-06-07 19:50:04,153:INFO:    pandas_profiling: Not installed
2023-06-07 19:50:04,153:INFO:  explainerdashboard: Not installed
2023-06-07 19:50:04,153:INFO:             autoviz: Not installed
2023-06-07 19:50:04,153:INFO:           fairlearn: Not installed
2023-06-07 19:50:04,153:INFO:             xgboost: Not installed
2023-06-07 19:50:04,153:INFO:            catboost: Not installed
2023-06-07 19:50:04,153:INFO:              kmodes: Not installed
2023-06-07 19:50:04,153:INFO:             mlxtend: Not installed
2023-06-07 19:50:04,154:INFO:       statsforecast: Not installed
2023-06-07 19:50:04,154:INFO:        tune_sklearn: Not installed
2023-06-07 19:50:04,154:INFO:                 ray: Not installed
2023-06-07 19:50:04,154:INFO:            hyperopt: Not installed
2023-06-07 19:50:04,154:INFO:              optuna: Not installed
2023-06-07 19:50:04,154:INFO:               skopt: Not installed
2023-06-07 19:50:04,154:INFO:              mlflow: Not installed
2023-06-07 19:50:04,154:INFO:              gradio: Not installed
2023-06-07 19:50:04,154:INFO:             fastapi: Not installed
2023-06-07 19:50:04,154:INFO:             uvicorn: Not installed
2023-06-07 19:50:04,154:INFO:              m2cgen: Not installed
2023-06-07 19:50:04,154:INFO:           evidently: Not installed
2023-06-07 19:50:04,154:INFO:               fugue: Not installed
2023-06-07 19:50:04,154:INFO:           streamlit: Not installed
2023-06-07 19:50:04,155:INFO:             prophet: Not installed
2023-06-07 19:50:04,155:INFO:None
2023-06-07 19:50:04,155:INFO:Set up data.
2023-06-07 19:50:04,257:INFO:Set up train/test split.
2023-06-07 19:50:04,313:INFO:Set up index.
2023-06-07 19:50:04,318:INFO:Set up folding strategy.
2023-06-07 19:50:04,318:INFO:Assigning column types.
2023-06-07 19:50:04,371:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-07 19:50:04,372:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-07 19:50:04,379:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-07 19:50:04,386:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-07 19:50:04,522:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 19:50:04,592:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-07 19:50:04,593:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:50:04,981:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:50:04,982:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-07 19:50:04,990:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-07 19:50:04,997:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-07 19:50:05,126:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 19:50:05,202:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-07 19:50:05,203:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:50:05,203:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:50:05,203:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-06-07 19:50:05,211:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-07 19:50:05,218:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-07 19:50:05,347:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 19:50:05,415:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-07 19:50:05,416:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:50:05,416:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:50:05,424:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-07 19:50:05,431:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-07 19:50:05,561:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 19:50:05,630:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-07 19:50:05,631:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:50:05,631:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:50:05,633:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-06-07 19:50:05,648:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-07 19:50:05,777:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 19:50:05,849:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-07 19:50:05,850:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:50:05,851:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:50:05,864:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-07 19:50:05,994:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 19:50:06,075:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-07 19:50:06,076:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:50:06,076:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:50:06,077:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-06-07 19:50:06,226:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 19:50:06,300:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-07 19:50:06,301:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:50:06,301:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:50:06,443:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 19:50:06,514:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-07 19:50:06,514:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:50:06,519:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:50:06,519:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-07 19:50:06,693:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 19:50:06,764:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:50:06,766:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:50:06,909:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 19:50:06,978:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:50:06,978:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:50:06,978:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-06-07 19:50:07,195:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:50:07,195:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:50:07,407:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:50:07,408:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:50:07,412:INFO:Preparing preprocessing pipeline...
2023-06-07 19:50:07,412:INFO:Set up simple imputation.
2023-06-07 19:50:07,436:INFO:Set up encoding of categorical features.
2023-06-07 19:50:07,764:INFO:Finished creating preprocessing pipeline.
2023-06-07 19:50:07,778:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\CROSSD~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['codigo_ibge', 'latitude',
                                             'longitude', 'T2M_RANGE', 'TS',
                                             'T2MDEW', 'T2MWET', 'T2M_MAX',
                                             'T2M_MIN', 'T2M', 'QV2M', 'RH2M',
                                             'PRECTOTCORR', 'WS2M', 'WS2M_MAX',
                                             'WS2M_MIN', 'WS2M_RANGE', 'WS10M',
                                             'WS10M_MAX', 'WS10M_MIN',
                                             'WS10M_RANGE'...
                                             'WS50M_RANGE', 'GWETTOP',
                                             'GWETROOT', 'GWETPROF',
                                             'ALLSKY_SFC_SW_DWN',
                                             'CLRSKY_SFC_SW_DWN', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['data'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rest_encoding',
                 TransformerWrapper(include=['data'],
                                    transformer=TargetEncoder(cols=['data'],
                                                              handle_missing='return_nan')))])
2023-06-07 19:50:07,778:INFO:Creating final display dataframe.
2023-06-07 19:50:08,121:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target                PS
2                   Target type        Regression
3           Original data shape       (80000, 38)
4        Transformed data shape       (80000, 38)
5   Transformed train set shape       (56000, 38)
6    Transformed test set shape       (24000, 38)
7              Numeric features                36
8          Categorical features                 1
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15               Fold Generator             KFold
16                  Fold Number                10
17                     CPU Jobs                -1
18                      Use GPU             False
19               Log Experiment             False
20              Experiment Name  reg-default-name
21                          USI              7887
2023-06-07 19:50:08,342:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:50:08,343:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:50:08,563:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:50:08,564:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:50:08,564:INFO:setup() successfully completed in 4.89s...............
2023-06-07 19:50:08,618:INFO:Initializing compare_models()
2023-06-07 19:50:08,618:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AFF3DE2F50>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000002AFF3DE2F50>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2023-06-07 19:50:08,619:INFO:Checking exceptions
2023-06-07 19:50:08,654:INFO:Preparing display monitor
2023-06-07 19:50:08,708:INFO:Initializing Linear Regression
2023-06-07 19:50:08,708:INFO:Total runtime is 0.0 minutes
2023-06-07 19:50:08,716:INFO:SubProcess create_model() called ==================================
2023-06-07 19:50:08,717:INFO:Initializing create_model()
2023-06-07 19:50:08,717:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AFF3DE2F50>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002AFF3DE2320>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 19:50:08,718:INFO:Checking exceptions
2023-06-07 19:50:08,718:INFO:Importing libraries
2023-06-07 19:50:08,718:INFO:Copying training dataset
2023-06-07 19:50:08,812:INFO:Defining folds
2023-06-07 19:50:08,812:INFO:Declaring metric variables
2023-06-07 19:50:08,821:INFO:Importing untrained model
2023-06-07 19:50:08,827:INFO:Linear Regression Imported successfully
2023-06-07 19:50:08,868:INFO:Starting cross validation
2023-06-07 19:50:08,889:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 19:50:22,458:INFO:Calculating mean and std
2023-06-07 19:50:22,460:INFO:Creating metrics dataframe
2023-06-07 19:50:22,875:INFO:Uploading results into container
2023-06-07 19:50:22,876:INFO:Uploading model into container now
2023-06-07 19:50:22,877:INFO:_master_model_container: 1
2023-06-07 19:50:22,877:INFO:_display_container: 2
2023-06-07 19:50:22,877:INFO:LinearRegression(n_jobs=-1)
2023-06-07 19:50:22,877:INFO:create_model() successfully completed......................................
2023-06-07 19:50:23,002:INFO:SubProcess create_model() end ==================================
2023-06-07 19:50:23,002:INFO:Creating metrics dataframe
2023-06-07 19:50:23,014:INFO:Initializing Lasso Regression
2023-06-07 19:50:23,014:INFO:Total runtime is 0.23842479387919108 minutes
2023-06-07 19:50:23,019:INFO:SubProcess create_model() called ==================================
2023-06-07 19:50:23,020:INFO:Initializing create_model()
2023-06-07 19:50:23,020:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AFF3DE2F50>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002AFF3DE2320>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 19:50:23,020:INFO:Checking exceptions
2023-06-07 19:50:23,021:INFO:Importing libraries
2023-06-07 19:50:23,021:INFO:Copying training dataset
2023-06-07 19:50:23,080:INFO:Defining folds
2023-06-07 19:50:23,080:INFO:Declaring metric variables
2023-06-07 19:50:23,087:INFO:Importing untrained model
2023-06-07 19:50:23,092:INFO:Lasso Regression Imported successfully
2023-06-07 19:50:23,101:INFO:Starting cross validation
2023-06-07 19:50:23,103:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 19:50:27,110:INFO:Calculating mean and std
2023-06-07 19:50:27,112:INFO:Creating metrics dataframe
2023-06-07 19:50:27,500:INFO:Uploading results into container
2023-06-07 19:50:27,501:INFO:Uploading model into container now
2023-06-07 19:50:27,501:INFO:_master_model_container: 2
2023-06-07 19:50:27,501:INFO:_display_container: 2
2023-06-07 19:50:27,502:INFO:Lasso(random_state=123)
2023-06-07 19:50:27,502:INFO:create_model() successfully completed......................................
2023-06-07 19:50:27,623:INFO:SubProcess create_model() end ==================================
2023-06-07 19:50:27,624:INFO:Creating metrics dataframe
2023-06-07 19:50:27,637:INFO:Initializing Ridge Regression
2023-06-07 19:50:27,637:INFO:Total runtime is 0.3154816786448161 minutes
2023-06-07 19:50:27,642:INFO:SubProcess create_model() called ==================================
2023-06-07 19:50:27,643:INFO:Initializing create_model()
2023-06-07 19:50:27,643:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AFF3DE2F50>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002AFF3DE2320>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 19:50:27,643:INFO:Checking exceptions
2023-06-07 19:50:27,643:INFO:Importing libraries
2023-06-07 19:50:27,643:INFO:Copying training dataset
2023-06-07 19:50:27,698:INFO:Defining folds
2023-06-07 19:50:27,699:INFO:Declaring metric variables
2023-06-07 19:50:27,705:INFO:Importing untrained model
2023-06-07 19:50:27,710:INFO:Ridge Regression Imported successfully
2023-06-07 19:50:27,720:INFO:Starting cross validation
2023-06-07 19:50:27,723:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 19:50:31,726:INFO:Calculating mean and std
2023-06-07 19:50:31,728:INFO:Creating metrics dataframe
2023-06-07 19:50:32,120:INFO:Uploading results into container
2023-06-07 19:50:32,121:INFO:Uploading model into container now
2023-06-07 19:50:32,122:INFO:_master_model_container: 3
2023-06-07 19:50:32,122:INFO:_display_container: 2
2023-06-07 19:50:32,123:INFO:Ridge(random_state=123)
2023-06-07 19:50:32,123:INFO:create_model() successfully completed......................................
2023-06-07 19:50:32,244:INFO:SubProcess create_model() end ==================================
2023-06-07 19:50:32,244:INFO:Creating metrics dataframe
2023-06-07 19:50:32,258:INFO:Initializing Elastic Net
2023-06-07 19:50:32,258:INFO:Total runtime is 0.392498509089152 minutes
2023-06-07 19:50:32,263:INFO:SubProcess create_model() called ==================================
2023-06-07 19:50:32,264:INFO:Initializing create_model()
2023-06-07 19:50:32,264:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AFF3DE2F50>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002AFF3DE2320>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 19:50:32,264:INFO:Checking exceptions
2023-06-07 19:50:32,264:INFO:Importing libraries
2023-06-07 19:50:32,264:INFO:Copying training dataset
2023-06-07 19:50:32,320:INFO:Defining folds
2023-06-07 19:50:32,320:INFO:Declaring metric variables
2023-06-07 19:50:32,327:INFO:Importing untrained model
2023-06-07 19:50:32,332:INFO:Elastic Net Imported successfully
2023-06-07 19:50:32,342:INFO:Starting cross validation
2023-06-07 19:50:32,344:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 19:50:36,407:INFO:Calculating mean and std
2023-06-07 19:50:36,408:INFO:Creating metrics dataframe
2023-06-07 19:50:36,796:INFO:Uploading results into container
2023-06-07 19:50:36,797:INFO:Uploading model into container now
2023-06-07 19:50:36,798:INFO:_master_model_container: 4
2023-06-07 19:50:36,798:INFO:_display_container: 2
2023-06-07 19:50:36,798:INFO:ElasticNet(random_state=123)
2023-06-07 19:50:36,799:INFO:create_model() successfully completed......................................
2023-06-07 19:50:36,920:INFO:SubProcess create_model() end ==================================
2023-06-07 19:50:36,920:INFO:Creating metrics dataframe
2023-06-07 19:50:36,934:INFO:Initializing Least Angle Regression
2023-06-07 19:50:36,935:INFO:Total runtime is 0.47044299046198523 minutes
2023-06-07 19:50:36,940:INFO:SubProcess create_model() called ==================================
2023-06-07 19:50:36,941:INFO:Initializing create_model()
2023-06-07 19:50:36,941:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AFF3DE2F50>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002AFF3DE2320>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 19:50:36,941:INFO:Checking exceptions
2023-06-07 19:50:36,941:INFO:Importing libraries
2023-06-07 19:50:36,941:INFO:Copying training dataset
2023-06-07 19:50:36,998:INFO:Defining folds
2023-06-07 19:50:36,998:INFO:Declaring metric variables
2023-06-07 19:50:37,005:INFO:Importing untrained model
2023-06-07 19:50:37,028:INFO:Least Angle Regression Imported successfully
2023-06-07 19:50:37,046:INFO:Starting cross validation
2023-06-07 19:50:37,048:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 19:50:41,171:INFO:Calculating mean and std
2023-06-07 19:50:41,173:INFO:Creating metrics dataframe
2023-06-07 19:50:41,557:INFO:Uploading results into container
2023-06-07 19:50:41,558:INFO:Uploading model into container now
2023-06-07 19:50:41,559:INFO:_master_model_container: 5
2023-06-07 19:50:41,559:INFO:_display_container: 2
2023-06-07 19:50:41,560:INFO:Lars(random_state=123)
2023-06-07 19:50:41,560:INFO:create_model() successfully completed......................................
2023-06-07 19:50:41,680:INFO:SubProcess create_model() end ==================================
2023-06-07 19:50:41,680:INFO:Creating metrics dataframe
2023-06-07 19:50:41,695:INFO:Initializing Lasso Least Angle Regression
2023-06-07 19:50:41,695:INFO:Total runtime is 0.5497767806053161 minutes
2023-06-07 19:50:41,701:INFO:SubProcess create_model() called ==================================
2023-06-07 19:50:41,701:INFO:Initializing create_model()
2023-06-07 19:50:41,701:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AFF3DE2F50>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002AFF3DE2320>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 19:50:41,701:INFO:Checking exceptions
2023-06-07 19:50:41,702:INFO:Importing libraries
2023-06-07 19:50:41,702:INFO:Copying training dataset
2023-06-07 19:50:41,757:INFO:Defining folds
2023-06-07 19:50:41,757:INFO:Declaring metric variables
2023-06-07 19:50:41,763:INFO:Importing untrained model
2023-06-07 19:50:41,771:INFO:Lasso Least Angle Regression Imported successfully
2023-06-07 19:50:41,780:INFO:Starting cross validation
2023-06-07 19:50:41,783:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 19:50:45,875:INFO:Calculating mean and std
2023-06-07 19:50:45,876:INFO:Creating metrics dataframe
2023-06-07 19:50:46,268:INFO:Uploading results into container
2023-06-07 19:50:46,269:INFO:Uploading model into container now
2023-06-07 19:50:46,270:INFO:_master_model_container: 6
2023-06-07 19:50:46,270:INFO:_display_container: 2
2023-06-07 19:50:46,271:INFO:LassoLars(random_state=123)
2023-06-07 19:50:46,271:INFO:create_model() successfully completed......................................
2023-06-07 19:50:46,391:INFO:SubProcess create_model() end ==================================
2023-06-07 19:50:46,391:INFO:Creating metrics dataframe
2023-06-07 19:50:46,406:INFO:Initializing Orthogonal Matching Pursuit
2023-06-07 19:50:46,406:INFO:Total runtime is 0.6283004919687907 minutes
2023-06-07 19:50:46,411:INFO:SubProcess create_model() called ==================================
2023-06-07 19:50:46,411:INFO:Initializing create_model()
2023-06-07 19:50:46,411:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AFF3DE2F50>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002AFF3DE2320>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 19:50:46,412:INFO:Checking exceptions
2023-06-07 19:50:46,412:INFO:Importing libraries
2023-06-07 19:50:46,412:INFO:Copying training dataset
2023-06-07 19:50:46,470:INFO:Defining folds
2023-06-07 19:50:46,470:INFO:Declaring metric variables
2023-06-07 19:50:46,476:INFO:Importing untrained model
2023-06-07 19:50:46,482:INFO:Orthogonal Matching Pursuit Imported successfully
2023-06-07 19:50:46,492:INFO:Starting cross validation
2023-06-07 19:50:46,494:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 19:50:50,589:INFO:Calculating mean and std
2023-06-07 19:50:50,591:INFO:Creating metrics dataframe
2023-06-07 19:50:50,979:INFO:Uploading results into container
2023-06-07 19:50:50,980:INFO:Uploading model into container now
2023-06-07 19:50:50,981:INFO:_master_model_container: 7
2023-06-07 19:50:50,981:INFO:_display_container: 2
2023-06-07 19:50:50,981:INFO:OrthogonalMatchingPursuit()
2023-06-07 19:50:50,981:INFO:create_model() successfully completed......................................
2023-06-07 19:50:51,103:INFO:SubProcess create_model() end ==================================
2023-06-07 19:50:51,104:INFO:Creating metrics dataframe
2023-06-07 19:50:51,119:INFO:Initializing Bayesian Ridge
2023-06-07 19:50:51,119:INFO:Total runtime is 0.7068513393402099 minutes
2023-06-07 19:50:51,124:INFO:SubProcess create_model() called ==================================
2023-06-07 19:50:51,125:INFO:Initializing create_model()
2023-06-07 19:50:51,125:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AFF3DE2F50>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002AFF3DE2320>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 19:50:51,125:INFO:Checking exceptions
2023-06-07 19:50:51,125:INFO:Importing libraries
2023-06-07 19:50:51,125:INFO:Copying training dataset
2023-06-07 19:50:51,181:INFO:Defining folds
2023-06-07 19:50:51,181:INFO:Declaring metric variables
2023-06-07 19:50:51,188:INFO:Importing untrained model
2023-06-07 19:50:51,194:INFO:Bayesian Ridge Imported successfully
2023-06-07 19:50:51,204:INFO:Starting cross validation
2023-06-07 19:50:51,206:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 19:50:55,284:INFO:Calculating mean and std
2023-06-07 19:50:55,286:INFO:Creating metrics dataframe
2023-06-07 19:50:55,676:INFO:Uploading results into container
2023-06-07 19:50:55,677:INFO:Uploading model into container now
2023-06-07 19:50:55,677:INFO:_master_model_container: 8
2023-06-07 19:50:55,678:INFO:_display_container: 2
2023-06-07 19:50:55,678:INFO:BayesianRidge()
2023-06-07 19:50:55,678:INFO:create_model() successfully completed......................................
2023-06-07 19:50:55,798:INFO:SubProcess create_model() end ==================================
2023-06-07 19:50:55,799:INFO:Creating metrics dataframe
2023-06-07 19:50:55,817:INFO:Initializing Passive Aggressive Regressor
2023-06-07 19:50:55,817:INFO:Total runtime is 0.785151727994283 minutes
2023-06-07 19:50:55,823:INFO:SubProcess create_model() called ==================================
2023-06-07 19:50:55,823:INFO:Initializing create_model()
2023-06-07 19:50:55,823:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AFF3DE2F50>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002AFF3DE2320>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 19:50:55,824:INFO:Checking exceptions
2023-06-07 19:50:55,824:INFO:Importing libraries
2023-06-07 19:50:55,824:INFO:Copying training dataset
2023-06-07 19:50:55,881:INFO:Defining folds
2023-06-07 19:50:55,881:INFO:Declaring metric variables
2023-06-07 19:50:55,888:INFO:Importing untrained model
2023-06-07 19:50:55,894:INFO:Passive Aggressive Regressor Imported successfully
2023-06-07 19:50:55,904:INFO:Starting cross validation
2023-06-07 19:50:55,906:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 19:51:00,003:INFO:Calculating mean and std
2023-06-07 19:51:00,006:INFO:Creating metrics dataframe
2023-06-07 19:51:00,396:INFO:Uploading results into container
2023-06-07 19:51:00,397:INFO:Uploading model into container now
2023-06-07 19:51:00,397:INFO:_master_model_container: 9
2023-06-07 19:51:00,397:INFO:_display_container: 2
2023-06-07 19:51:00,397:INFO:PassiveAggressiveRegressor(random_state=123)
2023-06-07 19:51:00,400:INFO:create_model() successfully completed......................................
2023-06-07 19:51:00,520:INFO:SubProcess create_model() end ==================================
2023-06-07 19:51:00,520:INFO:Creating metrics dataframe
2023-06-07 19:51:00,537:INFO:Initializing Huber Regressor
2023-06-07 19:51:00,537:INFO:Total runtime is 0.8638135075569152 minutes
2023-06-07 19:51:00,542:INFO:SubProcess create_model() called ==================================
2023-06-07 19:51:00,543:INFO:Initializing create_model()
2023-06-07 19:51:00,543:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AFF3DE2F50>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002AFF3DE2320>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 19:51:00,543:INFO:Checking exceptions
2023-06-07 19:51:00,543:INFO:Importing libraries
2023-06-07 19:51:00,543:INFO:Copying training dataset
2023-06-07 19:51:00,600:INFO:Defining folds
2023-06-07 19:51:00,601:INFO:Declaring metric variables
2023-06-07 19:51:00,607:INFO:Importing untrained model
2023-06-07 19:51:00,613:INFO:Huber Regressor Imported successfully
2023-06-07 19:51:00,623:INFO:Starting cross validation
2023-06-07 19:51:00,625:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 19:51:04,694:INFO:Calculating mean and std
2023-06-07 19:51:04,695:INFO:Creating metrics dataframe
2023-06-07 19:51:05,089:INFO:Uploading results into container
2023-06-07 19:51:05,090:INFO:Uploading model into container now
2023-06-07 19:51:05,090:INFO:_master_model_container: 10
2023-06-07 19:51:05,091:INFO:_display_container: 2
2023-06-07 19:51:05,091:INFO:HuberRegressor()
2023-06-07 19:51:05,092:INFO:create_model() successfully completed......................................
2023-06-07 19:51:05,223:INFO:SubProcess create_model() end ==================================
2023-06-07 19:51:05,224:INFO:Creating metrics dataframe
2023-06-07 19:51:05,241:INFO:Initializing K Neighbors Regressor
2023-06-07 19:51:05,242:INFO:Total runtime is 0.9422384937604268 minutes
2023-06-07 19:51:05,247:INFO:SubProcess create_model() called ==================================
2023-06-07 19:51:05,247:INFO:Initializing create_model()
2023-06-07 19:51:05,247:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AFF3DE2F50>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002AFF3DE2320>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 19:51:05,249:INFO:Checking exceptions
2023-06-07 19:51:05,249:INFO:Importing libraries
2023-06-07 19:51:05,249:INFO:Copying training dataset
2023-06-07 19:51:05,309:INFO:Defining folds
2023-06-07 19:51:05,309:INFO:Declaring metric variables
2023-06-07 19:51:05,314:INFO:Importing untrained model
2023-06-07 19:51:05,323:INFO:K Neighbors Regressor Imported successfully
2023-06-07 19:51:05,332:INFO:Starting cross validation
2023-06-07 19:51:05,334:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 19:51:14,421:INFO:Calculating mean and std
2023-06-07 19:51:14,423:INFO:Creating metrics dataframe
2023-06-07 19:51:14,818:INFO:Uploading results into container
2023-06-07 19:51:14,820:INFO:Uploading model into container now
2023-06-07 19:51:14,821:INFO:_master_model_container: 11
2023-06-07 19:51:14,821:INFO:_display_container: 2
2023-06-07 19:51:14,822:INFO:KNeighborsRegressor(n_jobs=-1)
2023-06-07 19:51:14,822:INFO:create_model() successfully completed......................................
2023-06-07 19:51:14,944:INFO:SubProcess create_model() end ==================================
2023-06-07 19:51:14,945:INFO:Creating metrics dataframe
2023-06-07 19:51:14,962:INFO:Initializing Decision Tree Regressor
2023-06-07 19:51:14,962:INFO:Total runtime is 1.1042327562967935 minutes
2023-06-07 19:51:14,968:INFO:SubProcess create_model() called ==================================
2023-06-07 19:51:14,968:INFO:Initializing create_model()
2023-06-07 19:51:14,968:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AFF3DE2F50>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002AFF3DE2320>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 19:51:14,968:INFO:Checking exceptions
2023-06-07 19:51:14,969:INFO:Importing libraries
2023-06-07 19:51:14,969:INFO:Copying training dataset
2023-06-07 19:51:15,025:INFO:Defining folds
2023-06-07 19:51:15,026:INFO:Declaring metric variables
2023-06-07 19:51:15,031:INFO:Importing untrained model
2023-06-07 19:51:15,040:INFO:Decision Tree Regressor Imported successfully
2023-06-07 19:51:15,048:INFO:Starting cross validation
2023-06-07 19:51:15,051:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 19:51:19,253:INFO:Calculating mean and std
2023-06-07 19:51:19,254:INFO:Creating metrics dataframe
2023-06-07 19:51:19,655:INFO:Uploading results into container
2023-06-07 19:51:19,656:INFO:Uploading model into container now
2023-06-07 19:51:19,657:INFO:_master_model_container: 12
2023-06-07 19:51:19,657:INFO:_display_container: 2
2023-06-07 19:51:19,658:INFO:DecisionTreeRegressor(random_state=123)
2023-06-07 19:51:19,658:INFO:create_model() successfully completed......................................
2023-06-07 19:51:19,779:INFO:SubProcess create_model() end ==================================
2023-06-07 19:51:19,780:INFO:Creating metrics dataframe
2023-06-07 19:51:19,801:INFO:Initializing Random Forest Regressor
2023-06-07 19:51:19,802:INFO:Total runtime is 1.1848930001258848 minutes
2023-06-07 19:51:19,806:INFO:SubProcess create_model() called ==================================
2023-06-07 19:51:19,807:INFO:Initializing create_model()
2023-06-07 19:51:19,807:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AFF3DE2F50>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002AFF3DE2320>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 19:51:19,807:INFO:Checking exceptions
2023-06-07 19:51:19,807:INFO:Importing libraries
2023-06-07 19:51:19,808:INFO:Copying training dataset
2023-06-07 19:51:19,864:INFO:Defining folds
2023-06-07 19:51:19,864:INFO:Declaring metric variables
2023-06-07 19:51:19,872:INFO:Importing untrained model
2023-06-07 19:51:19,877:INFO:Random Forest Regressor Imported successfully
2023-06-07 19:51:19,887:INFO:Starting cross validation
2023-06-07 19:51:19,889:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 19:51:33,553:INFO:Calculating mean and std
2023-06-07 19:51:33,563:INFO:Creating metrics dataframe
2023-06-07 19:51:33,989:INFO:Uploading results into container
2023-06-07 19:51:33,990:INFO:Uploading model into container now
2023-06-07 19:51:33,991:INFO:_master_model_container: 13
2023-06-07 19:51:33,991:INFO:_display_container: 2
2023-06-07 19:51:33,992:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2023-06-07 19:51:33,993:INFO:create_model() successfully completed......................................
2023-06-07 19:51:34,205:INFO:SubProcess create_model() end ==================================
2023-06-07 19:51:34,205:INFO:Creating metrics dataframe
2023-06-07 19:51:34,230:INFO:Initializing Extra Trees Regressor
2023-06-07 19:51:34,231:INFO:Total runtime is 1.4253752152125039 minutes
2023-06-07 19:51:34,237:INFO:SubProcess create_model() called ==================================
2023-06-07 19:51:34,238:INFO:Initializing create_model()
2023-06-07 19:51:34,238:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AFF3DE2F50>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002AFF3DE2320>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 19:51:34,238:INFO:Checking exceptions
2023-06-07 19:51:34,239:INFO:Importing libraries
2023-06-07 19:51:34,239:INFO:Copying training dataset
2023-06-07 19:51:34,305:INFO:Defining folds
2023-06-07 19:51:34,305:INFO:Declaring metric variables
2023-06-07 19:51:34,309:INFO:Importing untrained model
2023-06-07 19:51:34,314:INFO:Extra Trees Regressor Imported successfully
2023-06-07 19:51:34,323:INFO:Starting cross validation
2023-06-07 19:51:34,326:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 19:52:03,954:INFO:Calculating mean and std
2023-06-07 19:52:03,972:INFO:Creating metrics dataframe
2023-06-07 19:52:04,392:INFO:Uploading results into container
2023-06-07 19:52:04,394:INFO:Uploading model into container now
2023-06-07 19:52:04,397:INFO:_master_model_container: 14
2023-06-07 19:52:04,397:INFO:_display_container: 2
2023-06-07 19:52:04,401:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2023-06-07 19:52:04,401:INFO:create_model() successfully completed......................................
2023-06-07 19:52:04,706:INFO:SubProcess create_model() end ==================================
2023-06-07 19:52:04,707:INFO:Creating metrics dataframe
2023-06-07 19:52:04,775:INFO:Initializing AdaBoost Regressor
2023-06-07 19:52:04,775:INFO:Total runtime is 1.934453531106313 minutes
2023-06-07 19:52:04,780:INFO:SubProcess create_model() called ==================================
2023-06-07 19:52:04,781:INFO:Initializing create_model()
2023-06-07 19:52:04,781:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AFF3DE2F50>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002AFF3DE2320>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 19:52:04,781:INFO:Checking exceptions
2023-06-07 19:52:04,782:INFO:Importing libraries
2023-06-07 19:52:04,784:INFO:Copying training dataset
2023-06-07 19:52:04,883:INFO:Defining folds
2023-06-07 19:52:04,884:INFO:Declaring metric variables
2023-06-07 19:52:04,888:INFO:Importing untrained model
2023-06-07 19:52:04,892:INFO:AdaBoost Regressor Imported successfully
2023-06-07 19:52:04,902:INFO:Starting cross validation
2023-06-07 19:52:04,904:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 19:52:09,916:INFO:Calculating mean and std
2023-06-07 19:52:09,918:INFO:Creating metrics dataframe
2023-06-07 19:52:10,319:INFO:Uploading results into container
2023-06-07 19:52:10,320:INFO:Uploading model into container now
2023-06-07 19:52:10,320:INFO:_master_model_container: 15
2023-06-07 19:52:10,320:INFO:_display_container: 2
2023-06-07 19:52:10,321:INFO:AdaBoostRegressor(random_state=123)
2023-06-07 19:52:10,321:INFO:create_model() successfully completed......................................
2023-06-07 19:52:10,451:INFO:SubProcess create_model() end ==================================
2023-06-07 19:52:10,451:INFO:Creating metrics dataframe
2023-06-07 19:52:10,471:INFO:Initializing Gradient Boosting Regressor
2023-06-07 19:52:10,471:INFO:Total runtime is 2.029381775856018 minutes
2023-06-07 19:52:10,476:INFO:SubProcess create_model() called ==================================
2023-06-07 19:52:10,476:INFO:Initializing create_model()
2023-06-07 19:52:10,476:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AFF3DE2F50>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002AFF3DE2320>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 19:52:10,477:INFO:Checking exceptions
2023-06-07 19:52:10,477:INFO:Importing libraries
2023-06-07 19:52:10,477:INFO:Copying training dataset
2023-06-07 19:52:10,537:INFO:Defining folds
2023-06-07 19:52:10,538:INFO:Declaring metric variables
2023-06-07 19:52:10,543:INFO:Importing untrained model
2023-06-07 19:52:10,547:INFO:Gradient Boosting Regressor Imported successfully
2023-06-07 19:52:10,556:INFO:Starting cross validation
2023-06-07 19:52:10,557:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 19:52:11,994:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.51s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-07 19:52:12,095:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.61s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-07 19:52:12,106:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.64s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-07 19:52:12,139:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.62s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-07 19:52:15,459:INFO:Calculating mean and std
2023-06-07 19:52:15,461:INFO:Creating metrics dataframe
2023-06-07 19:52:15,855:INFO:Uploading results into container
2023-06-07 19:52:15,856:INFO:Uploading model into container now
2023-06-07 19:52:15,856:INFO:_master_model_container: 16
2023-06-07 19:52:15,856:INFO:_display_container: 2
2023-06-07 19:52:15,857:INFO:GradientBoostingRegressor(random_state=123)
2023-06-07 19:52:15,857:INFO:create_model() successfully completed......................................
2023-06-07 19:52:15,984:INFO:SubProcess create_model() end ==================================
2023-06-07 19:52:15,984:INFO:Creating metrics dataframe
2023-06-07 19:52:16,009:INFO:Initializing Light Gradient Boosting Machine
2023-06-07 19:52:16,009:INFO:Total runtime is 2.121681781609853 minutes
2023-06-07 19:52:16,018:INFO:SubProcess create_model() called ==================================
2023-06-07 19:52:16,018:INFO:Initializing create_model()
2023-06-07 19:52:16,018:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AFF3DE2F50>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002AFF3DE2320>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 19:52:16,019:INFO:Checking exceptions
2023-06-07 19:52:16,019:INFO:Importing libraries
2023-06-07 19:52:16,020:INFO:Copying training dataset
2023-06-07 19:52:16,081:INFO:Defining folds
2023-06-07 19:52:16,082:INFO:Declaring metric variables
2023-06-07 19:52:16,087:INFO:Importing untrained model
2023-06-07 19:52:16,093:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-07 19:52:16,107:INFO:Starting cross validation
2023-06-07 19:52:16,109:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 19:52:23,231:INFO:Calculating mean and std
2023-06-07 19:52:23,232:INFO:Creating metrics dataframe
2023-06-07 19:52:23,626:INFO:Uploading results into container
2023-06-07 19:52:23,627:INFO:Uploading model into container now
2023-06-07 19:52:23,627:INFO:_master_model_container: 17
2023-06-07 19:52:23,627:INFO:_display_container: 2
2023-06-07 19:52:23,628:INFO:LGBMRegressor(random_state=123)
2023-06-07 19:52:23,628:INFO:create_model() successfully completed......................................
2023-06-07 19:52:23,750:INFO:SubProcess create_model() end ==================================
2023-06-07 19:52:23,751:INFO:Creating metrics dataframe
2023-06-07 19:52:23,770:INFO:Initializing Dummy Regressor
2023-06-07 19:52:23,770:INFO:Total runtime is 2.251032503445943 minutes
2023-06-07 19:52:23,775:INFO:SubProcess create_model() called ==================================
2023-06-07 19:52:23,776:INFO:Initializing create_model()
2023-06-07 19:52:23,776:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AFF3DE2F50>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002AFF3DE2320>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 19:52:23,776:INFO:Checking exceptions
2023-06-07 19:52:23,776:INFO:Importing libraries
2023-06-07 19:52:23,777:INFO:Copying training dataset
2023-06-07 19:52:23,831:INFO:Defining folds
2023-06-07 19:52:23,832:INFO:Declaring metric variables
2023-06-07 19:52:23,839:INFO:Importing untrained model
2023-06-07 19:52:23,845:INFO:Dummy Regressor Imported successfully
2023-06-07 19:52:23,854:INFO:Starting cross validation
2023-06-07 19:52:23,856:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 19:52:28,002:INFO:Calculating mean and std
2023-06-07 19:52:28,004:INFO:Creating metrics dataframe
2023-06-07 19:52:28,401:INFO:Uploading results into container
2023-06-07 19:52:28,402:INFO:Uploading model into container now
2023-06-07 19:52:28,403:INFO:_master_model_container: 18
2023-06-07 19:52:28,404:INFO:_display_container: 2
2023-06-07 19:52:28,404:INFO:DummyRegressor()
2023-06-07 19:52:28,404:INFO:create_model() successfully completed......................................
2023-06-07 19:52:28,527:INFO:SubProcess create_model() end ==================================
2023-06-07 19:52:28,527:INFO:Creating metrics dataframe
2023-06-07 19:52:28,562:INFO:Initializing create_model()
2023-06-07 19:52:28,563:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AFF3DE2F50>, estimator=RandomForestRegressor(n_jobs=-1, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-07 19:52:28,563:INFO:Checking exceptions
2023-06-07 19:52:28,568:INFO:Importing libraries
2023-06-07 19:52:28,569:INFO:Copying training dataset
2023-06-07 19:52:28,625:INFO:Defining folds
2023-06-07 19:52:28,625:INFO:Declaring metric variables
2023-06-07 19:52:28,625:INFO:Importing untrained model
2023-06-07 19:52:28,625:INFO:Declaring custom model
2023-06-07 19:52:28,626:INFO:Random Forest Regressor Imported successfully
2023-06-07 19:52:28,628:INFO:Cross validation set to False
2023-06-07 19:52:28,628:INFO:Fitting Model
2023-06-07 19:52:29,717:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2023-06-07 19:52:29,717:INFO:create_model() successfully completed......................................
2023-06-07 19:52:29,885:INFO:_master_model_container: 18
2023-06-07 19:52:29,885:INFO:_display_container: 2
2023-06-07 19:52:29,886:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2023-06-07 19:52:29,886:INFO:compare_models() successfully completed......................................
2023-06-07 19:52:31,301:INFO:Initializing plot_model()
2023-06-07 19:52:31,302:INFO:plot_model(plot=residuals, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=RandomForestRegressor(n_jobs=-1, random_state=123), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AFF3DE2F50>, system=True)
2023-06-07 19:52:31,303:INFO:Checking exceptions
2023-06-07 19:52:31,387:INFO:Preloading libraries
2023-06-07 19:52:31,660:INFO:Copying training dataset
2023-06-07 19:52:31,660:INFO:Plot type: residuals
2023-06-07 19:52:32,072:INFO:Fitting Model
2023-06-07 19:52:33,488:INFO:Scoring test/hold-out set
2023-06-07 19:52:35,704:INFO:Visual Rendered Successfully
2023-06-07 19:52:35,832:INFO:plot_model() successfully completed......................................
2023-06-07 19:52:36,007:INFO:Initializing create_model()
2023-06-07 19:52:36,007:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AFF3DE2F50>, estimator=lightgbm, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-07 19:52:36,007:INFO:Checking exceptions
2023-06-07 19:52:36,051:INFO:Importing libraries
2023-06-07 19:52:36,052:INFO:Copying training dataset
2023-06-07 19:52:36,158:INFO:Defining folds
2023-06-07 19:52:36,158:INFO:Declaring metric variables
2023-06-07 19:52:36,163:INFO:Importing untrained model
2023-06-07 19:52:36,169:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-07 19:52:36,180:INFO:Starting cross validation
2023-06-07 19:52:36,182:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 19:52:40,627:INFO:Calculating mean and std
2023-06-07 19:52:40,628:INFO:Creating metrics dataframe
2023-06-07 19:52:40,639:INFO:Finalizing model
2023-06-07 19:52:42,074:INFO:Uploading results into container
2023-06-07 19:52:42,076:INFO:Uploading model into container now
2023-06-07 19:52:42,090:INFO:_master_model_container: 19
2023-06-07 19:52:42,091:INFO:_display_container: 3
2023-06-07 19:52:42,092:INFO:LGBMRegressor(random_state=123)
2023-06-07 19:52:42,092:INFO:create_model() successfully completed......................................
2023-06-07 19:52:42,437:INFO:Initializing plot_model()
2023-06-07 19:52:42,438:INFO:plot_model(plot=residuals, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LGBMRegressor(random_state=123), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AFF3DE2F50>, system=True)
2023-06-07 19:52:42,438:INFO:Checking exceptions
2023-06-07 19:52:42,491:INFO:Preloading libraries
2023-06-07 19:52:42,506:INFO:Copying training dataset
2023-06-07 19:52:42,506:INFO:Plot type: residuals
2023-06-07 19:52:42,895:INFO:Fitting Model
2023-06-07 19:52:43,163:INFO:Scoring test/hold-out set
2023-06-07 19:52:44,535:INFO:Visual Rendered Successfully
2023-06-07 19:52:44,666:INFO:plot_model() successfully completed......................................
2023-06-07 19:52:44,720:INFO:Initializing predict_model()
2023-06-07 19:52:44,721:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AFF3DE2F50>, estimator=LGBMRegressor(random_state=123), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AFBFA1FAC0>)
2023-06-07 19:52:44,721:INFO:Checking exceptions
2023-06-07 19:52:44,721:INFO:Preloading libraries
2023-06-07 19:52:45,178:INFO:Initializing evaluate_model()
2023-06-07 19:52:45,178:INFO:evaluate_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AFF3DE2F50>, estimator=LGBMRegressor(random_state=123), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-07 19:52:45,231:INFO:Initializing plot_model()
2023-06-07 19:52:45,231:INFO:plot_model(plot=pipeline, fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LGBMRegressor(random_state=123), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AFF3DE2F50>, system=True)
2023-06-07 19:52:45,231:INFO:Checking exceptions
2023-06-07 19:52:45,258:INFO:Preloading libraries
2023-06-07 19:52:45,271:INFO:Copying training dataset
2023-06-07 19:52:45,271:INFO:Plot type: pipeline
2023-06-07 19:52:45,561:INFO:Visual Rendered Successfully
2023-06-07 19:52:45,705:INFO:plot_model() successfully completed......................................
2023-06-07 19:52:45,950:INFO:Initializing predict_model()
2023-06-07 19:52:45,951:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AFF3DE2F50>, estimator=LGBMRegressor(random_state=123), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AFBEC7EC20>)
2023-06-07 19:52:45,951:INFO:Checking exceptions
2023-06-07 19:52:45,951:INFO:Preloading libraries
2023-06-07 19:52:45,955:INFO:Set up data.
2023-06-07 19:52:46,028:INFO:Set up index.
2023-06-07 19:52:46,748:INFO:Initializing predict_model()
2023-06-07 19:52:46,748:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AFF3DE2F50>, estimator=LGBMRegressor(random_state=123), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AFBE63FA30>)
2023-06-07 19:52:46,749:INFO:Checking exceptions
2023-06-07 19:52:46,749:INFO:Preloading libraries
2023-06-07 19:52:46,753:INFO:Set up data.
2023-06-07 19:52:46,777:INFO:Set up index.
2023-06-07 19:52:47,178:INFO:Initializing plot_model()
2023-06-07 19:52:47,178:INFO:plot_model(plot=residuals, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=              data  codigo_ibge   latitude  longitude  T2M_RANGE         TS  \
100001  2003-12-23      4122602 -23.412001 -52.765900       7.94  24.090000   
100002  2003-12-24      4122602 -23.412001 -52.765900       8.59  22.309999   
100003  2003-12-25      4122602 -23.412001 -52.765900       9.87  20.430000   
100004  2003-12-26      4122602 -23.412001 -52.765900      11.27  21.510000   
100005  2003-12-27      4122602 -23.412001 -52.765900      11.19  23.110001   
...            ...          ...        ...        ...        ...        ...   
100994  2003-09-12      4122909 -23.607401 -49.635399      14.24  12.900000   
100995  2003-09-13      4122909 -23.607401 -49.635399       8.35  13.220000   
100996  2003-09-14      4122909 -23.607401 -49.635399      14.58  15.240000   
100997  2003-09-15      4122909 -23.607401 -49.635399      14.92  15.760000   
100998  2003-09-16      4122909 -23.607401 -49.635399      10.76  17.250000   

           T2MDEW     T2MWET    T2M_MAX    T2M_MIN  ...  ALLSKY_SFC_SW_DWN  \
100001  21.540001  22.840000  28.440001  20.500000  ...          26.139999   
100002  17.760000  20.040001  26.770000  18.180000  ...          28.530001   
100003  15.120000  17.799999  25.440001  15.580000  ...          30.950001   
100004  16.870001  19.200001  27.139999  15.870000  ...          27.540001   
100005  18.510000  20.879999  28.750000  17.559999  ...          28.809999   
...           ...        ...        ...        ...  ...                ...   
100994   6.170000   9.820000  20.760000   6.520000  ...          18.750000   
100995   9.730000  11.560000  18.420000  10.070000  ...           6.300000   
100996  10.060000  12.730000  23.510000   8.930000  ...          20.180000   
100997  11.260000  13.720000  23.650000   8.730000  ...          20.049999   
100998  13.660000  15.620000  23.620001  12.870000  ...          10.260000   

        CLRSKY_SFC_SW_DWN  TOA_SW_DWN  ALLSKY_SFC_PAR_TOT  CLRSKY_SFC_PAR_TOT  \
100001          30.900000   42.790001          142.169998          164.479996   
100002          31.170000   42.790001          152.050003          164.210007   
100003          32.119999   42.790001          161.559998          166.199997   
100004          31.150000   42.790001          147.039993          164.360001   
100005          31.070000   42.790001          153.779999          163.729996   
...                   ...         ...                 ...                 ...   
100994          23.670000   32.130001           95.959999          119.519997   
100995          20.670000   32.310001           35.820000          105.290001   
100996          24.280001   32.500000          103.080002          123.190002   
100997          23.690001   32.680000          105.209999          123.699997   
100998          20.190001   32.860001           55.389999          102.010002   

        ALLSKY_SFC_UVA  ALLSKY_SFC_UVB  ALLSKY_SFC_UV_INDEX         PS  \
100001       18.950001            0.57                 2.98  96.449997   
100002       20.120001            0.59                 3.13  96.919998   
100003       21.200001            0.62                 3.27  97.110001   
100004       19.559999            0.59                 3.07  96.800003   
100005       20.219999            0.59                 3.07  96.470001   
...                ...             ...                  ...        ...   
100994       12.630000            0.32                 1.62  95.089996   
100995        4.960000            0.12                 0.64  95.080002   
100996       13.460000            0.32                 1.61  95.230003   
100997       13.910000            0.35                 1.79  94.970001   
100998        7.070000            0.17                 0.85  94.889999   

        prediction_label  
100001         96.690697  
100002         96.960472  
100003         97.090677  
100004         96.809191  
100005         96.532163  
...                  ...  
100994         95.072709  
100995         95.085109  
100996         95.212423  
100997         94.803890  
100998         94.658251  

[998 rows x 39 columns], feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AFF3DE2F50>, system=True)
2023-06-07 19:52:47,178:INFO:Checking exceptions
2023-06-07 19:54:12,082:INFO:Initializing tune_model()
2023-06-07 19:54:12,082:INFO:tune_model(estimator=LGBMRegressor(random_state=123), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AFF3DE2F50>)
2023-06-07 19:54:12,083:INFO:Checking exceptions
2023-06-07 19:54:12,137:INFO:Copying training dataset
2023-06-07 19:54:12,192:INFO:Checking base model
2023-06-07 19:54:12,192:INFO:Base model : Light Gradient Boosting Machine
2023-06-07 19:54:12,197:INFO:Declaring metric variables
2023-06-07 19:54:12,206:INFO:Defining Hyperparameters
2023-06-07 19:54:12,435:INFO:Tuning with n_jobs=-1
2023-06-07 19:54:12,436:INFO:Initializing RandomizedSearchCV
2023-06-07 19:55:17,467:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.68s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-07 19:55:18,268:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.71s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-07 19:55:21,030:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.66s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-07 19:55:22,290:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.78s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-07 19:55:23,544:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.61s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-07 19:58:30,782:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-07 19:58:30,782:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-07 19:58:30,782:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-07 19:58:30,783:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-07 19:58:32,197:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-07 19:58:55,317:INFO:PyCaret RegressionExperiment
2023-06-07 19:58:55,317:INFO:Logging name: reg-default-name
2023-06-07 19:58:55,317:INFO:ML Usecase: MLUsecase.REGRESSION
2023-06-07 19:58:55,317:INFO:version 3.0.2
2023-06-07 19:58:55,317:INFO:Initializing setup()
2023-06-07 19:58:55,317:INFO:self.USI: ba23
2023-06-07 19:58:55,317:INFO:self._variable_keys: {'fold_shuffle_param', 'fold_generator', 'pipeline', 'y_train', '_available_plots', 'y_test', 'memory', '_ml_usecase', 'n_jobs_param', 'target_param', 'logging_param', 'X_train', 'log_plots_param', 'exp_id', 'idx', 'seed', 'transform_target_param', 'X_test', 'data', 'USI', 'exp_name_log', 'X', 'y', 'fold_groups_param', 'html_param', 'gpu_param', 'gpu_n_jobs_param'}
2023-06-07 19:58:55,317:INFO:Checking environment
2023-06-07 19:58:55,317:INFO:python_version: 3.10.9
2023-06-07 19:58:55,317:INFO:python_build: ('main', 'Mar  1 2023 18:18:15')
2023-06-07 19:58:55,317:INFO:machine: AMD64
2023-06-07 19:58:55,317:INFO:platform: Windows-10-10.0.19041-SP0
2023-06-07 19:58:55,317:INFO:Memory: svmem(total=6378106880, available=3104899072, percent=51.3, used=3273207808, free=3104899072)
2023-06-07 19:58:55,319:INFO:Physical Core: 4
2023-06-07 19:58:55,319:INFO:Logical Core: 8
2023-06-07 19:58:55,319:INFO:Checking libraries
2023-06-07 19:58:55,319:INFO:System:
2023-06-07 19:58:55,319:INFO:    python: 3.10.9 | packaged by Anaconda, Inc. | (main, Mar  1 2023, 18:18:15) [MSC v.1916 64 bit (AMD64)]
2023-06-07 19:58:55,319:INFO:executable: c:\Users\Crossddelta\anaconda3\python.exe
2023-06-07 19:58:55,319:INFO:   machine: Windows-10-10.0.19041-SP0
2023-06-07 19:58:55,319:INFO:PyCaret required dependencies:
2023-06-07 19:58:55,320:INFO:                 pip: 22.3.1
2023-06-07 19:58:55,320:INFO:          setuptools: 65.6.3
2023-06-07 19:58:55,320:INFO:             pycaret: 3.0.2
2023-06-07 19:58:55,320:INFO:             IPython: 8.10.0
2023-06-07 19:58:55,320:INFO:          ipywidgets: 7.6.5
2023-06-07 19:58:55,320:INFO:                tqdm: 4.64.1
2023-06-07 19:58:55,320:INFO:               numpy: 1.23.5
2023-06-07 19:58:55,320:INFO:              pandas: 1.5.3
2023-06-07 19:58:55,320:INFO:              jinja2: 3.1.2
2023-06-07 19:58:55,320:INFO:               scipy: 1.10.0
2023-06-07 19:58:55,320:INFO:              joblib: 1.2.0
2023-06-07 19:58:55,321:INFO:             sklearn: 1.2.1
2023-06-07 19:58:55,321:INFO:                pyod: 1.0.9
2023-06-07 19:58:55,321:INFO:            imblearn: 0.10.1
2023-06-07 19:58:55,321:INFO:   category_encoders: 2.6.1
2023-06-07 19:58:55,321:INFO:            lightgbm: 3.3.5
2023-06-07 19:58:55,321:INFO:               numba: 0.56.4
2023-06-07 19:58:55,321:INFO:            requests: 2.28.1
2023-06-07 19:58:55,321:INFO:          matplotlib: 3.7.0
2023-06-07 19:58:55,321:INFO:          scikitplot: 0.3.7
2023-06-07 19:58:55,321:INFO:         yellowbrick: 1.5
2023-06-07 19:58:55,322:INFO:              plotly: 5.9.0
2023-06-07 19:58:55,322:INFO:             kaleido: 0.2.1
2023-06-07 19:58:55,322:INFO:         statsmodels: 0.13.5
2023-06-07 19:58:55,322:INFO:              sktime: 0.17.0
2023-06-07 19:58:55,322:INFO:               tbats: 1.1.3
2023-06-07 19:58:55,322:INFO:            pmdarima: 2.0.3
2023-06-07 19:58:55,322:INFO:              psutil: 5.9.0
2023-06-07 19:58:55,322:INFO:PyCaret optional dependencies:
2023-06-07 19:58:55,342:INFO:                shap: Not installed
2023-06-07 19:58:55,343:INFO:           interpret: Not installed
2023-06-07 19:58:55,343:INFO:                umap: Not installed
2023-06-07 19:58:55,343:INFO:    pandas_profiling: Not installed
2023-06-07 19:58:55,343:INFO:  explainerdashboard: Not installed
2023-06-07 19:58:55,343:INFO:             autoviz: Not installed
2023-06-07 19:58:55,343:INFO:           fairlearn: Not installed
2023-06-07 19:58:55,343:INFO:             xgboost: Not installed
2023-06-07 19:58:55,343:INFO:            catboost: Not installed
2023-06-07 19:58:55,343:INFO:              kmodes: Not installed
2023-06-07 19:58:55,343:INFO:             mlxtend: Not installed
2023-06-07 19:58:55,343:INFO:       statsforecast: Not installed
2023-06-07 19:58:55,343:INFO:        tune_sklearn: Not installed
2023-06-07 19:58:55,343:INFO:                 ray: Not installed
2023-06-07 19:58:55,344:INFO:            hyperopt: Not installed
2023-06-07 19:58:55,344:INFO:              optuna: Not installed
2023-06-07 19:58:55,344:INFO:               skopt: Not installed
2023-06-07 19:58:55,344:INFO:              mlflow: Not installed
2023-06-07 19:58:55,344:INFO:              gradio: Not installed
2023-06-07 19:58:55,344:INFO:             fastapi: Not installed
2023-06-07 19:58:55,344:INFO:             uvicorn: Not installed
2023-06-07 19:58:55,344:INFO:              m2cgen: Not installed
2023-06-07 19:58:55,344:INFO:           evidently: Not installed
2023-06-07 19:58:55,344:INFO:               fugue: Not installed
2023-06-07 19:58:55,344:INFO:           streamlit: Not installed
2023-06-07 19:58:55,344:INFO:             prophet: Not installed
2023-06-07 19:58:55,344:INFO:None
2023-06-07 19:58:55,344:INFO:Set up data.
2023-06-07 19:58:55,447:INFO:Set up train/test split.
2023-06-07 19:58:55,509:INFO:Set up index.
2023-06-07 19:58:55,512:INFO:Set up folding strategy.
2023-06-07 19:58:55,513:INFO:Assigning column types.
2023-06-07 19:58:55,563:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-07 19:58:55,563:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-07 19:58:55,572:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-07 19:58:55,579:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-07 19:58:55,729:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 19:58:55,805:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-07 19:58:55,807:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:58:56,132:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:58:56,133:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-07 19:58:56,140:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-07 19:58:56,147:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-07 19:58:56,274:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 19:58:56,341:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-07 19:58:56,341:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:58:56,342:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:58:56,342:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-06-07 19:58:56,349:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-07 19:58:56,357:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-07 19:58:56,487:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 19:58:56,557:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-07 19:58:56,558:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:58:56,558:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:58:56,566:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-07 19:58:56,574:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-07 19:58:56,745:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 19:58:56,821:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-07 19:58:56,821:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:58:56,822:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:58:56,822:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-06-07 19:58:56,837:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-07 19:58:56,966:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 19:58:57,035:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-07 19:58:57,036:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:58:57,036:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:58:57,049:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-07 19:58:57,180:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 19:58:57,250:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-07 19:58:57,252:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:58:57,253:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:58:57,253:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-06-07 19:58:57,440:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 19:58:57,508:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-07 19:58:57,509:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:58:57,510:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:58:57,650:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 19:58:57,719:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-07 19:58:57,720:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:58:57,720:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:58:57,721:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-07 19:58:57,859:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 19:58:57,930:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:58:57,931:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:58:58,080:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 19:58:58,152:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:58:58,152:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:58:58,153:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-06-07 19:58:58,364:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:58:58,364:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:58:58,579:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:58:58,579:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:58:58,583:INFO:Preparing preprocessing pipeline...
2023-06-07 19:58:58,583:INFO:Set up simple imputation.
2023-06-07 19:58:58,606:INFO:Set up encoding of categorical features.
2023-06-07 19:58:58,942:INFO:Finished creating preprocessing pipeline.
2023-06-07 19:58:58,958:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\CROSSD~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['codigo_ibge', 'latitude',
                                             'longitude', 'T2M_RANGE', 'TS',
                                             'T2MDEW', 'T2MWET', 'T2M_MAX',
                                             'T2M_MIN', 'T2M', 'QV2M', 'RH2M',
                                             'PRECTOTCORR', 'WS2M', 'WS2M_MAX',
                                             'WS2M_MIN', 'WS2M_RANGE', 'WS10M',
                                             'WS10M_MAX', 'WS10M_MIN',
                                             'WS10M_RANGE'...
                                             'WS50M_RANGE', 'GWETTOP',
                                             'GWETROOT', 'GWETPROF',
                                             'ALLSKY_SFC_SW_DWN',
                                             'CLRSKY_SFC_SW_DWN', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['data'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rest_encoding',
                 TransformerWrapper(include=['data'],
                                    transformer=TargetEncoder(cols=['data'],
                                                              handle_missing='return_nan')))])
2023-06-07 19:58:58,958:INFO:Creating final display dataframe.
2023-06-07 19:58:59,256:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target                PS
2                   Target type        Regression
3           Original data shape       (80000, 38)
4        Transformed data shape       (80000, 38)
5   Transformed train set shape       (56000, 38)
6    Transformed test set shape       (24000, 38)
7              Numeric features                36
8          Categorical features                 1
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15               Fold Generator             KFold
16                  Fold Number                10
17                     CPU Jobs                -1
18                      Use GPU             False
19               Log Experiment             False
20              Experiment Name  reg-default-name
21                          USI              ba23
2023-06-07 19:58:59,485:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:58:59,486:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:58:59,699:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:58:59,699:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 19:58:59,701:INFO:setup() successfully completed in 4.81s...............
2023-06-07 19:59:00,100:INFO:Initializing compare_models()
2023-06-07 19:59:00,101:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFF7AF6D0>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x0000022BFF7AF6D0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2023-06-07 19:59:00,101:INFO:Checking exceptions
2023-06-07 19:59:00,130:INFO:Preparing display monitor
2023-06-07 19:59:00,174:INFO:Initializing Linear Regression
2023-06-07 19:59:00,175:INFO:Total runtime is 1.6689300537109375e-05 minutes
2023-06-07 19:59:00,183:INFO:SubProcess create_model() called ==================================
2023-06-07 19:59:00,184:INFO:Initializing create_model()
2023-06-07 19:59:00,184:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFF7AF6D0>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022BC087CBE0>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 19:59:00,185:INFO:Checking exceptions
2023-06-07 19:59:00,185:INFO:Importing libraries
2023-06-07 19:59:00,186:INFO:Copying training dataset
2023-06-07 19:59:00,283:INFO:Defining folds
2023-06-07 19:59:00,283:INFO:Declaring metric variables
2023-06-07 19:59:00,289:INFO:Importing untrained model
2023-06-07 19:59:00,294:INFO:Linear Regression Imported successfully
2023-06-07 19:59:00,305:INFO:Starting cross validation
2023-06-07 19:59:00,316:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 19:59:14,269:INFO:Calculating mean and std
2023-06-07 19:59:14,271:INFO:Creating metrics dataframe
2023-06-07 19:59:14,734:INFO:Uploading results into container
2023-06-07 19:59:14,736:INFO:Uploading model into container now
2023-06-07 19:59:14,736:INFO:_master_model_container: 1
2023-06-07 19:59:14,736:INFO:_display_container: 2
2023-06-07 19:59:14,737:INFO:LinearRegression(n_jobs=-1)
2023-06-07 19:59:14,737:INFO:create_model() successfully completed......................................
2023-06-07 19:59:14,863:INFO:SubProcess create_model() end ==================================
2023-06-07 19:59:14,863:INFO:Creating metrics dataframe
2023-06-07 19:59:14,875:INFO:Initializing Lasso Regression
2023-06-07 19:59:14,875:INFO:Total runtime is 0.2450061837832133 minutes
2023-06-07 19:59:14,880:INFO:SubProcess create_model() called ==================================
2023-06-07 19:59:14,880:INFO:Initializing create_model()
2023-06-07 19:59:14,880:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFF7AF6D0>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022BC087CBE0>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 19:59:14,880:INFO:Checking exceptions
2023-06-07 19:59:14,881:INFO:Importing libraries
2023-06-07 19:59:14,881:INFO:Copying training dataset
2023-06-07 19:59:14,937:INFO:Defining folds
2023-06-07 19:59:14,937:INFO:Declaring metric variables
2023-06-07 19:59:14,942:INFO:Importing untrained model
2023-06-07 19:59:14,948:INFO:Lasso Regression Imported successfully
2023-06-07 19:59:14,957:INFO:Starting cross validation
2023-06-07 19:59:14,959:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 19:59:19,546:INFO:Calculating mean and std
2023-06-07 19:59:19,548:INFO:Creating metrics dataframe
2023-06-07 19:59:20,013:INFO:Uploading results into container
2023-06-07 19:59:20,014:INFO:Uploading model into container now
2023-06-07 19:59:20,015:INFO:_master_model_container: 2
2023-06-07 19:59:20,015:INFO:_display_container: 2
2023-06-07 19:59:20,016:INFO:Lasso(random_state=123)
2023-06-07 19:59:20,016:INFO:create_model() successfully completed......................................
2023-06-07 19:59:20,136:INFO:SubProcess create_model() end ==================================
2023-06-07 19:59:20,136:INFO:Creating metrics dataframe
2023-06-07 19:59:20,150:INFO:Initializing Ridge Regression
2023-06-07 19:59:20,150:INFO:Total runtime is 0.3329208691914876 minutes
2023-06-07 19:59:20,156:INFO:SubProcess create_model() called ==================================
2023-06-07 19:59:20,156:INFO:Initializing create_model()
2023-06-07 19:59:20,156:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFF7AF6D0>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022BC087CBE0>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 19:59:20,156:INFO:Checking exceptions
2023-06-07 19:59:20,156:INFO:Importing libraries
2023-06-07 19:59:20,157:INFO:Copying training dataset
2023-06-07 19:59:20,211:INFO:Defining folds
2023-06-07 19:59:20,212:INFO:Declaring metric variables
2023-06-07 19:59:20,217:INFO:Importing untrained model
2023-06-07 19:59:20,223:INFO:Ridge Regression Imported successfully
2023-06-07 19:59:20,232:INFO:Starting cross validation
2023-06-07 19:59:20,234:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 19:59:24,810:INFO:Calculating mean and std
2023-06-07 19:59:24,812:INFO:Creating metrics dataframe
2023-06-07 19:59:25,309:INFO:Uploading results into container
2023-06-07 19:59:25,310:INFO:Uploading model into container now
2023-06-07 19:59:25,311:INFO:_master_model_container: 3
2023-06-07 19:59:25,311:INFO:_display_container: 2
2023-06-07 19:59:25,311:INFO:Ridge(random_state=123)
2023-06-07 19:59:25,311:INFO:create_model() successfully completed......................................
2023-06-07 19:59:25,431:INFO:SubProcess create_model() end ==================================
2023-06-07 19:59:25,431:INFO:Creating metrics dataframe
2023-06-07 19:59:25,444:INFO:Initializing Elastic Net
2023-06-07 19:59:25,444:INFO:Total runtime is 0.42115702231725055 minutes
2023-06-07 19:59:25,449:INFO:SubProcess create_model() called ==================================
2023-06-07 19:59:25,450:INFO:Initializing create_model()
2023-06-07 19:59:25,450:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFF7AF6D0>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022BC087CBE0>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 19:59:25,450:INFO:Checking exceptions
2023-06-07 19:59:25,450:INFO:Importing libraries
2023-06-07 19:59:25,450:INFO:Copying training dataset
2023-06-07 19:59:25,507:INFO:Defining folds
2023-06-07 19:59:25,507:INFO:Declaring metric variables
2023-06-07 19:59:25,513:INFO:Importing untrained model
2023-06-07 19:59:25,519:INFO:Elastic Net Imported successfully
2023-06-07 19:59:25,529:INFO:Starting cross validation
2023-06-07 19:59:25,532:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 19:59:30,123:INFO:Calculating mean and std
2023-06-07 19:59:30,124:INFO:Creating metrics dataframe
2023-06-07 19:59:30,582:INFO:Uploading results into container
2023-06-07 19:59:30,583:INFO:Uploading model into container now
2023-06-07 19:59:30,584:INFO:_master_model_container: 4
2023-06-07 19:59:30,585:INFO:_display_container: 2
2023-06-07 19:59:30,586:INFO:ElasticNet(random_state=123)
2023-06-07 19:59:30,586:INFO:create_model() successfully completed......................................
2023-06-07 19:59:30,707:INFO:SubProcess create_model() end ==================================
2023-06-07 19:59:30,707:INFO:Creating metrics dataframe
2023-06-07 19:59:30,721:INFO:Initializing Least Angle Regression
2023-06-07 19:59:30,722:INFO:Total runtime is 0.5091332713762919 minutes
2023-06-07 19:59:30,726:INFO:SubProcess create_model() called ==================================
2023-06-07 19:59:30,727:INFO:Initializing create_model()
2023-06-07 19:59:30,727:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFF7AF6D0>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022BC087CBE0>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 19:59:30,727:INFO:Checking exceptions
2023-06-07 19:59:30,727:INFO:Importing libraries
2023-06-07 19:59:30,727:INFO:Copying training dataset
2023-06-07 19:59:30,783:INFO:Defining folds
2023-06-07 19:59:30,784:INFO:Declaring metric variables
2023-06-07 19:59:30,791:INFO:Importing untrained model
2023-06-07 19:59:30,796:INFO:Least Angle Regression Imported successfully
2023-06-07 19:59:30,807:INFO:Starting cross validation
2023-06-07 19:59:30,809:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 19:59:35,435:INFO:Calculating mean and std
2023-06-07 19:59:35,436:INFO:Creating metrics dataframe
2023-06-07 19:59:35,900:INFO:Uploading results into container
2023-06-07 19:59:35,902:INFO:Uploading model into container now
2023-06-07 19:59:35,903:INFO:_master_model_container: 5
2023-06-07 19:59:35,903:INFO:_display_container: 2
2023-06-07 19:59:35,904:INFO:Lars(random_state=123)
2023-06-07 19:59:35,904:INFO:create_model() successfully completed......................................
2023-06-07 19:59:36,024:INFO:SubProcess create_model() end ==================================
2023-06-07 19:59:36,024:INFO:Creating metrics dataframe
2023-06-07 19:59:36,038:INFO:Initializing Lasso Least Angle Regression
2023-06-07 19:59:36,038:INFO:Total runtime is 0.5977307796478272 minutes
2023-06-07 19:59:36,043:INFO:SubProcess create_model() called ==================================
2023-06-07 19:59:36,044:INFO:Initializing create_model()
2023-06-07 19:59:36,044:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFF7AF6D0>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022BC087CBE0>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 19:59:36,044:INFO:Checking exceptions
2023-06-07 19:59:36,044:INFO:Importing libraries
2023-06-07 19:59:36,044:INFO:Copying training dataset
2023-06-07 19:59:36,100:INFO:Defining folds
2023-06-07 19:59:36,100:INFO:Declaring metric variables
2023-06-07 19:59:36,107:INFO:Importing untrained model
2023-06-07 19:59:36,113:INFO:Lasso Least Angle Regression Imported successfully
2023-06-07 19:59:36,122:INFO:Starting cross validation
2023-06-07 19:59:36,124:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 19:59:40,727:INFO:Calculating mean and std
2023-06-07 19:59:40,728:INFO:Creating metrics dataframe
2023-06-07 19:59:41,194:INFO:Uploading results into container
2023-06-07 19:59:41,195:INFO:Uploading model into container now
2023-06-07 19:59:41,196:INFO:_master_model_container: 6
2023-06-07 19:59:41,196:INFO:_display_container: 2
2023-06-07 19:59:41,196:INFO:LassoLars(random_state=123)
2023-06-07 19:59:41,197:INFO:create_model() successfully completed......................................
2023-06-07 19:59:41,316:INFO:SubProcess create_model() end ==================================
2023-06-07 19:59:41,316:INFO:Creating metrics dataframe
2023-06-07 19:59:41,333:INFO:Initializing Orthogonal Matching Pursuit
2023-06-07 19:59:41,334:INFO:Total runtime is 0.6859873533248901 minutes
2023-06-07 19:59:41,340:INFO:SubProcess create_model() called ==================================
2023-06-07 19:59:41,340:INFO:Initializing create_model()
2023-06-07 19:59:41,340:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFF7AF6D0>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022BC087CBE0>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 19:59:41,341:INFO:Checking exceptions
2023-06-07 19:59:41,341:INFO:Importing libraries
2023-06-07 19:59:41,341:INFO:Copying training dataset
2023-06-07 19:59:41,397:INFO:Defining folds
2023-06-07 19:59:41,397:INFO:Declaring metric variables
2023-06-07 19:59:41,404:INFO:Importing untrained model
2023-06-07 19:59:41,410:INFO:Orthogonal Matching Pursuit Imported successfully
2023-06-07 19:59:41,418:INFO:Starting cross validation
2023-06-07 19:59:41,421:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 19:59:46,117:INFO:Calculating mean and std
2023-06-07 19:59:46,119:INFO:Creating metrics dataframe
2023-06-07 19:59:46,579:INFO:Uploading results into container
2023-06-07 19:59:46,580:INFO:Uploading model into container now
2023-06-07 19:59:46,580:INFO:_master_model_container: 7
2023-06-07 19:59:46,581:INFO:_display_container: 2
2023-06-07 19:59:46,581:INFO:OrthogonalMatchingPursuit()
2023-06-07 19:59:46,582:INFO:create_model() successfully completed......................................
2023-06-07 19:59:46,701:INFO:SubProcess create_model() end ==================================
2023-06-07 19:59:46,701:INFO:Creating metrics dataframe
2023-06-07 19:59:46,716:INFO:Initializing Bayesian Ridge
2023-06-07 19:59:46,716:INFO:Total runtime is 0.7756901065508525 minutes
2023-06-07 19:59:46,722:INFO:SubProcess create_model() called ==================================
2023-06-07 19:59:46,723:INFO:Initializing create_model()
2023-06-07 19:59:46,723:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFF7AF6D0>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022BC087CBE0>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 19:59:46,723:INFO:Checking exceptions
2023-06-07 19:59:46,724:INFO:Importing libraries
2023-06-07 19:59:46,724:INFO:Copying training dataset
2023-06-07 19:59:46,779:INFO:Defining folds
2023-06-07 19:59:46,779:INFO:Declaring metric variables
2023-06-07 19:59:46,784:INFO:Importing untrained model
2023-06-07 19:59:46,791:INFO:Bayesian Ridge Imported successfully
2023-06-07 19:59:46,800:INFO:Starting cross validation
2023-06-07 19:59:46,803:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 19:59:51,398:INFO:Calculating mean and std
2023-06-07 19:59:51,399:INFO:Creating metrics dataframe
2023-06-07 19:59:51,856:INFO:Uploading results into container
2023-06-07 19:59:51,858:INFO:Uploading model into container now
2023-06-07 19:59:51,858:INFO:_master_model_container: 8
2023-06-07 19:59:51,858:INFO:_display_container: 2
2023-06-07 19:59:51,859:INFO:BayesianRidge()
2023-06-07 19:59:51,859:INFO:create_model() successfully completed......................................
2023-06-07 19:59:51,980:INFO:SubProcess create_model() end ==================================
2023-06-07 19:59:51,981:INFO:Creating metrics dataframe
2023-06-07 19:59:51,997:INFO:Initializing Passive Aggressive Regressor
2023-06-07 19:59:51,997:INFO:Total runtime is 0.863706914583842 minutes
2023-06-07 19:59:52,002:INFO:SubProcess create_model() called ==================================
2023-06-07 19:59:52,003:INFO:Initializing create_model()
2023-06-07 19:59:52,003:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFF7AF6D0>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022BC087CBE0>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 19:59:52,003:INFO:Checking exceptions
2023-06-07 19:59:52,004:INFO:Importing libraries
2023-06-07 19:59:52,004:INFO:Copying training dataset
2023-06-07 19:59:52,059:INFO:Defining folds
2023-06-07 19:59:52,060:INFO:Declaring metric variables
2023-06-07 19:59:52,064:INFO:Importing untrained model
2023-06-07 19:59:52,070:INFO:Passive Aggressive Regressor Imported successfully
2023-06-07 19:59:52,079:INFO:Starting cross validation
2023-06-07 19:59:52,082:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 19:59:56,886:INFO:Calculating mean and std
2023-06-07 19:59:56,888:INFO:Creating metrics dataframe
2023-06-07 19:59:57,366:INFO:Uploading results into container
2023-06-07 19:59:57,368:INFO:Uploading model into container now
2023-06-07 19:59:57,368:INFO:_master_model_container: 9
2023-06-07 19:59:57,369:INFO:_display_container: 2
2023-06-07 19:59:57,370:INFO:PassiveAggressiveRegressor(random_state=123)
2023-06-07 19:59:57,371:INFO:create_model() successfully completed......................................
2023-06-07 19:59:57,490:INFO:SubProcess create_model() end ==================================
2023-06-07 19:59:57,491:INFO:Creating metrics dataframe
2023-06-07 19:59:57,506:INFO:Initializing Huber Regressor
2023-06-07 19:59:57,507:INFO:Total runtime is 0.9555428663889567 minutes
2023-06-07 19:59:57,512:INFO:SubProcess create_model() called ==================================
2023-06-07 19:59:57,512:INFO:Initializing create_model()
2023-06-07 19:59:57,512:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFF7AF6D0>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022BC087CBE0>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 19:59:57,512:INFO:Checking exceptions
2023-06-07 19:59:57,513:INFO:Importing libraries
2023-06-07 19:59:57,513:INFO:Copying training dataset
2023-06-07 19:59:57,570:INFO:Defining folds
2023-06-07 19:59:57,570:INFO:Declaring metric variables
2023-06-07 19:59:57,577:INFO:Importing untrained model
2023-06-07 19:59:57,582:INFO:Huber Regressor Imported successfully
2023-06-07 19:59:57,591:INFO:Starting cross validation
2023-06-07 19:59:57,593:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 20:00:02,202:INFO:Calculating mean and std
2023-06-07 20:00:02,203:INFO:Creating metrics dataframe
2023-06-07 20:00:02,668:INFO:Uploading results into container
2023-06-07 20:00:02,669:INFO:Uploading model into container now
2023-06-07 20:00:02,670:INFO:_master_model_container: 10
2023-06-07 20:00:02,670:INFO:_display_container: 2
2023-06-07 20:00:02,671:INFO:HuberRegressor()
2023-06-07 20:00:02,671:INFO:create_model() successfully completed......................................
2023-06-07 20:00:02,793:INFO:SubProcess create_model() end ==================================
2023-06-07 20:00:02,794:INFO:Creating metrics dataframe
2023-06-07 20:00:02,811:INFO:Initializing K Neighbors Regressor
2023-06-07 20:00:02,811:INFO:Total runtime is 1.0439533750216166 minutes
2023-06-07 20:00:02,816:INFO:SubProcess create_model() called ==================================
2023-06-07 20:00:02,816:INFO:Initializing create_model()
2023-06-07 20:00:02,816:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFF7AF6D0>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022BC087CBE0>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 20:00:02,816:INFO:Checking exceptions
2023-06-07 20:00:02,816:INFO:Importing libraries
2023-06-07 20:00:02,817:INFO:Copying training dataset
2023-06-07 20:00:02,872:INFO:Defining folds
2023-06-07 20:00:02,872:INFO:Declaring metric variables
2023-06-07 20:00:02,877:INFO:Importing untrained model
2023-06-07 20:00:02,883:INFO:K Neighbors Regressor Imported successfully
2023-06-07 20:00:02,893:INFO:Starting cross validation
2023-06-07 20:00:02,895:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 20:00:14,489:INFO:Calculating mean and std
2023-06-07 20:00:14,491:INFO:Creating metrics dataframe
2023-06-07 20:00:14,964:INFO:Uploading results into container
2023-06-07 20:00:14,965:INFO:Uploading model into container now
2023-06-07 20:00:14,966:INFO:_master_model_container: 11
2023-06-07 20:00:14,966:INFO:_display_container: 2
2023-06-07 20:00:14,967:INFO:KNeighborsRegressor(n_jobs=-1)
2023-06-07 20:00:14,967:INFO:create_model() successfully completed......................................
2023-06-07 20:00:15,090:INFO:SubProcess create_model() end ==================================
2023-06-07 20:00:15,090:INFO:Creating metrics dataframe
2023-06-07 20:00:15,107:INFO:Initializing Decision Tree Regressor
2023-06-07 20:00:15,107:INFO:Total runtime is 1.2488841215769448 minutes
2023-06-07 20:00:15,114:INFO:SubProcess create_model() called ==================================
2023-06-07 20:00:15,115:INFO:Initializing create_model()
2023-06-07 20:00:15,115:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFF7AF6D0>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022BC087CBE0>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 20:00:15,115:INFO:Checking exceptions
2023-06-07 20:00:15,115:INFO:Importing libraries
2023-06-07 20:00:15,115:INFO:Copying training dataset
2023-06-07 20:00:15,170:INFO:Defining folds
2023-06-07 20:00:15,170:INFO:Declaring metric variables
2023-06-07 20:00:15,175:INFO:Importing untrained model
2023-06-07 20:00:15,181:INFO:Decision Tree Regressor Imported successfully
2023-06-07 20:00:15,219:INFO:Starting cross validation
2023-06-07 20:00:15,223:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 20:00:20,489:INFO:Calculating mean and std
2023-06-07 20:00:20,491:INFO:Creating metrics dataframe
2023-06-07 20:00:20,963:INFO:Uploading results into container
2023-06-07 20:00:20,964:INFO:Uploading model into container now
2023-06-07 20:00:20,965:INFO:_master_model_container: 12
2023-06-07 20:00:20,965:INFO:_display_container: 2
2023-06-07 20:00:20,966:INFO:DecisionTreeRegressor(random_state=123)
2023-06-07 20:00:20,966:INFO:create_model() successfully completed......................................
2023-06-07 20:00:21,088:INFO:SubProcess create_model() end ==================================
2023-06-07 20:00:21,088:INFO:Creating metrics dataframe
2023-06-07 20:00:21,105:INFO:Initializing Random Forest Regressor
2023-06-07 20:00:21,105:INFO:Total runtime is 1.3488501747449237 minutes
2023-06-07 20:00:21,110:INFO:SubProcess create_model() called ==================================
2023-06-07 20:00:21,110:INFO:Initializing create_model()
2023-06-07 20:00:21,110:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFF7AF6D0>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022BC087CBE0>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 20:00:21,110:INFO:Checking exceptions
2023-06-07 20:00:21,111:INFO:Importing libraries
2023-06-07 20:00:21,111:INFO:Copying training dataset
2023-06-07 20:00:21,168:INFO:Defining folds
2023-06-07 20:00:21,168:INFO:Declaring metric variables
2023-06-07 20:00:21,174:INFO:Importing untrained model
2023-06-07 20:00:21,180:INFO:Random Forest Regressor Imported successfully
2023-06-07 20:00:21,191:INFO:Starting cross validation
2023-06-07 20:00:21,193:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 20:00:33,640:INFO:Calculating mean and std
2023-06-07 20:00:33,651:INFO:Creating metrics dataframe
2023-06-07 20:00:34,147:INFO:Uploading results into container
2023-06-07 20:00:34,150:INFO:Uploading model into container now
2023-06-07 20:00:34,151:INFO:_master_model_container: 13
2023-06-07 20:00:34,152:INFO:_display_container: 2
2023-06-07 20:00:34,153:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2023-06-07 20:00:34,153:INFO:create_model() successfully completed......................................
2023-06-07 20:00:34,368:INFO:SubProcess create_model() end ==================================
2023-06-07 20:00:34,369:INFO:Creating metrics dataframe
2023-06-07 20:00:34,392:INFO:Initializing Extra Trees Regressor
2023-06-07 20:00:34,392:INFO:Total runtime is 1.570302851994832 minutes
2023-06-07 20:00:34,398:INFO:SubProcess create_model() called ==================================
2023-06-07 20:00:34,399:INFO:Initializing create_model()
2023-06-07 20:00:34,399:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFF7AF6D0>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022BC087CBE0>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 20:00:34,400:INFO:Checking exceptions
2023-06-07 20:00:34,400:INFO:Importing libraries
2023-06-07 20:00:34,401:INFO:Copying training dataset
2023-06-07 20:00:34,469:INFO:Defining folds
2023-06-07 20:00:34,469:INFO:Declaring metric variables
2023-06-07 20:00:34,475:INFO:Importing untrained model
2023-06-07 20:00:34,481:INFO:Extra Trees Regressor Imported successfully
2023-06-07 20:00:34,491:INFO:Starting cross validation
2023-06-07 20:00:34,494:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 20:01:00,103:INFO:Calculating mean and std
2023-06-07 20:01:00,122:INFO:Creating metrics dataframe
2023-06-07 20:01:00,665:INFO:Uploading results into container
2023-06-07 20:01:00,670:INFO:Uploading model into container now
2023-06-07 20:01:00,674:INFO:_master_model_container: 14
2023-06-07 20:01:00,674:INFO:_display_container: 2
2023-06-07 20:01:00,677:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2023-06-07 20:01:00,677:INFO:create_model() successfully completed......................................
2023-06-07 20:01:01,011:INFO:SubProcess create_model() end ==================================
2023-06-07 20:01:01,011:INFO:Creating metrics dataframe
2023-06-07 20:01:01,034:INFO:Initializing AdaBoost Regressor
2023-06-07 20:01:01,034:INFO:Total runtime is 2.014322785536448 minutes
2023-06-07 20:01:01,042:INFO:SubProcess create_model() called ==================================
2023-06-07 20:01:01,043:INFO:Initializing create_model()
2023-06-07 20:01:01,043:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFF7AF6D0>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022BC087CBE0>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 20:01:01,043:INFO:Checking exceptions
2023-06-07 20:01:01,043:INFO:Importing libraries
2023-06-07 20:01:01,045:INFO:Copying training dataset
2023-06-07 20:01:01,111:INFO:Defining folds
2023-06-07 20:01:01,112:INFO:Declaring metric variables
2023-06-07 20:01:01,120:INFO:Importing untrained model
2023-06-07 20:01:01,130:INFO:AdaBoost Regressor Imported successfully
2023-06-07 20:01:01,143:INFO:Starting cross validation
2023-06-07 20:01:01,146:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 20:01:06,661:INFO:Calculating mean and std
2023-06-07 20:01:06,663:INFO:Creating metrics dataframe
2023-06-07 20:01:07,123:INFO:Uploading results into container
2023-06-07 20:01:07,124:INFO:Uploading model into container now
2023-06-07 20:01:07,125:INFO:_master_model_container: 15
2023-06-07 20:01:07,125:INFO:_display_container: 2
2023-06-07 20:01:07,126:INFO:AdaBoostRegressor(random_state=123)
2023-06-07 20:01:07,126:INFO:create_model() successfully completed......................................
2023-06-07 20:01:07,246:INFO:SubProcess create_model() end ==================================
2023-06-07 20:01:07,247:INFO:Creating metrics dataframe
2023-06-07 20:01:07,267:INFO:Initializing Gradient Boosting Regressor
2023-06-07 20:01:07,267:INFO:Total runtime is 2.118207844098409 minutes
2023-06-07 20:01:07,274:INFO:SubProcess create_model() called ==================================
2023-06-07 20:01:07,274:INFO:Initializing create_model()
2023-06-07 20:01:07,274:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFF7AF6D0>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022BC087CBE0>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 20:01:07,274:INFO:Checking exceptions
2023-06-07 20:01:07,275:INFO:Importing libraries
2023-06-07 20:01:07,275:INFO:Copying training dataset
2023-06-07 20:01:07,330:INFO:Defining folds
2023-06-07 20:01:07,330:INFO:Declaring metric variables
2023-06-07 20:01:07,337:INFO:Importing untrained model
2023-06-07 20:01:07,344:INFO:Gradient Boosting Regressor Imported successfully
2023-06-07 20:01:07,355:INFO:Starting cross validation
2023-06-07 20:01:07,357:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 20:01:12,372:INFO:Calculating mean and std
2023-06-07 20:01:12,373:INFO:Creating metrics dataframe
2023-06-07 20:01:12,834:INFO:Uploading results into container
2023-06-07 20:01:12,835:INFO:Uploading model into container now
2023-06-07 20:01:12,836:INFO:_master_model_container: 16
2023-06-07 20:01:12,836:INFO:_display_container: 2
2023-06-07 20:01:12,837:INFO:GradientBoostingRegressor(random_state=123)
2023-06-07 20:01:12,837:INFO:create_model() successfully completed......................................
2023-06-07 20:01:12,957:INFO:SubProcess create_model() end ==================================
2023-06-07 20:01:12,958:INFO:Creating metrics dataframe
2023-06-07 20:01:12,979:INFO:Initializing Light Gradient Boosting Machine
2023-06-07 20:01:12,979:INFO:Total runtime is 2.2134135802586874 minutes
2023-06-07 20:01:12,984:INFO:SubProcess create_model() called ==================================
2023-06-07 20:01:12,984:INFO:Initializing create_model()
2023-06-07 20:01:12,985:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFF7AF6D0>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022BC087CBE0>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 20:01:12,985:INFO:Checking exceptions
2023-06-07 20:01:12,985:INFO:Importing libraries
2023-06-07 20:01:12,986:INFO:Copying training dataset
2023-06-07 20:01:13,043:INFO:Defining folds
2023-06-07 20:01:13,044:INFO:Declaring metric variables
2023-06-07 20:01:13,049:INFO:Importing untrained model
2023-06-07 20:01:13,055:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-07 20:01:13,064:INFO:Starting cross validation
2023-06-07 20:01:13,066:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 20:01:20,773:INFO:Calculating mean and std
2023-06-07 20:01:20,774:INFO:Creating metrics dataframe
2023-06-07 20:01:21,230:INFO:Uploading results into container
2023-06-07 20:01:21,232:INFO:Uploading model into container now
2023-06-07 20:01:21,232:INFO:_master_model_container: 17
2023-06-07 20:01:21,233:INFO:_display_container: 2
2023-06-07 20:01:21,234:INFO:LGBMRegressor(random_state=123)
2023-06-07 20:01:21,234:INFO:create_model() successfully completed......................................
2023-06-07 20:01:21,358:INFO:SubProcess create_model() end ==================================
2023-06-07 20:01:21,358:INFO:Creating metrics dataframe
2023-06-07 20:01:21,379:INFO:Initializing Dummy Regressor
2023-06-07 20:01:21,379:INFO:Total runtime is 2.3534136891365054 minutes
2023-06-07 20:01:21,384:INFO:SubProcess create_model() called ==================================
2023-06-07 20:01:21,385:INFO:Initializing create_model()
2023-06-07 20:01:21,385:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFF7AF6D0>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022BC087CBE0>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 20:01:21,385:INFO:Checking exceptions
2023-06-07 20:01:21,385:INFO:Importing libraries
2023-06-07 20:01:21,386:INFO:Copying training dataset
2023-06-07 20:01:21,441:INFO:Defining folds
2023-06-07 20:01:21,441:INFO:Declaring metric variables
2023-06-07 20:01:21,447:INFO:Importing untrained model
2023-06-07 20:01:21,453:INFO:Dummy Regressor Imported successfully
2023-06-07 20:01:21,462:INFO:Starting cross validation
2023-06-07 20:01:21,465:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 20:01:26,124:INFO:Calculating mean and std
2023-06-07 20:01:26,126:INFO:Creating metrics dataframe
2023-06-07 20:01:26,594:INFO:Uploading results into container
2023-06-07 20:01:26,595:INFO:Uploading model into container now
2023-06-07 20:01:26,595:INFO:_master_model_container: 18
2023-06-07 20:01:26,595:INFO:_display_container: 2
2023-06-07 20:01:26,596:INFO:DummyRegressor()
2023-06-07 20:01:26,596:INFO:create_model() successfully completed......................................
2023-06-07 20:01:26,716:INFO:SubProcess create_model() end ==================================
2023-06-07 20:01:26,717:INFO:Creating metrics dataframe
2023-06-07 20:01:26,751:INFO:Initializing create_model()
2023-06-07 20:01:26,751:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFF7AF6D0>, estimator=RandomForestRegressor(n_jobs=-1, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-07 20:01:26,752:INFO:Checking exceptions
2023-06-07 20:01:26,757:INFO:Importing libraries
2023-06-07 20:01:26,757:INFO:Copying training dataset
2023-06-07 20:01:26,811:INFO:Defining folds
2023-06-07 20:01:26,812:INFO:Declaring metric variables
2023-06-07 20:01:26,812:INFO:Importing untrained model
2023-06-07 20:01:26,812:INFO:Declaring custom model
2023-06-07 20:01:26,813:INFO:Random Forest Regressor Imported successfully
2023-06-07 20:01:26,814:INFO:Cross validation set to False
2023-06-07 20:01:26,814:INFO:Fitting Model
2023-06-07 20:01:27,922:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2023-06-07 20:01:27,922:INFO:create_model() successfully completed......................................
2023-06-07 20:01:28,115:INFO:_master_model_container: 18
2023-06-07 20:01:28,116:INFO:_display_container: 2
2023-06-07 20:01:28,116:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2023-06-07 20:01:28,117:INFO:compare_models() successfully completed......................................
2023-06-07 20:01:28,937:INFO:Initializing plot_model()
2023-06-07 20:01:28,937:INFO:plot_model(plot=residuals, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=RandomForestRegressor(n_jobs=-1, random_state=123), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFF7AF6D0>, system=True)
2023-06-07 20:01:28,937:INFO:Checking exceptions
2023-06-07 20:01:29,026:INFO:Preloading libraries
2023-06-07 20:01:29,290:INFO:Copying training dataset
2023-06-07 20:01:29,290:INFO:Plot type: residuals
2023-06-07 20:01:29,695:INFO:Fitting Model
2023-06-07 20:01:30,857:INFO:Scoring test/hold-out set
2023-06-07 20:01:33,073:INFO:Visual Rendered Successfully
2023-06-07 20:01:33,207:INFO:plot_model() successfully completed......................................
2023-06-07 20:01:33,403:INFO:Initializing create_model()
2023-06-07 20:01:33,404:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFF7AF6D0>, estimator=lightgbm, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-07 20:01:33,404:INFO:Checking exceptions
2023-06-07 20:01:33,438:INFO:Importing libraries
2023-06-07 20:01:33,439:INFO:Copying training dataset
2023-06-07 20:01:33,520:INFO:Defining folds
2023-06-07 20:01:33,520:INFO:Declaring metric variables
2023-06-07 20:01:33,524:INFO:Importing untrained model
2023-06-07 20:01:33,529:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-07 20:01:33,540:INFO:Starting cross validation
2023-06-07 20:01:33,543:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 20:01:38,855:INFO:Calculating mean and std
2023-06-07 20:01:38,857:INFO:Creating metrics dataframe
2023-06-07 20:01:38,865:INFO:Finalizing model
2023-06-07 20:01:39,805:INFO:Uploading results into container
2023-06-07 20:01:39,807:INFO:Uploading model into container now
2023-06-07 20:01:39,824:INFO:_master_model_container: 19
2023-06-07 20:01:39,824:INFO:_display_container: 3
2023-06-07 20:01:39,825:INFO:LGBMRegressor(random_state=123)
2023-06-07 20:01:39,825:INFO:create_model() successfully completed......................................
2023-06-07 20:01:40,216:INFO:Initializing plot_model()
2023-06-07 20:01:40,216:INFO:plot_model(plot=residuals, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LGBMRegressor(random_state=123), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFF7AF6D0>, system=True)
2023-06-07 20:01:40,217:INFO:Checking exceptions
2023-06-07 20:01:40,253:INFO:Preloading libraries
2023-06-07 20:01:40,261:INFO:Copying training dataset
2023-06-07 20:01:40,262:INFO:Plot type: residuals
2023-06-07 20:01:40,676:INFO:Fitting Model
2023-06-07 20:01:40,935:INFO:Scoring test/hold-out set
2023-06-07 20:01:42,374:INFO:Visual Rendered Successfully
2023-06-07 20:01:42,502:INFO:plot_model() successfully completed......................................
2023-06-07 20:01:42,561:INFO:Initializing predict_model()
2023-06-07 20:01:42,561:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFF7AF6D0>, estimator=LGBMRegressor(random_state=123), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022BCB3FBAC0>)
2023-06-07 20:01:42,562:INFO:Checking exceptions
2023-06-07 20:01:42,562:INFO:Preloading libraries
2023-06-07 20:01:42,971:INFO:Initializing evaluate_model()
2023-06-07 20:01:42,972:INFO:evaluate_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFF7AF6D0>, estimator=LGBMRegressor(random_state=123), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-07 20:01:43,054:INFO:Initializing plot_model()
2023-06-07 20:01:43,054:INFO:plot_model(plot=pipeline, fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LGBMRegressor(random_state=123), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFF7AF6D0>, system=True)
2023-06-07 20:01:43,055:INFO:Checking exceptions
2023-06-07 20:01:43,095:INFO:Preloading libraries
2023-06-07 20:01:43,102:INFO:Copying training dataset
2023-06-07 20:01:43,102:INFO:Plot type: pipeline
2023-06-07 20:01:43,337:INFO:Visual Rendered Successfully
2023-06-07 20:01:43,459:INFO:plot_model() successfully completed......................................
2023-06-07 20:01:43,580:INFO:Initializing predict_model()
2023-06-07 20:01:43,581:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFF7AF6D0>, estimator=LGBMRegressor(random_state=123), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022BF7231900>)
2023-06-07 20:01:43,581:INFO:Checking exceptions
2023-06-07 20:01:43,581:INFO:Preloading libraries
2023-06-07 20:01:43,585:INFO:Set up data.
2023-06-07 20:01:43,703:INFO:Set up index.
2023-06-07 20:01:44,281:INFO:Initializing predict_model()
2023-06-07 20:01:44,281:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFF7AF6D0>, estimator=LGBMRegressor(random_state=123), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022BCB426B00>)
2023-06-07 20:01:44,282:INFO:Checking exceptions
2023-06-07 20:01:44,282:INFO:Preloading libraries
2023-06-07 20:01:44,284:INFO:Set up data.
2023-06-07 20:01:44,309:INFO:Set up index.
2023-06-07 20:01:44,679:INFO:Initializing tune_model()
2023-06-07 20:01:44,680:INFO:tune_model(estimator=LGBMRegressor(random_state=123), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFF7AF6D0>)
2023-06-07 20:01:44,680:INFO:Checking exceptions
2023-06-07 20:01:44,748:INFO:Copying training dataset
2023-06-07 20:01:44,808:INFO:Checking base model
2023-06-07 20:01:44,809:INFO:Base model : Light Gradient Boosting Machine
2023-06-07 20:01:44,815:INFO:Declaring metric variables
2023-06-07 20:01:44,821:INFO:Defining Hyperparameters
2023-06-07 20:01:44,980:INFO:Tuning with n_jobs=-1
2023-06-07 20:01:44,980:INFO:Initializing RandomizedSearchCV
2023-06-07 20:02:28,379:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.60s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-07 20:02:42,024:INFO:best_params: {'actual_estimator__reg_lambda': 0.1, 'actual_estimator__reg_alpha': 0.0005, 'actual_estimator__num_leaves': 90, 'actual_estimator__n_estimators': 90, 'actual_estimator__min_split_gain': 0.4, 'actual_estimator__min_child_samples': 66, 'actual_estimator__learning_rate': 0.1, 'actual_estimator__feature_fraction': 0.5, 'actual_estimator__bagging_freq': 6, 'actual_estimator__bagging_fraction': 0.7}
2023-06-07 20:02:42,025:INFO:Hyperparameter search completed
2023-06-07 20:02:42,025:INFO:SubProcess create_model() called ==================================
2023-06-07 20:02:42,026:INFO:Initializing create_model()
2023-06-07 20:02:42,026:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFF7AF6D0>, estimator=LGBMRegressor(random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022BCB62F850>, model_only=True, return_train_score=False, kwargs={'reg_lambda': 0.1, 'reg_alpha': 0.0005, 'num_leaves': 90, 'n_estimators': 90, 'min_split_gain': 0.4, 'min_child_samples': 66, 'learning_rate': 0.1, 'feature_fraction': 0.5, 'bagging_freq': 6, 'bagging_fraction': 0.7})
2023-06-07 20:02:42,026:INFO:Checking exceptions
2023-06-07 20:02:42,027:INFO:Importing libraries
2023-06-07 20:02:42,027:INFO:Copying training dataset
2023-06-07 20:02:42,117:INFO:Defining folds
2023-06-07 20:02:42,117:INFO:Declaring metric variables
2023-06-07 20:02:42,122:INFO:Importing untrained model
2023-06-07 20:02:42,122:INFO:Declaring custom model
2023-06-07 20:02:42,128:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-07 20:02:42,141:INFO:Starting cross validation
2023-06-07 20:02:42,143:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 20:02:47,119:INFO:Calculating mean and std
2023-06-07 20:02:47,120:INFO:Creating metrics dataframe
2023-06-07 20:02:47,128:INFO:Finalizing model
2023-06-07 20:02:47,512:INFO:[LightGBM] [Warning] feature_fraction is set=0.5, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.5
2023-06-07 20:02:47,512:INFO:[LightGBM] [Warning] bagging_fraction is set=0.7, subsample=1.0 will be ignored. Current value: bagging_fraction=0.7
2023-06-07 20:02:47,512:INFO:[LightGBM] [Warning] bagging_freq is set=6, subsample_freq=0 will be ignored. Current value: bagging_freq=6
2023-06-07 20:02:48,676:INFO:Uploading results into container
2023-06-07 20:02:48,677:INFO:Uploading model into container now
2023-06-07 20:02:48,678:INFO:_master_model_container: 20
2023-06-07 20:02:48,678:INFO:_display_container: 6
2023-06-07 20:02:48,680:INFO:LGBMRegressor(bagging_fraction=0.7, bagging_freq=6, feature_fraction=0.5,
              min_child_samples=66, min_split_gain=0.4, n_estimators=90,
              num_leaves=90, random_state=123, reg_alpha=0.0005,
              reg_lambda=0.1)
2023-06-07 20:02:48,680:INFO:create_model() successfully completed......................................
2023-06-07 20:02:48,802:INFO:SubProcess create_model() end ==================================
2023-06-07 20:02:48,803:INFO:choose_better activated
2023-06-07 20:02:48,807:INFO:SubProcess create_model() called ==================================
2023-06-07 20:02:48,808:INFO:Initializing create_model()
2023-06-07 20:02:48,808:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFF7AF6D0>, estimator=LGBMRegressor(random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-07 20:02:48,808:INFO:Checking exceptions
2023-06-07 20:02:48,812:INFO:Importing libraries
2023-06-07 20:02:48,812:INFO:Copying training dataset
2023-06-07 20:02:48,866:INFO:Defining folds
2023-06-07 20:02:48,867:INFO:Declaring metric variables
2023-06-07 20:02:48,867:INFO:Importing untrained model
2023-06-07 20:02:48,867:INFO:Declaring custom model
2023-06-07 20:02:48,868:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-07 20:02:48,868:INFO:Starting cross validation
2023-06-07 20:02:48,870:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 20:02:53,671:INFO:Calculating mean and std
2023-06-07 20:02:53,672:INFO:Creating metrics dataframe
2023-06-07 20:02:53,676:INFO:Finalizing model
2023-06-07 20:02:54,539:INFO:Uploading results into container
2023-06-07 20:02:54,540:INFO:Uploading model into container now
2023-06-07 20:02:54,540:INFO:_master_model_container: 21
2023-06-07 20:02:54,540:INFO:_display_container: 7
2023-06-07 20:02:54,541:INFO:LGBMRegressor(random_state=123)
2023-06-07 20:02:54,541:INFO:create_model() successfully completed......................................
2023-06-07 20:02:54,671:INFO:SubProcess create_model() end ==================================
2023-06-07 20:02:54,672:INFO:LGBMRegressor(random_state=123) result for R2 is 0.9932
2023-06-07 20:02:54,673:INFO:LGBMRegressor(bagging_fraction=0.7, bagging_freq=6, feature_fraction=0.5,
              min_child_samples=66, min_split_gain=0.4, n_estimators=90,
              num_leaves=90, random_state=123, reg_alpha=0.0005,
              reg_lambda=0.1) result for R2 is 0.9894
2023-06-07 20:02:54,673:INFO:LGBMRegressor(random_state=123) is best model
2023-06-07 20:02:54,673:INFO:choose_better completed
2023-06-07 20:02:54,673:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2023-06-07 20:02:54,689:INFO:_master_model_container: 21
2023-06-07 20:02:54,689:INFO:_display_container: 6
2023-06-07 20:02:54,690:INFO:LGBMRegressor(random_state=123)
2023-06-07 20:02:54,690:INFO:tune_model() successfully completed......................................
2023-06-07 20:02:55,383:INFO:Initializing evaluate_model()
2023-06-07 20:02:55,384:INFO:evaluate_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFF7AF6D0>, estimator=LGBMRegressor(random_state=123), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-07 20:02:55,457:INFO:Initializing plot_model()
2023-06-07 20:02:55,458:INFO:plot_model(plot=pipeline, fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LGBMRegressor(random_state=123), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFF7AF6D0>, system=True)
2023-06-07 20:02:55,458:INFO:Checking exceptions
2023-06-07 20:02:55,488:INFO:Preloading libraries
2023-06-07 20:02:55,498:INFO:Copying training dataset
2023-06-07 20:02:55,498:INFO:Plot type: pipeline
2023-06-07 20:02:55,722:INFO:Visual Rendered Successfully
2023-06-07 20:02:55,840:INFO:plot_model() successfully completed......................................
2023-06-07 20:02:55,954:INFO:Initializing predict_model()
2023-06-07 20:02:55,954:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFF7AF6D0>, estimator=LGBMRegressor(random_state=123), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022BF714EE60>)
2023-06-07 20:02:55,955:INFO:Checking exceptions
2023-06-07 20:02:55,955:INFO:Preloading libraries
2023-06-07 20:02:55,958:INFO:Set up data.
2023-06-07 20:02:55,980:INFO:Set up index.
2023-06-07 20:08:12,311:INFO:Initializing save_model()
2023-06-07 20:08:12,312:INFO:save_model(model=LGBMRegressor(random_state=123), model_name=model_agroclimatology, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\CROSSD~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['codigo_ibge', 'latitude',
                                             'longitude', 'T2M_RANGE', 'TS',
                                             'T2MDEW', 'T2MWET', 'T2M_MAX',
                                             'T2M_MIN', 'T2M', 'QV2M', 'RH2M',
                                             'PRECTOTCORR', 'WS2M', 'WS2M_MAX',
                                             'WS2M_MIN', 'WS2M_RANGE', 'WS10M',
                                             'WS10M_MAX', 'WS10M_MIN',
                                             'WS10M_RANGE'...
                                             'WS50M_RANGE', 'GWETTOP',
                                             'GWETROOT', 'GWETPROF',
                                             'ALLSKY_SFC_SW_DWN',
                                             'CLRSKY_SFC_SW_DWN', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['data'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rest_encoding',
                 TransformerWrapper(include=['data'],
                                    transformer=TargetEncoder(cols=['data'],
                                                              handle_missing='return_nan')))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2023-06-07 20:08:12,312:INFO:Adding model into prep_pipe
2023-06-07 20:08:12,333:INFO:model_agroclimatology.pkl saved in current working directory
2023-06-07 20:08:12,349:INFO:Pipeline(memory=FastMemory(location=C:\Users\CROSSD~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['codigo_ibge', 'latitude',
                                             'longitude', 'T2M_RANGE', 'TS',
                                             'T2MDEW', 'T2MWET', 'T2M_MAX',
                                             'T2M_MIN', 'T2M', 'QV2M', 'RH2M',
                                             'PRECTOTCORR', 'WS2M', 'WS2M_MAX',
                                             'WS2M_MIN', 'WS2M_RANGE', 'WS10M',
                                             'WS10M_MAX', 'WS10M_MIN',
                                             'WS10M_RANGE'...
                                             'ALLSKY_SFC_SW_DWN',
                                             'CLRSKY_SFC_SW_DWN', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['data'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rest_encoding',
                 TransformerWrapper(include=['data'],
                                    transformer=TargetEncoder(cols=['data'],
                                                              handle_missing='return_nan'))),
                ('trained_model', LGBMRegressor(random_state=123))])
2023-06-07 20:08:12,349:INFO:save_model() successfully completed......................................
2023-06-07 20:29:03,344:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-07 20:29:03,360:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-07 20:29:03,360:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-07 20:29:03,360:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-07 20:29:04,884:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-07 20:43:27,337:INFO:Initializing load_model()
2023-06-07 20:43:27,338:INFO:load_model(model_name=./model_agroclimatology, platform=None, authentication=None, verbose=True)
2023-06-07 20:44:27,724:INFO:Initializing load_model()
2023-06-07 20:44:27,724:INFO:load_model(model_name=./model_agroclimatology, platform=None, authentication=None, verbose=True)
2023-06-07 20:44:27,770:INFO:Initializing predict_model()
2023-06-07 20:44:27,770:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028D2CD7F040>, estimator=Pipeline(memory=FastMemory(location=C:\Users\CROSSD~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['codigo_ibge', 'latitude',
                                             'longitude', 'T2M_RANGE', 'TS',
                                             'T2MDEW', 'T2MWET', 'T2M_MAX',
                                             'T2M_MIN', 'T2M', 'QV2M', 'RH2M',
                                             'PRECTOTCORR', 'WS2M', 'WS2M_MAX',
                                             'WS2M_MIN', 'WS2M_RANGE', 'WS10M',
                                             'WS10M_MAX', 'WS10M_MIN',
                                             'WS10M_RANGE'...
                                             'ALLSKY_SFC_SW_DWN',
                                             'CLRSKY_SFC_SW_DWN', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['data'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rest_encoding',
                 TransformerWrapper(include=['data'],
                                    transformer=TargetEncoder(cols=['data'],
                                                              handle_missing='return_nan'))),
                ('trained_model', LGBMRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028D2CCD1900>)
2023-06-07 20:44:27,770:INFO:Checking exceptions
2023-06-07 20:44:27,770:INFO:Preloading libraries
2023-06-07 20:44:27,771:INFO:Set up data.
2023-06-07 20:44:27,790:INFO:Set up index.
2023-06-07 20:46:03,018:INFO:Initializing load_model()
2023-06-07 20:46:03,018:INFO:load_model(model_name=./model_agroclimatology, platform=None, authentication=None, verbose=True)
2023-06-07 20:46:03,058:INFO:Initializing predict_model()
2023-06-07 20:46:03,058:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028D2CD7E440>, estimator=Pipeline(memory=FastMemory(location=C:\Users\CROSSD~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['codigo_ibge', 'latitude',
                                             'longitude', 'T2M_RANGE', 'TS',
                                             'T2MDEW', 'T2MWET', 'T2M_MAX',
                                             'T2M_MIN', 'T2M', 'QV2M', 'RH2M',
                                             'PRECTOTCORR', 'WS2M', 'WS2M_MAX',
                                             'WS2M_MIN', 'WS2M_RANGE', 'WS10M',
                                             'WS10M_MAX', 'WS10M_MIN',
                                             'WS10M_RANGE'...
                                             'ALLSKY_SFC_SW_DWN',
                                             'CLRSKY_SFC_SW_DWN', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['data'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rest_encoding',
                 TransformerWrapper(include=['data'],
                                    transformer=TargetEncoder(cols=['data'],
                                                              handle_missing='return_nan'))),
                ('trained_model', LGBMRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028D2CCD3640>)
2023-06-07 20:46:03,058:INFO:Checking exceptions
2023-06-07 20:46:03,058:INFO:Preloading libraries
2023-06-07 20:46:03,059:INFO:Set up data.
2023-06-07 20:46:03,080:INFO:Set up index.
2023-06-07 20:46:07,304:INFO:Initializing load_model()
2023-06-07 20:46:07,305:INFO:load_model(model_name=./model_agroclimatology, platform=None, authentication=None, verbose=True)
2023-06-07 20:46:07,350:INFO:Initializing predict_model()
2023-06-07 20:46:07,350:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028D2CDA7A30>, estimator=Pipeline(memory=FastMemory(location=C:\Users\CROSSD~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['codigo_ibge', 'latitude',
                                             'longitude', 'T2M_RANGE', 'TS',
                                             'T2MDEW', 'T2MWET', 'T2M_MAX',
                                             'T2M_MIN', 'T2M', 'QV2M', 'RH2M',
                                             'PRECTOTCORR', 'WS2M', 'WS2M_MAX',
                                             'WS2M_MIN', 'WS2M_RANGE', 'WS10M',
                                             'WS10M_MAX', 'WS10M_MIN',
                                             'WS10M_RANGE'...
                                             'ALLSKY_SFC_SW_DWN',
                                             'CLRSKY_SFC_SW_DWN', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['data'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rest_encoding',
                 TransformerWrapper(include=['data'],
                                    transformer=TargetEncoder(cols=['data'],
                                                              handle_missing='return_nan'))),
                ('trained_model', LGBMRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028D23076830>)
2023-06-07 20:46:07,350:INFO:Checking exceptions
2023-06-07 20:46:07,350:INFO:Preloading libraries
2023-06-07 20:46:07,350:INFO:Set up data.
2023-06-07 20:46:07,375:INFO:Set up index.
2023-06-07 20:48:42,127:INFO:Initializing load_model()
2023-06-07 20:48:42,127:INFO:load_model(model_name=./model_agroclimatology, platform=None, authentication=None, verbose=True)
2023-06-07 20:48:42,162:INFO:Initializing predict_model()
2023-06-07 20:48:42,162:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028D2CDA5840>, estimator=Pipeline(memory=FastMemory(location=C:\Users\CROSSD~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['codigo_ibge', 'latitude',
                                             'longitude', 'T2M_RANGE', 'TS',
                                             'T2MDEW', 'T2MWET', 'T2M_MAX',
                                             'T2M_MIN', 'T2M', 'QV2M', 'RH2M',
                                             'PRECTOTCORR', 'WS2M', 'WS2M_MAX',
                                             'WS2M_MIN', 'WS2M_RANGE', 'WS10M',
                                             'WS10M_MAX', 'WS10M_MIN',
                                             'WS10M_RANGE'...
                                             'ALLSKY_SFC_SW_DWN',
                                             'CLRSKY_SFC_SW_DWN', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['data'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rest_encoding',
                 TransformerWrapper(include=['data'],
                                    transformer=TargetEncoder(cols=['data'],
                                                              handle_missing='return_nan'))),
                ('trained_model', LGBMRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028D2C97A560>)
2023-06-07 20:48:42,162:INFO:Checking exceptions
2023-06-07 20:48:42,162:INFO:Preloading libraries
2023-06-07 20:48:42,163:INFO:Set up data.
2023-06-07 20:48:42,191:INFO:Set up index.
2023-06-07 20:48:42,704:INFO:Initializing load_model()
2023-06-07 20:48:42,705:INFO:load_model(model_name=./model_agroclimatology, platform=None, authentication=None, verbose=True)
2023-06-07 20:48:42,750:INFO:Initializing predict_model()
2023-06-07 20:48:42,750:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028D2CDA5A20>, estimator=Pipeline(memory=FastMemory(location=C:\Users\CROSSD~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['codigo_ibge', 'latitude',
                                             'longitude', 'T2M_RANGE', 'TS',
                                             'T2MDEW', 'T2MWET', 'T2M_MAX',
                                             'T2M_MIN', 'T2M', 'QV2M', 'RH2M',
                                             'PRECTOTCORR', 'WS2M', 'WS2M_MAX',
                                             'WS2M_MIN', 'WS2M_RANGE', 'WS10M',
                                             'WS10M_MAX', 'WS10M_MIN',
                                             'WS10M_RANGE'...
                                             'ALLSKY_SFC_SW_DWN',
                                             'CLRSKY_SFC_SW_DWN', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['data'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rest_encoding',
                 TransformerWrapper(include=['data'],
                                    transformer=TargetEncoder(cols=['data'],
                                                              handle_missing='return_nan'))),
                ('trained_model', LGBMRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028D23076830>)
2023-06-07 20:48:42,750:INFO:Checking exceptions
2023-06-07 20:48:42,750:INFO:Preloading libraries
2023-06-07 20:48:42,751:INFO:Set up data.
2023-06-07 20:48:42,796:INFO:Set up index.
2023-06-07 20:48:46,739:INFO:Initializing load_model()
2023-06-07 20:48:46,739:INFO:load_model(model_name=./model_agroclimatology, platform=None, authentication=None, verbose=True)
2023-06-07 20:48:46,774:INFO:Initializing predict_model()
2023-06-07 20:48:46,774:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028D2CDA6F50>, estimator=Pipeline(memory=FastMemory(location=C:\Users\CROSSD~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['codigo_ibge', 'latitude',
                                             'longitude', 'T2M_RANGE', 'TS',
                                             'T2MDEW', 'T2MWET', 'T2M_MAX',
                                             'T2M_MIN', 'T2M', 'QV2M', 'RH2M',
                                             'PRECTOTCORR', 'WS2M', 'WS2M_MAX',
                                             'WS2M_MIN', 'WS2M_RANGE', 'WS10M',
                                             'WS10M_MAX', 'WS10M_MIN',
                                             'WS10M_RANGE'...
                                             'ALLSKY_SFC_SW_DWN',
                                             'CLRSKY_SFC_SW_DWN', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['data'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rest_encoding',
                 TransformerWrapper(include=['data'],
                                    transformer=TargetEncoder(cols=['data'],
                                                              handle_missing='return_nan'))),
                ('trained_model', LGBMRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028D2C88B910>)
2023-06-07 20:48:46,774:INFO:Checking exceptions
2023-06-07 20:48:46,775:INFO:Preloading libraries
2023-06-07 20:48:46,775:INFO:Set up data.
2023-06-07 20:48:46,813:INFO:Set up index.
2023-06-07 20:48:47,334:INFO:Initializing load_model()
2023-06-07 20:48:47,334:INFO:load_model(model_name=./model_agroclimatology, platform=None, authentication=None, verbose=True)
2023-06-07 20:48:47,367:INFO:Initializing predict_model()
2023-06-07 20:48:47,367:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028D2C43E8C0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\CROSSD~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['codigo_ibge', 'latitude',
                                             'longitude', 'T2M_RANGE', 'TS',
                                             'T2MDEW', 'T2MWET', 'T2M_MAX',
                                             'T2M_MIN', 'T2M', 'QV2M', 'RH2M',
                                             'PRECTOTCORR', 'WS2M', 'WS2M_MAX',
                                             'WS2M_MIN', 'WS2M_RANGE', 'WS10M',
                                             'WS10M_MAX', 'WS10M_MIN',
                                             'WS10M_RANGE'...
                                             'ALLSKY_SFC_SW_DWN',
                                             'CLRSKY_SFC_SW_DWN', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['data'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rest_encoding',
                 TransformerWrapper(include=['data'],
                                    transformer=TargetEncoder(cols=['data'],
                                                              handle_missing='return_nan'))),
                ('trained_model', LGBMRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028D2C42C0D0>)
2023-06-07 20:48:47,370:INFO:Checking exceptions
2023-06-07 20:48:47,370:INFO:Preloading libraries
2023-06-07 20:48:47,371:INFO:Set up data.
2023-06-07 20:48:47,428:INFO:Set up index.
2023-06-07 20:48:58,350:INFO:Initializing load_model()
2023-06-07 20:48:58,350:INFO:load_model(model_name=./model_agroclimatology, platform=None, authentication=None, verbose=True)
2023-06-07 20:48:58,392:INFO:Initializing predict_model()
2023-06-07 20:48:58,392:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028D2CA293C0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\CROSSD~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['codigo_ibge', 'latitude',
                                             'longitude', 'T2M_RANGE', 'TS',
                                             'T2MDEW', 'T2MWET', 'T2M_MAX',
                                             'T2M_MIN', 'T2M', 'QV2M', 'RH2M',
                                             'PRECTOTCORR', 'WS2M', 'WS2M_MAX',
                                             'WS2M_MIN', 'WS2M_RANGE', 'WS10M',
                                             'WS10M_MAX', 'WS10M_MIN',
                                             'WS10M_RANGE'...
                                             'ALLSKY_SFC_SW_DWN',
                                             'CLRSKY_SFC_SW_DWN', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['data'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rest_encoding',
                 TransformerWrapper(include=['data'],
                                    transformer=TargetEncoder(cols=['data'],
                                                              handle_missing='return_nan'))),
                ('trained_model', LGBMRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028D23057F40>)
2023-06-07 20:48:58,392:INFO:Checking exceptions
2023-06-07 20:48:58,392:INFO:Preloading libraries
2023-06-07 20:48:58,393:INFO:Set up data.
2023-06-07 20:48:58,420:INFO:Set up index.
2023-06-07 20:48:59,312:INFO:Initializing load_model()
2023-06-07 20:48:59,312:INFO:load_model(model_name=./model_agroclimatology, platform=None, authentication=None, verbose=True)
2023-06-07 20:48:59,341:INFO:Initializing predict_model()
2023-06-07 20:48:59,341:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028D2CA2BCA0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\CROSSD~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['codigo_ibge', 'latitude',
                                             'longitude', 'T2M_RANGE', 'TS',
                                             'T2MDEW', 'T2MWET', 'T2M_MAX',
                                             'T2M_MIN', 'T2M', 'QV2M', 'RH2M',
                                             'PRECTOTCORR', 'WS2M', 'WS2M_MAX',
                                             'WS2M_MIN', 'WS2M_RANGE', 'WS10M',
                                             'WS10M_MAX', 'WS10M_MIN',
                                             'WS10M_RANGE'...
                                             'ALLSKY_SFC_SW_DWN',
                                             'CLRSKY_SFC_SW_DWN', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['data'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rest_encoding',
                 TransformerWrapper(include=['data'],
                                    transformer=TargetEncoder(cols=['data'],
                                                              handle_missing='return_nan'))),
                ('trained_model', LGBMRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028D2CCA7C70>)
2023-06-07 20:48:59,341:INFO:Checking exceptions
2023-06-07 20:48:59,341:INFO:Preloading libraries
2023-06-07 20:48:59,342:INFO:Set up data.
2023-06-07 20:48:59,365:INFO:Set up index.
2023-06-07 20:52:17,484:INFO:Initializing interpret_model()
2023-06-07 20:52:17,487:INFO:interpret_model(estimator=LGBMRegressor(random_state=123), use_train_data=False, X_new_sample=None, y_new_sample=None, feature=None, kwargs={}, observation=None, plot=summary, save=False, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFF7AF6D0>)
2023-06-07 20:52:17,487:INFO:Checking exceptions
2023-06-07 20:52:17,490:ERROR:
'shap' is a soft dependency and not included in the pycaret installation. Please run: `pip install shap` to install.
Alternately, you can install this by running `pip install pycaret[analysis]`
NoneType: None
2023-06-07 21:09:01,869:INFO:PyCaret RegressionExperiment
2023-06-07 21:09:01,869:INFO:Logging name: reg-default-name
2023-06-07 21:09:01,869:INFO:ML Usecase: MLUsecase.REGRESSION
2023-06-07 21:09:01,869:INFO:version 3.0.2
2023-06-07 21:09:01,869:INFO:Initializing setup()
2023-06-07 21:09:01,869:INFO:self.USI: bff0
2023-06-07 21:09:01,869:INFO:self._variable_keys: {'fold_shuffle_param', 'fold_generator', 'pipeline', 'y_train', '_available_plots', 'y_test', 'memory', '_ml_usecase', 'n_jobs_param', 'target_param', 'logging_param', 'X_train', 'log_plots_param', 'exp_id', 'idx', 'seed', 'transform_target_param', 'X_test', 'data', 'USI', 'exp_name_log', 'X', 'y', 'fold_groups_param', 'html_param', 'gpu_param', 'gpu_n_jobs_param'}
2023-06-07 21:09:01,869:INFO:Checking environment
2023-06-07 21:09:01,869:INFO:python_version: 3.10.9
2023-06-07 21:09:01,870:INFO:python_build: ('main', 'Mar  1 2023 18:18:15')
2023-06-07 21:09:01,870:INFO:machine: AMD64
2023-06-07 21:09:01,870:INFO:platform: Windows-10-10.0.19041-SP0
2023-06-07 21:09:01,870:INFO:Memory: svmem(total=6378106880, available=1217572864, percent=80.9, used=5160534016, free=1217572864)
2023-06-07 21:09:01,870:INFO:Physical Core: 4
2023-06-07 21:09:01,870:INFO:Logical Core: 8
2023-06-07 21:09:01,870:INFO:Checking libraries
2023-06-07 21:09:01,870:INFO:System:
2023-06-07 21:09:01,870:INFO:    python: 3.10.9 | packaged by Anaconda, Inc. | (main, Mar  1 2023, 18:18:15) [MSC v.1916 64 bit (AMD64)]
2023-06-07 21:09:01,871:INFO:executable: c:\Users\Crossddelta\anaconda3\python.exe
2023-06-07 21:09:01,871:INFO:   machine: Windows-10-10.0.19041-SP0
2023-06-07 21:09:01,871:INFO:PyCaret required dependencies:
2023-06-07 21:09:01,871:INFO:                 pip: 22.3.1
2023-06-07 21:09:01,871:INFO:          setuptools: 65.6.3
2023-06-07 21:09:01,871:INFO:             pycaret: 3.0.2
2023-06-07 21:09:01,871:INFO:             IPython: 8.10.0
2023-06-07 21:09:01,871:INFO:          ipywidgets: 7.6.5
2023-06-07 21:09:01,871:INFO:                tqdm: 4.64.1
2023-06-07 21:09:01,871:INFO:               numpy: 1.23.5
2023-06-07 21:09:01,871:INFO:              pandas: 1.5.3
2023-06-07 21:09:01,872:INFO:              jinja2: 3.1.2
2023-06-07 21:09:01,872:INFO:               scipy: 1.10.0
2023-06-07 21:09:01,872:INFO:              joblib: 1.2.0
2023-06-07 21:09:01,872:INFO:             sklearn: 1.2.1
2023-06-07 21:09:01,872:INFO:                pyod: 1.0.9
2023-06-07 21:09:01,872:INFO:            imblearn: 0.10.1
2023-06-07 21:09:01,872:INFO:   category_encoders: 2.6.1
2023-06-07 21:09:01,872:INFO:            lightgbm: 3.3.5
2023-06-07 21:09:01,872:INFO:               numba: 0.56.4
2023-06-07 21:09:01,872:INFO:            requests: 2.28.1
2023-06-07 21:09:01,872:INFO:          matplotlib: 3.7.0
2023-06-07 21:09:01,872:INFO:          scikitplot: 0.3.7
2023-06-07 21:09:01,872:INFO:         yellowbrick: 1.5
2023-06-07 21:09:01,872:INFO:              plotly: 5.9.0
2023-06-07 21:09:01,872:INFO:             kaleido: 0.2.1
2023-06-07 21:09:01,873:INFO:         statsmodels: 0.13.5
2023-06-07 21:09:01,873:INFO:              sktime: 0.17.0
2023-06-07 21:09:01,873:INFO:               tbats: 1.1.3
2023-06-07 21:09:01,873:INFO:            pmdarima: 2.0.3
2023-06-07 21:09:01,873:INFO:              psutil: 5.9.0
2023-06-07 21:09:01,873:INFO:PyCaret optional dependencies:
2023-06-07 21:09:01,873:INFO:                shap: Not installed
2023-06-07 21:09:01,873:INFO:           interpret: Not installed
2023-06-07 21:09:01,873:INFO:                umap: Not installed
2023-06-07 21:09:01,873:INFO:    pandas_profiling: Not installed
2023-06-07 21:09:01,873:INFO:  explainerdashboard: Not installed
2023-06-07 21:09:01,873:INFO:             autoviz: Not installed
2023-06-07 21:09:01,873:INFO:           fairlearn: Not installed
2023-06-07 21:09:01,873:INFO:             xgboost: Not installed
2023-06-07 21:09:01,874:INFO:            catboost: Not installed
2023-06-07 21:09:01,874:INFO:              kmodes: Not installed
2023-06-07 21:09:01,874:INFO:             mlxtend: Not installed
2023-06-07 21:09:01,874:INFO:       statsforecast: Not installed
2023-06-07 21:09:01,874:INFO:        tune_sklearn: Not installed
2023-06-07 21:09:01,874:INFO:                 ray: Not installed
2023-06-07 21:09:01,874:INFO:            hyperopt: Not installed
2023-06-07 21:09:01,874:INFO:              optuna: Not installed
2023-06-07 21:09:01,874:INFO:               skopt: Not installed
2023-06-07 21:09:01,874:INFO:              mlflow: Not installed
2023-06-07 21:09:01,874:INFO:              gradio: Not installed
2023-06-07 21:09:01,874:INFO:             fastapi: Not installed
2023-06-07 21:09:01,874:INFO:             uvicorn: Not installed
2023-06-07 21:09:01,874:INFO:              m2cgen: Not installed
2023-06-07 21:09:01,874:INFO:           evidently: Not installed
2023-06-07 21:09:01,874:INFO:               fugue: Not installed
2023-06-07 21:09:01,875:INFO:           streamlit: Not installed
2023-06-07 21:09:01,875:INFO:             prophet: Not installed
2023-06-07 21:09:01,875:INFO:None
2023-06-07 21:09:01,875:INFO:Set up data.
2023-06-07 21:09:01,895:INFO:Set up train/test split.
2023-06-07 21:09:01,928:INFO:Set up index.
2023-06-07 21:09:01,932:INFO:Set up folding strategy.
2023-06-07 21:09:01,932:INFO:Assigning column types.
2023-06-07 21:09:01,958:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-07 21:09:01,959:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-07 21:09:01,967:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-07 21:09:01,974:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-07 21:09:02,205:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 21:09:02,284:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-07 21:09:02,284:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 21:09:02,285:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 21:09:02,286:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-07 21:09:02,294:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-07 21:09:02,301:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-07 21:09:02,474:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 21:09:02,550:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-07 21:09:02,551:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 21:09:02,552:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 21:09:02,552:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-06-07 21:09:02,562:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-07 21:09:02,569:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-07 21:09:02,707:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 21:09:02,780:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-07 21:09:02,781:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 21:09:02,781:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 21:09:02,789:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-07 21:09:02,796:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-07 21:09:02,973:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 21:09:03,047:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-07 21:09:03,048:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 21:09:03,048:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 21:09:03,048:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-06-07 21:09:03,065:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-07 21:09:03,193:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 21:09:03,267:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-07 21:09:03,268:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 21:09:03,268:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 21:09:03,285:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-07 21:09:03,429:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 21:09:03,560:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-07 21:09:03,561:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 21:09:03,564:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 21:09:03,565:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-06-07 21:09:03,720:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 21:09:03,802:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-07 21:09:03,803:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 21:09:03,803:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 21:09:03,962:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 21:09:04,041:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-07 21:09:04,042:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 21:09:04,042:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 21:09:04,043:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-07 21:09:04,191:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 21:09:04,284:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 21:09:04,284:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 21:09:04,438:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 21:09:04,519:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 21:09:04,519:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 21:09:04,520:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-06-07 21:09:04,754:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 21:09:04,755:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 21:09:04,985:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 21:09:04,985:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 21:09:04,987:INFO:Preparing preprocessing pipeline...
2023-06-07 21:09:04,987:INFO:Set up simple imputation.
2023-06-07 21:09:05,091:INFO:Finished creating preprocessing pipeline.
2023-06-07 21:09:05,097:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\CROSSD~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['SN', 'Commodity', 'Date', 'Unit'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent')))])
2023-06-07 21:09:05,097:INFO:Creating final display dataframe.
2023-06-07 21:09:05,441:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target           Average
2                   Target type        Regression
3           Original data shape       (197161, 5)
4        Transformed data shape       (197161, 5)
5   Transformed train set shape       (138012, 5)
6    Transformed test set shape        (59149, 5)
7              Numeric features                 4
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  reg-default-name
18                          USI              bff0
2023-06-07 21:09:05,741:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 21:09:05,742:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 21:09:05,977:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 21:09:05,978:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 21:09:05,978:INFO:setup() successfully completed in 4.57s...............
2023-06-07 21:09:28,724:INFO:Initializing compare_models()
2023-06-07 21:09:28,725:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BBED45B40>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x0000022BBED45B40>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2023-06-07 21:09:28,725:INFO:Checking exceptions
2023-06-07 21:09:28,750:INFO:Preparing display monitor
2023-06-07 21:09:28,791:INFO:Initializing Linear Regression
2023-06-07 21:09:28,792:INFO:Total runtime is 1.6709168752034504e-05 minutes
2023-06-07 21:09:28,799:INFO:SubProcess create_model() called ==================================
2023-06-07 21:09:28,799:INFO:Initializing create_model()
2023-06-07 21:09:28,800:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BBED45B40>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022C2C826B30>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 21:09:28,800:INFO:Checking exceptions
2023-06-07 21:09:28,800:INFO:Importing libraries
2023-06-07 21:09:28,801:INFO:Copying training dataset
2023-06-07 21:09:28,965:INFO:Defining folds
2023-06-07 21:09:28,965:INFO:Declaring metric variables
2023-06-07 21:09:28,972:INFO:Importing untrained model
2023-06-07 21:09:28,978:INFO:Linear Regression Imported successfully
2023-06-07 21:09:28,999:INFO:Starting cross validation
2023-06-07 21:09:29,001:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 21:09:45,653:INFO:Calculating mean and std
2023-06-07 21:09:45,656:INFO:Creating metrics dataframe
2023-06-07 21:09:46,153:INFO:Uploading results into container
2023-06-07 21:09:46,154:INFO:Uploading model into container now
2023-06-07 21:09:46,159:INFO:_master_model_container: 1
2023-06-07 21:09:46,159:INFO:_display_container: 2
2023-06-07 21:09:46,159:INFO:LinearRegression(n_jobs=-1)
2023-06-07 21:09:46,160:INFO:create_model() successfully completed......................................
2023-06-07 21:09:46,413:INFO:SubProcess create_model() end ==================================
2023-06-07 21:09:46,413:INFO:Creating metrics dataframe
2023-06-07 21:09:46,429:INFO:Initializing Lasso Regression
2023-06-07 21:09:46,429:INFO:Total runtime is 0.29395850499471027 minutes
2023-06-07 21:09:46,434:INFO:SubProcess create_model() called ==================================
2023-06-07 21:09:46,435:INFO:Initializing create_model()
2023-06-07 21:09:46,435:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BBED45B40>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022C2C826B30>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 21:09:46,435:INFO:Checking exceptions
2023-06-07 21:09:46,435:INFO:Importing libraries
2023-06-07 21:09:46,435:INFO:Copying training dataset
2023-06-07 21:09:46,483:INFO:Defining folds
2023-06-07 21:09:46,484:INFO:Declaring metric variables
2023-06-07 21:09:46,491:INFO:Importing untrained model
2023-06-07 21:09:46,496:INFO:Lasso Regression Imported successfully
2023-06-07 21:09:46,506:INFO:Starting cross validation
2023-06-07 21:09:46,507:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 21:10:07,477:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.778e+08, tolerance: 7.813e+04
  model = cd_fast.enet_coordinate_descent(

2023-06-07 21:10:08,162:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.53s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-07 21:10:08,532:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.814e+08, tolerance: 7.880e+04
  model = cd_fast.enet_coordinate_descent(

2023-06-07 21:10:10,436:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.54s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-07 21:10:10,793:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.767e+08, tolerance: 7.790e+04
  model = cd_fast.enet_coordinate_descent(

2023-06-07 21:10:10,868:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.807e+08, tolerance: 7.876e+04
  model = cd_fast.enet_coordinate_descent(

2023-06-07 21:10:10,890:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.792e+08, tolerance: 7.840e+04
  model = cd_fast.enet_coordinate_descent(

2023-06-07 21:10:11,736:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.804e+08, tolerance: 7.860e+04
  model = cd_fast.enet_coordinate_descent(

2023-06-07 21:10:11,784:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.810e+08, tolerance: 7.873e+04
  model = cd_fast.enet_coordinate_descent(

2023-06-07 21:10:11,880:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.788e+08, tolerance: 7.830e+04
  model = cd_fast.enet_coordinate_descent(

2023-06-07 21:10:16,623:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.783e+08, tolerance: 7.821e+04
  model = cd_fast.enet_coordinate_descent(

2023-06-07 21:10:16,706:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.785e+08, tolerance: 7.824e+04
  model = cd_fast.enet_coordinate_descent(

2023-06-07 21:10:19,668:INFO:Calculating mean and std
2023-06-07 21:10:19,670:INFO:Creating metrics dataframe
2023-06-07 21:10:20,206:INFO:Uploading results into container
2023-06-07 21:10:20,207:INFO:Uploading model into container now
2023-06-07 21:10:20,208:INFO:_master_model_container: 2
2023-06-07 21:10:20,208:INFO:_display_container: 2
2023-06-07 21:10:20,209:INFO:Lasso(random_state=123)
2023-06-07 21:10:20,209:INFO:create_model() successfully completed......................................
2023-06-07 21:10:20,479:INFO:SubProcess create_model() end ==================================
2023-06-07 21:10:20,480:INFO:Creating metrics dataframe
2023-06-07 21:10:20,494:INFO:Initializing Ridge Regression
2023-06-07 21:10:20,494:INFO:Total runtime is 0.8617179632186889 minutes
2023-06-07 21:10:20,500:INFO:SubProcess create_model() called ==================================
2023-06-07 21:10:20,501:INFO:Initializing create_model()
2023-06-07 21:10:20,501:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BBED45B40>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022C2C826B30>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 21:10:20,501:INFO:Checking exceptions
2023-06-07 21:10:20,501:INFO:Importing libraries
2023-06-07 21:10:20,501:INFO:Copying training dataset
2023-06-07 21:10:20,557:INFO:Defining folds
2023-06-07 21:10:20,557:INFO:Declaring metric variables
2023-06-07 21:10:20,564:INFO:Importing untrained model
2023-06-07 21:10:20,570:INFO:Ridge Regression Imported successfully
2023-06-07 21:10:20,582:INFO:Starting cross validation
2023-06-07 21:10:20,584:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 21:10:25,810:INFO:Calculating mean and std
2023-06-07 21:10:25,811:INFO:Creating metrics dataframe
2023-06-07 21:10:26,323:INFO:Uploading results into container
2023-06-07 21:10:26,324:INFO:Uploading model into container now
2023-06-07 21:10:26,324:INFO:_master_model_container: 3
2023-06-07 21:10:26,325:INFO:_display_container: 2
2023-06-07 21:10:26,325:INFO:Ridge(random_state=123)
2023-06-07 21:10:26,325:INFO:create_model() successfully completed......................................
2023-06-07 21:10:26,580:INFO:SubProcess create_model() end ==================================
2023-06-07 21:10:26,580:INFO:Creating metrics dataframe
2023-06-07 21:10:26,594:INFO:Initializing Elastic Net
2023-06-07 21:10:26,595:INFO:Total runtime is 0.9633993426958719 minutes
2023-06-07 21:10:26,600:INFO:SubProcess create_model() called ==================================
2023-06-07 21:10:26,600:INFO:Initializing create_model()
2023-06-07 21:10:26,600:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BBED45B40>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022C2C826B30>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 21:10:26,600:INFO:Checking exceptions
2023-06-07 21:10:26,601:INFO:Importing libraries
2023-06-07 21:10:26,601:INFO:Copying training dataset
2023-06-07 21:10:26,654:INFO:Defining folds
2023-06-07 21:10:26,654:INFO:Declaring metric variables
2023-06-07 21:10:26,660:INFO:Importing untrained model
2023-06-07 21:10:26,667:INFO:Elastic Net Imported successfully
2023-06-07 21:10:26,678:INFO:Starting cross validation
2023-06-07 21:10:26,680:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 21:10:48,219:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.817e+08, tolerance: 7.876e+04
  model = cd_fast.enet_coordinate_descent(

2023-06-07 21:10:48,402:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.818e+08, tolerance: 7.873e+04
  model = cd_fast.enet_coordinate_descent(

2023-06-07 21:10:48,782:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.812e+08, tolerance: 7.860e+04
  model = cd_fast.enet_coordinate_descent(

2023-06-07 21:10:49,499:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.788e+08, tolerance: 7.813e+04
  model = cd_fast.enet_coordinate_descent(

2023-06-07 21:10:51,405:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.800e+08, tolerance: 7.840e+04
  model = cd_fast.enet_coordinate_descent(

2023-06-07 21:10:51,684:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.796e+08, tolerance: 7.830e+04
  model = cd_fast.enet_coordinate_descent(

2023-06-07 21:10:51,735:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.822e+08, tolerance: 7.880e+04
  model = cd_fast.enet_coordinate_descent(

2023-06-07 21:10:52,110:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.775e+08, tolerance: 7.790e+04
  model = cd_fast.enet_coordinate_descent(

2023-06-07 21:10:56,096:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.792e+08, tolerance: 7.821e+04
  model = cd_fast.enet_coordinate_descent(

2023-06-07 21:10:56,100:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.793e+08, tolerance: 7.824e+04
  model = cd_fast.enet_coordinate_descent(

2023-06-07 21:10:59,007:INFO:Calculating mean and std
2023-06-07 21:10:59,009:INFO:Creating metrics dataframe
2023-06-07 21:10:59,542:INFO:Uploading results into container
2023-06-07 21:10:59,543:INFO:Uploading model into container now
2023-06-07 21:10:59,544:INFO:_master_model_container: 4
2023-06-07 21:10:59,544:INFO:_display_container: 2
2023-06-07 21:10:59,545:INFO:ElasticNet(random_state=123)
2023-06-07 21:10:59,545:INFO:create_model() successfully completed......................................
2023-06-07 21:10:59,809:INFO:SubProcess create_model() end ==================================
2023-06-07 21:10:59,810:INFO:Creating metrics dataframe
2023-06-07 21:10:59,825:INFO:Initializing Least Angle Regression
2023-06-07 21:10:59,825:INFO:Total runtime is 1.517227268218994 minutes
2023-06-07 21:10:59,830:INFO:SubProcess create_model() called ==================================
2023-06-07 21:10:59,831:INFO:Initializing create_model()
2023-06-07 21:10:59,831:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BBED45B40>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022C2C826B30>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 21:10:59,831:INFO:Checking exceptions
2023-06-07 21:10:59,831:INFO:Importing libraries
2023-06-07 21:10:59,832:INFO:Copying training dataset
2023-06-07 21:10:59,881:INFO:Defining folds
2023-06-07 21:10:59,881:INFO:Declaring metric variables
2023-06-07 21:10:59,886:INFO:Importing untrained model
2023-06-07 21:10:59,893:INFO:Least Angle Regression Imported successfully
2023-06-07 21:10:59,903:INFO:Starting cross validation
2023-06-07 21:10:59,905:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 21:11:05,153:INFO:Calculating mean and std
2023-06-07 21:11:05,155:INFO:Creating metrics dataframe
2023-06-07 21:11:05,699:INFO:Uploading results into container
2023-06-07 21:11:05,700:INFO:Uploading model into container now
2023-06-07 21:11:05,701:INFO:_master_model_container: 5
2023-06-07 21:11:05,701:INFO:_display_container: 2
2023-06-07 21:11:05,703:INFO:Lars(random_state=123)
2023-06-07 21:11:05,704:INFO:create_model() successfully completed......................................
2023-06-07 21:11:05,960:INFO:SubProcess create_model() end ==================================
2023-06-07 21:11:05,960:INFO:Creating metrics dataframe
2023-06-07 21:11:05,974:INFO:Initializing Lasso Least Angle Regression
2023-06-07 21:11:05,974:INFO:Total runtime is 1.6197145064671834 minutes
2023-06-07 21:11:05,979:INFO:SubProcess create_model() called ==================================
2023-06-07 21:11:05,980:INFO:Initializing create_model()
2023-06-07 21:11:05,980:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BBED45B40>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022C2C826B30>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 21:11:05,980:INFO:Checking exceptions
2023-06-07 21:11:05,980:INFO:Importing libraries
2023-06-07 21:11:05,980:INFO:Copying training dataset
2023-06-07 21:11:06,032:INFO:Defining folds
2023-06-07 21:11:06,032:INFO:Declaring metric variables
2023-06-07 21:11:06,039:INFO:Importing untrained model
2023-06-07 21:11:06,046:INFO:Lasso Least Angle Regression Imported successfully
2023-06-07 21:11:06,055:INFO:Starting cross validation
2023-06-07 21:11:06,057:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 21:11:11,220:INFO:Calculating mean and std
2023-06-07 21:11:11,221:INFO:Creating metrics dataframe
2023-06-07 21:11:11,796:INFO:Uploading results into container
2023-06-07 21:11:11,797:INFO:Uploading model into container now
2023-06-07 21:11:11,798:INFO:_master_model_container: 6
2023-06-07 21:11:11,798:INFO:_display_container: 2
2023-06-07 21:11:11,798:INFO:LassoLars(random_state=123)
2023-06-07 21:11:11,799:INFO:create_model() successfully completed......................................
2023-06-07 21:11:12,072:INFO:SubProcess create_model() end ==================================
2023-06-07 21:11:12,073:INFO:Creating metrics dataframe
2023-06-07 21:11:12,093:INFO:Initializing Orthogonal Matching Pursuit
2023-06-07 21:11:12,093:INFO:Total runtime is 1.7217007001241047 minutes
2023-06-07 21:11:12,098:INFO:SubProcess create_model() called ==================================
2023-06-07 21:11:12,098:INFO:Initializing create_model()
2023-06-07 21:11:12,099:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BBED45B40>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022C2C826B30>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 21:11:12,099:INFO:Checking exceptions
2023-06-07 21:11:12,099:INFO:Importing libraries
2023-06-07 21:11:12,099:INFO:Copying training dataset
2023-06-07 21:11:12,148:INFO:Defining folds
2023-06-07 21:11:12,149:INFO:Declaring metric variables
2023-06-07 21:11:12,154:INFO:Importing untrained model
2023-06-07 21:11:12,161:INFO:Orthogonal Matching Pursuit Imported successfully
2023-06-07 21:11:12,170:INFO:Starting cross validation
2023-06-07 21:11:12,172:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 21:11:17,346:INFO:Calculating mean and std
2023-06-07 21:11:17,348:INFO:Creating metrics dataframe
2023-06-07 21:11:17,894:INFO:Uploading results into container
2023-06-07 21:11:17,895:INFO:Uploading model into container now
2023-06-07 21:11:17,895:INFO:_master_model_container: 7
2023-06-07 21:11:17,896:INFO:_display_container: 2
2023-06-07 21:11:17,896:INFO:OrthogonalMatchingPursuit()
2023-06-07 21:11:17,896:INFO:create_model() successfully completed......................................
2023-06-07 21:11:18,165:INFO:SubProcess create_model() end ==================================
2023-06-07 21:11:18,165:INFO:Creating metrics dataframe
2023-06-07 21:11:18,187:INFO:Initializing Bayesian Ridge
2023-06-07 21:11:18,187:INFO:Total runtime is 1.8232597510019937 minutes
2023-06-07 21:11:18,193:INFO:SubProcess create_model() called ==================================
2023-06-07 21:11:18,194:INFO:Initializing create_model()
2023-06-07 21:11:18,194:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BBED45B40>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022C2C826B30>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 21:11:18,194:INFO:Checking exceptions
2023-06-07 21:11:18,194:INFO:Importing libraries
2023-06-07 21:11:18,195:INFO:Copying training dataset
2023-06-07 21:11:18,255:INFO:Defining folds
2023-06-07 21:11:18,256:INFO:Declaring metric variables
2023-06-07 21:11:18,262:INFO:Importing untrained model
2023-06-07 21:11:18,269:INFO:Bayesian Ridge Imported successfully
2023-06-07 21:11:18,280:INFO:Starting cross validation
2023-06-07 21:11:18,282:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 21:11:23,713:INFO:Calculating mean and std
2023-06-07 21:11:23,714:INFO:Creating metrics dataframe
2023-06-07 21:11:24,233:INFO:Uploading results into container
2023-06-07 21:11:24,234:INFO:Uploading model into container now
2023-06-07 21:11:24,235:INFO:_master_model_container: 8
2023-06-07 21:11:24,235:INFO:_display_container: 2
2023-06-07 21:11:24,235:INFO:BayesianRidge()
2023-06-07 21:11:24,236:INFO:create_model() successfully completed......................................
2023-06-07 21:11:24,483:INFO:SubProcess create_model() end ==================================
2023-06-07 21:11:24,484:INFO:Creating metrics dataframe
2023-06-07 21:11:24,500:INFO:Initializing Passive Aggressive Regressor
2023-06-07 21:11:24,501:INFO:Total runtime is 1.9285010894139607 minutes
2023-06-07 21:11:24,510:INFO:SubProcess create_model() called ==================================
2023-06-07 21:11:24,511:INFO:Initializing create_model()
2023-06-07 21:11:24,511:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BBED45B40>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022C2C826B30>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 21:11:24,511:INFO:Checking exceptions
2023-06-07 21:11:24,511:INFO:Importing libraries
2023-06-07 21:11:24,511:INFO:Copying training dataset
2023-06-07 21:11:24,567:INFO:Defining folds
2023-06-07 21:11:24,568:INFO:Declaring metric variables
2023-06-07 21:11:24,573:INFO:Importing untrained model
2023-06-07 21:11:24,579:INFO:Passive Aggressive Regressor Imported successfully
2023-06-07 21:11:24,589:INFO:Starting cross validation
2023-06-07 21:11:24,591:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 21:11:29,958:INFO:Calculating mean and std
2023-06-07 21:11:29,959:INFO:Creating metrics dataframe
2023-06-07 21:11:30,490:INFO:Uploading results into container
2023-06-07 21:11:30,491:INFO:Uploading model into container now
2023-06-07 21:11:30,492:INFO:_master_model_container: 9
2023-06-07 21:11:30,492:INFO:_display_container: 2
2023-06-07 21:11:30,493:INFO:PassiveAggressiveRegressor(random_state=123)
2023-06-07 21:11:30,493:INFO:create_model() successfully completed......................................
2023-06-07 21:11:30,737:INFO:SubProcess create_model() end ==================================
2023-06-07 21:11:30,739:INFO:Creating metrics dataframe
2023-06-07 21:11:30,756:INFO:Initializing Huber Regressor
2023-06-07 21:11:30,756:INFO:Total runtime is 2.032757008075714 minutes
2023-06-07 21:11:30,763:INFO:SubProcess create_model() called ==================================
2023-06-07 21:11:30,763:INFO:Initializing create_model()
2023-06-07 21:11:30,763:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BBED45B40>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022C2C826B30>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 21:11:30,763:INFO:Checking exceptions
2023-06-07 21:11:30,764:INFO:Importing libraries
2023-06-07 21:11:30,764:INFO:Copying training dataset
2023-06-07 21:11:30,816:INFO:Defining folds
2023-06-07 21:11:30,816:INFO:Declaring metric variables
2023-06-07 21:11:30,826:INFO:Importing untrained model
2023-06-07 21:11:30,857:INFO:Huber Regressor Imported successfully
2023-06-07 21:11:30,874:INFO:Starting cross validation
2023-06-07 21:11:30,875:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 21:11:38,447:INFO:Calculating mean and std
2023-06-07 21:11:38,448:INFO:Creating metrics dataframe
2023-06-07 21:11:38,993:INFO:Uploading results into container
2023-06-07 21:11:38,994:INFO:Uploading model into container now
2023-06-07 21:11:38,995:INFO:_master_model_container: 10
2023-06-07 21:11:38,995:INFO:_display_container: 2
2023-06-07 21:11:38,996:INFO:HuberRegressor()
2023-06-07 21:11:38,996:INFO:create_model() successfully completed......................................
2023-06-07 21:11:39,251:INFO:SubProcess create_model() end ==================================
2023-06-07 21:11:39,251:INFO:Creating metrics dataframe
2023-06-07 21:11:39,269:INFO:Initializing K Neighbors Regressor
2023-06-07 21:11:39,269:INFO:Total runtime is 2.174634329477946 minutes
2023-06-07 21:11:39,276:INFO:SubProcess create_model() called ==================================
2023-06-07 21:11:39,276:INFO:Initializing create_model()
2023-06-07 21:11:39,276:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BBED45B40>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022C2C826B30>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 21:11:39,277:INFO:Checking exceptions
2023-06-07 21:11:39,277:INFO:Importing libraries
2023-06-07 21:11:39,277:INFO:Copying training dataset
2023-06-07 21:11:39,330:INFO:Defining folds
2023-06-07 21:11:39,330:INFO:Declaring metric variables
2023-06-07 21:11:39,335:INFO:Importing untrained model
2023-06-07 21:11:39,343:INFO:K Neighbors Regressor Imported successfully
2023-06-07 21:11:39,352:INFO:Starting cross validation
2023-06-07 21:11:39,353:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 21:11:45,201:INFO:Calculating mean and std
2023-06-07 21:11:45,202:INFO:Creating metrics dataframe
2023-06-07 21:11:45,752:INFO:Uploading results into container
2023-06-07 21:11:45,753:INFO:Uploading model into container now
2023-06-07 21:11:45,754:INFO:_master_model_container: 11
2023-06-07 21:11:45,754:INFO:_display_container: 2
2023-06-07 21:11:45,755:INFO:KNeighborsRegressor(n_jobs=-1)
2023-06-07 21:11:45,755:INFO:create_model() successfully completed......................................
2023-06-07 21:11:46,032:INFO:SubProcess create_model() end ==================================
2023-06-07 21:11:46,033:INFO:Creating metrics dataframe
2023-06-07 21:11:46,057:INFO:Initializing Decision Tree Regressor
2023-06-07 21:11:46,057:INFO:Total runtime is 2.2877670089403788 minutes
2023-06-07 21:11:46,064:INFO:SubProcess create_model() called ==================================
2023-06-07 21:11:46,064:INFO:Initializing create_model()
2023-06-07 21:11:46,065:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BBED45B40>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022C2C826B30>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 21:11:46,065:INFO:Checking exceptions
2023-06-07 21:11:46,065:INFO:Importing libraries
2023-06-07 21:11:46,065:INFO:Copying training dataset
2023-06-07 21:11:46,127:INFO:Defining folds
2023-06-07 21:11:46,127:INFO:Declaring metric variables
2023-06-07 21:11:46,134:INFO:Importing untrained model
2023-06-07 21:11:46,142:INFO:Decision Tree Regressor Imported successfully
2023-06-07 21:11:46,156:INFO:Starting cross validation
2023-06-07 21:11:46,158:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 21:11:52,384:INFO:Calculating mean and std
2023-06-07 21:11:52,386:INFO:Creating metrics dataframe
2023-06-07 21:11:52,967:INFO:Uploading results into container
2023-06-07 21:11:52,968:INFO:Uploading model into container now
2023-06-07 21:11:52,969:INFO:_master_model_container: 12
2023-06-07 21:11:52,969:INFO:_display_container: 2
2023-06-07 21:11:52,970:INFO:DecisionTreeRegressor(random_state=123)
2023-06-07 21:11:52,970:INFO:create_model() successfully completed......................................
2023-06-07 21:11:53,218:INFO:SubProcess create_model() end ==================================
2023-06-07 21:11:53,218:INFO:Creating metrics dataframe
2023-06-07 21:11:53,236:INFO:Initializing Random Forest Regressor
2023-06-07 21:11:53,236:INFO:Total runtime is 2.4074226299921673 minutes
2023-06-07 21:11:53,246:INFO:SubProcess create_model() called ==================================
2023-06-07 21:11:53,246:INFO:Initializing create_model()
2023-06-07 21:11:53,247:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BBED45B40>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022C2C826B30>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 21:11:53,247:INFO:Checking exceptions
2023-06-07 21:11:53,247:INFO:Importing libraries
2023-06-07 21:11:53,247:INFO:Copying training dataset
2023-06-07 21:11:53,296:INFO:Defining folds
2023-06-07 21:11:53,296:INFO:Declaring metric variables
2023-06-07 21:11:53,301:INFO:Importing untrained model
2023-06-07 21:11:53,308:INFO:Random Forest Regressor Imported successfully
2023-06-07 21:11:53,318:INFO:Starting cross validation
2023-06-07 21:11:53,319:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 21:13:20,202:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.59s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-07 21:13:23,040:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:108: UserWarning: Persisting input arguments took 0.61s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = pipeline._memory_transform(transformer, X, y)

2023-06-07 21:13:26,540:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 5.72s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-07 21:13:31,010:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 3.24s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-07 21:13:38,002:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 8.31s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-07 21:13:38,107:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.75s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-07 21:13:38,329:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.00s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-07 21:13:38,341:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.81s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-07 21:13:38,446:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.78s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-07 21:13:38,486:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.81s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-07 21:14:05,376:INFO:Calculating mean and std
2023-06-07 21:14:06,286:INFO:Creating metrics dataframe
2023-06-07 21:14:07,080:INFO:Uploading results into container
2023-06-07 21:14:07,085:INFO:Uploading model into container now
2023-06-07 21:14:07,087:INFO:_master_model_container: 13
2023-06-07 21:14:07,087:INFO:_display_container: 2
2023-06-07 21:14:07,091:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2023-06-07 21:14:07,091:INFO:create_model() successfully completed......................................
2023-06-07 21:14:08,120:INFO:SubProcess create_model() end ==================================
2023-06-07 21:14:08,120:INFO:Creating metrics dataframe
2023-06-07 21:14:08,152:INFO:Initializing Extra Trees Regressor
2023-06-07 21:14:08,152:INFO:Total runtime is 4.65602297782898 minutes
2023-06-07 21:14:08,161:INFO:SubProcess create_model() called ==================================
2023-06-07 21:14:08,161:INFO:Initializing create_model()
2023-06-07 21:14:08,162:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BBED45B40>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022C2C826B30>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 21:14:08,162:INFO:Checking exceptions
2023-06-07 21:14:08,162:INFO:Importing libraries
2023-06-07 21:14:08,163:INFO:Copying training dataset
2023-06-07 21:14:08,236:INFO:Defining folds
2023-06-07 21:14:08,236:INFO:Declaring metric variables
2023-06-07 21:14:08,242:INFO:Importing untrained model
2023-06-07 21:14:08,247:INFO:Extra Trees Regressor Imported successfully
2023-06-07 21:14:08,256:INFO:Starting cross validation
2023-06-07 21:14:08,258:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 21:16:17,223:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 29.55s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-07 21:16:18,585:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 18.63s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-07 21:16:20,280:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 19.10s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-07 21:16:21,088:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 20.13s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-07 21:16:23,700:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 26.07s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-07 21:16:28,131:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 26.97s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-07 21:16:28,574:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 23.64s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-07 21:16:35,390:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 24.25s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-07 21:16:40,271:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:108: UserWarning: Persisting input arguments took 0.51s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = pipeline._memory_transform(transformer, X, y)

2023-06-07 21:16:48,469:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 4.17s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-07 21:17:06,619:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.58s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-07 21:21:42,803:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-07 21:21:42,803:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-07 21:21:42,803:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-07 21:21:42,804:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-07 21:21:44,399:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-07 21:22:03,420:INFO:PyCaret RegressionExperiment
2023-06-07 21:22:03,420:INFO:Logging name: reg-default-name
2023-06-07 21:22:03,420:INFO:ML Usecase: MLUsecase.REGRESSION
2023-06-07 21:22:03,420:INFO:version 3.0.2
2023-06-07 21:22:03,420:INFO:Initializing setup()
2023-06-07 21:22:03,420:INFO:self.USI: 5079
2023-06-07 21:22:03,420:INFO:self._variable_keys: {'seed', 'y_train', 'idx', 'X', 'log_plots_param', 'y_test', 'fold_generator', 'pipeline', '_available_plots', 'gpu_n_jobs_param', 'X_test', 'X_train', 'exp_id', 'data', 'fold_shuffle_param', 'exp_name_log', 'n_jobs_param', 'memory', 'y', '_ml_usecase', 'USI', 'target_param', 'gpu_param', 'transform_target_param', 'fold_groups_param', 'logging_param', 'html_param'}
2023-06-07 21:22:03,420:INFO:Checking environment
2023-06-07 21:22:03,421:INFO:python_version: 3.10.9
2023-06-07 21:22:03,421:INFO:python_build: ('main', 'Mar  1 2023 18:18:15')
2023-06-07 21:22:03,421:INFO:machine: AMD64
2023-06-07 21:22:03,421:INFO:platform: Windows-10-10.0.19041-SP0
2023-06-07 21:22:03,421:INFO:Memory: svmem(total=6378106880, available=2942779392, percent=53.9, used=3435327488, free=2942779392)
2023-06-07 21:22:03,421:INFO:Physical Core: 4
2023-06-07 21:22:03,421:INFO:Logical Core: 8
2023-06-07 21:22:03,421:INFO:Checking libraries
2023-06-07 21:22:03,421:INFO:System:
2023-06-07 21:22:03,421:INFO:    python: 3.10.9 | packaged by Anaconda, Inc. | (main, Mar  1 2023, 18:18:15) [MSC v.1916 64 bit (AMD64)]
2023-06-07 21:22:03,421:INFO:executable: c:\Users\Crossddelta\anaconda3\python.exe
2023-06-07 21:22:03,421:INFO:   machine: Windows-10-10.0.19041-SP0
2023-06-07 21:22:03,421:INFO:PyCaret required dependencies:
2023-06-07 21:22:03,422:INFO:                 pip: 22.3.1
2023-06-07 21:22:03,422:INFO:          setuptools: 65.6.3
2023-06-07 21:22:03,422:INFO:             pycaret: 3.0.2
2023-06-07 21:22:03,422:INFO:             IPython: 8.10.0
2023-06-07 21:22:03,422:INFO:          ipywidgets: 7.6.5
2023-06-07 21:22:03,422:INFO:                tqdm: 4.64.1
2023-06-07 21:22:03,422:INFO:               numpy: 1.23.5
2023-06-07 21:22:03,422:INFO:              pandas: 1.5.3
2023-06-07 21:22:03,422:INFO:              jinja2: 3.1.2
2023-06-07 21:22:03,422:INFO:               scipy: 1.10.0
2023-06-07 21:22:03,422:INFO:              joblib: 1.2.0
2023-06-07 21:22:03,422:INFO:             sklearn: 1.2.1
2023-06-07 21:22:03,422:INFO:                pyod: 1.0.9
2023-06-07 21:22:03,422:INFO:            imblearn: 0.10.1
2023-06-07 21:22:03,422:INFO:   category_encoders: 2.6.1
2023-06-07 21:22:03,422:INFO:            lightgbm: 3.3.5
2023-06-07 21:22:03,423:INFO:               numba: 0.56.4
2023-06-07 21:22:03,423:INFO:            requests: 2.28.1
2023-06-07 21:22:03,423:INFO:          matplotlib: 3.7.0
2023-06-07 21:22:03,423:INFO:          scikitplot: 0.3.7
2023-06-07 21:22:03,423:INFO:         yellowbrick: 1.5
2023-06-07 21:22:03,423:INFO:              plotly: 5.9.0
2023-06-07 21:22:03,423:INFO:             kaleido: 0.2.1
2023-06-07 21:22:03,423:INFO:         statsmodels: 0.13.5
2023-06-07 21:22:03,423:INFO:              sktime: 0.17.0
2023-06-07 21:22:03,423:INFO:               tbats: 1.1.3
2023-06-07 21:22:03,423:INFO:            pmdarima: 2.0.3
2023-06-07 21:22:03,423:INFO:              psutil: 5.9.0
2023-06-07 21:22:03,423:INFO:PyCaret optional dependencies:
2023-06-07 21:22:03,446:INFO:                shap: Not installed
2023-06-07 21:22:03,446:INFO:           interpret: Not installed
2023-06-07 21:22:03,446:INFO:                umap: Not installed
2023-06-07 21:22:03,446:INFO:    pandas_profiling: Not installed
2023-06-07 21:22:03,446:INFO:  explainerdashboard: Not installed
2023-06-07 21:22:03,446:INFO:             autoviz: Not installed
2023-06-07 21:22:03,447:INFO:           fairlearn: Not installed
2023-06-07 21:22:03,447:INFO:             xgboost: Not installed
2023-06-07 21:22:03,447:INFO:            catboost: Not installed
2023-06-07 21:22:03,447:INFO:              kmodes: Not installed
2023-06-07 21:22:03,447:INFO:             mlxtend: Not installed
2023-06-07 21:22:03,447:INFO:       statsforecast: Not installed
2023-06-07 21:22:03,447:INFO:        tune_sklearn: Not installed
2023-06-07 21:22:03,447:INFO:                 ray: Not installed
2023-06-07 21:22:03,447:INFO:            hyperopt: Not installed
2023-06-07 21:22:03,447:INFO:              optuna: Not installed
2023-06-07 21:22:03,447:INFO:               skopt: Not installed
2023-06-07 21:22:03,447:INFO:              mlflow: Not installed
2023-06-07 21:22:03,447:INFO:              gradio: Not installed
2023-06-07 21:22:03,447:INFO:             fastapi: Not installed
2023-06-07 21:22:03,448:INFO:             uvicorn: Not installed
2023-06-07 21:22:03,448:INFO:              m2cgen: Not installed
2023-06-07 21:22:03,448:INFO:           evidently: Not installed
2023-06-07 21:22:03,448:INFO:               fugue: Not installed
2023-06-07 21:22:03,448:INFO:           streamlit: 1.23.1
2023-06-07 21:22:03,448:INFO:             prophet: Not installed
2023-06-07 21:22:03,448:INFO:None
2023-06-07 21:22:03,448:INFO:Set up data.
2023-06-07 21:22:03,476:INFO:Set up train/test split.
2023-06-07 21:22:03,507:INFO:Set up index.
2023-06-07 21:22:03,516:INFO:Set up folding strategy.
2023-06-07 21:22:03,517:INFO:Assigning column types.
2023-06-07 21:22:03,543:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-07 21:22:03,543:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-07 21:22:03,551:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-07 21:22:03,559:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-07 21:22:03,692:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 21:22:03,766:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-07 21:22:03,767:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 21:22:04,225:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 21:22:04,226:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-07 21:22:04,233:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-07 21:22:04,240:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-07 21:22:04,370:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 21:22:04,440:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-07 21:22:04,440:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 21:22:04,442:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 21:22:04,443:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-06-07 21:22:04,451:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-07 21:22:04,458:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-07 21:22:04,584:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 21:22:04,657:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-07 21:22:04,659:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 21:22:04,659:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 21:22:04,667:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-07 21:22:04,673:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-07 21:22:04,809:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 21:22:04,877:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-07 21:22:04,878:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 21:22:04,878:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 21:22:04,879:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-06-07 21:22:04,892:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-07 21:22:05,012:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 21:22:05,079:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-07 21:22:05,080:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 21:22:05,080:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 21:22:05,095:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-07 21:22:05,215:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 21:22:05,282:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-07 21:22:05,283:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 21:22:05,283:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 21:22:05,284:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-06-07 21:22:05,425:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 21:22:05,493:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-07 21:22:05,494:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 21:22:05,494:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 21:22:05,625:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 21:22:05,704:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-07 21:22:05,705:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 21:22:05,705:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 21:22:05,705:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-07 21:22:05,854:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 21:22:05,916:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 21:22:05,916:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 21:22:06,061:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 21:22:06,132:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 21:22:06,132:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 21:22:06,132:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-06-07 21:22:06,352:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 21:22:06,353:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 21:22:06,588:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 21:22:06,588:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 21:22:06,596:INFO:Preparing preprocessing pipeline...
2023-06-07 21:22:06,596:INFO:Set up simple imputation.
2023-06-07 21:22:06,695:INFO:Finished creating preprocessing pipeline.
2023-06-07 21:22:06,703:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\CROSSD~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['SN', 'Commodity', 'Date', 'Unit'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent')))])
2023-06-07 21:22:06,703:INFO:Creating final display dataframe.
2023-06-07 21:22:06,987:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target           Average
2                   Target type        Regression
3           Original data shape       (197161, 5)
4        Transformed data shape       (197161, 5)
5   Transformed train set shape       (138012, 5)
6    Transformed test set shape        (59149, 5)
7              Numeric features                 4
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  reg-default-name
18                          USI              5079
2023-06-07 21:22:07,224:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 21:22:07,226:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 21:22:07,448:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 21:22:07,449:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 21:22:07,449:INFO:setup() successfully completed in 4.31s...............
2023-06-07 21:22:10,569:INFO:Initializing compare_models()
2023-06-07 21:22:10,569:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022130C72C50>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x0000022130C72C50>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2023-06-07 21:22:10,569:INFO:Checking exceptions
2023-06-07 21:22:10,606:INFO:Preparing display monitor
2023-06-07 21:22:10,644:INFO:Initializing Linear Regression
2023-06-07 21:22:10,644:INFO:Total runtime is 0.0 minutes
2023-06-07 21:22:10,648:INFO:SubProcess create_model() called ==================================
2023-06-07 21:22:10,649:INFO:Initializing create_model()
2023-06-07 21:22:10,649:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022130C72C50>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002213070F5B0>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 21:22:10,649:INFO:Checking exceptions
2023-06-07 21:22:10,649:INFO:Importing libraries
2023-06-07 21:22:10,649:INFO:Copying training dataset
2023-06-07 21:22:10,714:INFO:Defining folds
2023-06-07 21:22:10,714:INFO:Declaring metric variables
2023-06-07 21:22:10,721:INFO:Importing untrained model
2023-06-07 21:22:10,728:INFO:Linear Regression Imported successfully
2023-06-07 21:22:10,739:INFO:Starting cross validation
2023-06-07 21:22:10,755:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 21:22:24,213:INFO:Calculating mean and std
2023-06-07 21:22:24,215:INFO:Creating metrics dataframe
2023-06-07 21:22:24,506:INFO:Uploading results into container
2023-06-07 21:22:24,507:INFO:Uploading model into container now
2023-06-07 21:22:24,512:INFO:_master_model_container: 1
2023-06-07 21:22:24,512:INFO:_display_container: 2
2023-06-07 21:22:24,512:INFO:LinearRegression(n_jobs=-1)
2023-06-07 21:22:24,513:INFO:create_model() successfully completed......................................
2023-06-07 21:22:24,639:INFO:SubProcess create_model() end ==================================
2023-06-07 21:22:24,640:INFO:Creating metrics dataframe
2023-06-07 21:22:24,654:INFO:Initializing Lasso Regression
2023-06-07 21:22:24,655:INFO:Total runtime is 0.23350830872853598 minutes
2023-06-07 21:22:24,661:INFO:SubProcess create_model() called ==================================
2023-06-07 21:22:24,662:INFO:Initializing create_model()
2023-06-07 21:22:24,662:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022130C72C50>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002213070F5B0>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 21:22:24,662:INFO:Checking exceptions
2023-06-07 21:22:24,662:INFO:Importing libraries
2023-06-07 21:22:24,662:INFO:Copying training dataset
2023-06-07 21:22:24,716:INFO:Defining folds
2023-06-07 21:22:24,716:INFO:Declaring metric variables
2023-06-07 21:22:24,726:INFO:Importing untrained model
2023-06-07 21:22:24,756:INFO:Lasso Regression Imported successfully
2023-06-07 21:22:24,771:INFO:Starting cross validation
2023-06-07 21:22:24,772:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 21:22:46,155:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.804e+08, tolerance: 7.860e+04
  model = cd_fast.enet_coordinate_descent(

2023-06-07 21:22:46,623:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.778e+08, tolerance: 7.813e+04
  model = cd_fast.enet_coordinate_descent(

2023-06-07 21:22:47,516:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.814e+08, tolerance: 7.880e+04
  model = cd_fast.enet_coordinate_descent(

2023-06-07 21:22:47,719:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.810e+08, tolerance: 7.873e+04
  model = cd_fast.enet_coordinate_descent(

2023-06-07 21:22:48,446:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.807e+08, tolerance: 7.876e+04
  model = cd_fast.enet_coordinate_descent(

2023-06-07 21:22:48,805:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.792e+08, tolerance: 7.840e+04
  model = cd_fast.enet_coordinate_descent(

2023-06-07 21:22:48,866:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.788e+08, tolerance: 7.830e+04
  model = cd_fast.enet_coordinate_descent(

2023-06-07 21:22:48,868:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.767e+08, tolerance: 7.790e+04
  model = cd_fast.enet_coordinate_descent(

2023-06-07 21:22:51,998:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.783e+08, tolerance: 7.821e+04
  model = cd_fast.enet_coordinate_descent(

2023-06-07 21:22:52,010:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.785e+08, tolerance: 7.824e+04
  model = cd_fast.enet_coordinate_descent(

2023-06-07 21:22:53,377:INFO:Calculating mean and std
2023-06-07 21:22:53,378:INFO:Creating metrics dataframe
2023-06-07 21:22:53,678:INFO:Uploading results into container
2023-06-07 21:22:53,679:INFO:Uploading model into container now
2023-06-07 21:22:53,679:INFO:_master_model_container: 2
2023-06-07 21:22:53,680:INFO:_display_container: 2
2023-06-07 21:22:53,680:INFO:Lasso(random_state=123)
2023-06-07 21:22:53,680:INFO:create_model() successfully completed......................................
2023-06-07 21:22:53,804:INFO:SubProcess create_model() end ==================================
2023-06-07 21:22:53,804:INFO:Creating metrics dataframe
2023-06-07 21:22:53,818:INFO:Initializing Ridge Regression
2023-06-07 21:22:53,819:INFO:Total runtime is 0.71957395474116 minutes
2023-06-07 21:22:53,823:INFO:SubProcess create_model() called ==================================
2023-06-07 21:22:53,824:INFO:Initializing create_model()
2023-06-07 21:22:53,824:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022130C72C50>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002213070F5B0>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 21:22:53,824:INFO:Checking exceptions
2023-06-07 21:22:53,824:INFO:Importing libraries
2023-06-07 21:22:53,824:INFO:Copying training dataset
2023-06-07 21:22:53,877:INFO:Defining folds
2023-06-07 21:22:53,877:INFO:Declaring metric variables
2023-06-07 21:22:53,883:INFO:Importing untrained model
2023-06-07 21:22:53,889:INFO:Ridge Regression Imported successfully
2023-06-07 21:22:53,898:INFO:Starting cross validation
2023-06-07 21:22:53,900:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 21:22:57,075:INFO:Calculating mean and std
2023-06-07 21:22:57,076:INFO:Creating metrics dataframe
2023-06-07 21:22:57,381:INFO:Uploading results into container
2023-06-07 21:22:57,382:INFO:Uploading model into container now
2023-06-07 21:22:57,383:INFO:_master_model_container: 3
2023-06-07 21:22:57,383:INFO:_display_container: 2
2023-06-07 21:22:57,383:INFO:Ridge(random_state=123)
2023-06-07 21:22:57,384:INFO:create_model() successfully completed......................................
2023-06-07 21:22:57,509:INFO:SubProcess create_model() end ==================================
2023-06-07 21:22:57,509:INFO:Creating metrics dataframe
2023-06-07 21:22:57,524:INFO:Initializing Elastic Net
2023-06-07 21:22:57,524:INFO:Total runtime is 0.7813269138336181 minutes
2023-06-07 21:22:57,531:INFO:SubProcess create_model() called ==================================
2023-06-07 21:22:57,532:INFO:Initializing create_model()
2023-06-07 21:22:57,532:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022130C72C50>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002213070F5B0>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 21:22:57,532:INFO:Checking exceptions
2023-06-07 21:22:57,532:INFO:Importing libraries
2023-06-07 21:22:57,532:INFO:Copying training dataset
2023-06-07 21:22:57,584:INFO:Defining folds
2023-06-07 21:22:57,584:INFO:Declaring metric variables
2023-06-07 21:22:57,590:INFO:Importing untrained model
2023-06-07 21:22:57,597:INFO:Elastic Net Imported successfully
2023-06-07 21:22:57,606:INFO:Starting cross validation
2023-06-07 21:22:57,609:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 21:23:20,054:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.818e+08, tolerance: 7.873e+04
  model = cd_fast.enet_coordinate_descent(

2023-06-07 21:23:20,546:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.822e+08, tolerance: 7.880e+04
  model = cd_fast.enet_coordinate_descent(

2023-06-07 21:23:20,747:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.812e+08, tolerance: 7.860e+04
  model = cd_fast.enet_coordinate_descent(

2023-06-07 21:23:21,108:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.775e+08, tolerance: 7.790e+04
  model = cd_fast.enet_coordinate_descent(

2023-06-07 21:23:21,329:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.817e+08, tolerance: 7.876e+04
  model = cd_fast.enet_coordinate_descent(

2023-06-07 21:23:21,346:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.800e+08, tolerance: 7.840e+04
  model = cd_fast.enet_coordinate_descent(

2023-06-07 21:23:21,455:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.796e+08, tolerance: 7.830e+04
  model = cd_fast.enet_coordinate_descent(

2023-06-07 21:23:21,572:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.788e+08, tolerance: 7.813e+04
  model = cd_fast.enet_coordinate_descent(

2023-06-07 21:23:24,539:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.792e+08, tolerance: 7.821e+04
  model = cd_fast.enet_coordinate_descent(

2023-06-07 21:23:24,553:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.793e+08, tolerance: 7.824e+04
  model = cd_fast.enet_coordinate_descent(

2023-06-07 21:23:26,080:INFO:Calculating mean and std
2023-06-07 21:23:26,082:INFO:Creating metrics dataframe
2023-06-07 21:23:26,384:INFO:Uploading results into container
2023-06-07 21:23:26,385:INFO:Uploading model into container now
2023-06-07 21:23:26,385:INFO:_master_model_container: 4
2023-06-07 21:23:26,385:INFO:_display_container: 2
2023-06-07 21:23:26,386:INFO:ElasticNet(random_state=123)
2023-06-07 21:23:26,386:INFO:create_model() successfully completed......................................
2023-06-07 21:23:26,515:INFO:SubProcess create_model() end ==================================
2023-06-07 21:23:26,515:INFO:Creating metrics dataframe
2023-06-07 21:23:26,529:INFO:Initializing Least Angle Regression
2023-06-07 21:23:26,530:INFO:Total runtime is 1.2647538304328918 minutes
2023-06-07 21:23:26,535:INFO:SubProcess create_model() called ==================================
2023-06-07 21:23:26,535:INFO:Initializing create_model()
2023-06-07 21:23:26,535:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022130C72C50>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002213070F5B0>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 21:23:26,535:INFO:Checking exceptions
2023-06-07 21:23:26,536:INFO:Importing libraries
2023-06-07 21:23:26,536:INFO:Copying training dataset
2023-06-07 21:23:26,587:INFO:Defining folds
2023-06-07 21:23:26,588:INFO:Declaring metric variables
2023-06-07 21:23:26,594:INFO:Importing untrained model
2023-06-07 21:23:26,599:INFO:Least Angle Regression Imported successfully
2023-06-07 21:23:26,610:INFO:Starting cross validation
2023-06-07 21:23:26,611:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 21:23:29,821:INFO:Calculating mean and std
2023-06-07 21:23:29,822:INFO:Creating metrics dataframe
2023-06-07 21:23:30,126:INFO:Uploading results into container
2023-06-07 21:23:30,127:INFO:Uploading model into container now
2023-06-07 21:23:30,128:INFO:_master_model_container: 5
2023-06-07 21:23:30,128:INFO:_display_container: 2
2023-06-07 21:23:30,129:INFO:Lars(random_state=123)
2023-06-07 21:23:30,129:INFO:create_model() successfully completed......................................
2023-06-07 21:23:30,253:INFO:SubProcess create_model() end ==================================
2023-06-07 21:23:30,253:INFO:Creating metrics dataframe
2023-06-07 21:23:30,269:INFO:Initializing Lasso Least Angle Regression
2023-06-07 21:23:30,269:INFO:Total runtime is 1.3270737965901693 minutes
2023-06-07 21:23:30,274:INFO:SubProcess create_model() called ==================================
2023-06-07 21:23:30,274:INFO:Initializing create_model()
2023-06-07 21:23:30,274:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022130C72C50>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002213070F5B0>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 21:23:30,274:INFO:Checking exceptions
2023-06-07 21:23:30,276:INFO:Importing libraries
2023-06-07 21:23:30,276:INFO:Copying training dataset
2023-06-07 21:23:30,322:INFO:Defining folds
2023-06-07 21:23:30,322:INFO:Declaring metric variables
2023-06-07 21:23:30,330:INFO:Importing untrained model
2023-06-07 21:23:30,335:INFO:Lasso Least Angle Regression Imported successfully
2023-06-07 21:23:30,344:INFO:Starting cross validation
2023-06-07 21:23:30,345:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 21:23:33,548:INFO:Calculating mean and std
2023-06-07 21:23:33,549:INFO:Creating metrics dataframe
2023-06-07 21:23:33,853:INFO:Uploading results into container
2023-06-07 21:23:33,855:INFO:Uploading model into container now
2023-06-07 21:23:33,855:INFO:_master_model_container: 6
2023-06-07 21:23:33,855:INFO:_display_container: 2
2023-06-07 21:23:33,856:INFO:LassoLars(random_state=123)
2023-06-07 21:23:33,856:INFO:create_model() successfully completed......................................
2023-06-07 21:23:33,980:INFO:SubProcess create_model() end ==================================
2023-06-07 21:23:33,980:INFO:Creating metrics dataframe
2023-06-07 21:23:33,996:INFO:Initializing Orthogonal Matching Pursuit
2023-06-07 21:23:33,996:INFO:Total runtime is 1.3891991217931112 minutes
2023-06-07 21:23:34,001:INFO:SubProcess create_model() called ==================================
2023-06-07 21:23:34,002:INFO:Initializing create_model()
2023-06-07 21:23:34,002:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022130C72C50>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002213070F5B0>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 21:23:34,002:INFO:Checking exceptions
2023-06-07 21:23:34,002:INFO:Importing libraries
2023-06-07 21:23:34,003:INFO:Copying training dataset
2023-06-07 21:23:34,054:INFO:Defining folds
2023-06-07 21:23:34,054:INFO:Declaring metric variables
2023-06-07 21:23:34,061:INFO:Importing untrained model
2023-06-07 21:23:34,067:INFO:Orthogonal Matching Pursuit Imported successfully
2023-06-07 21:23:34,076:INFO:Starting cross validation
2023-06-07 21:23:34,078:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 21:23:37,318:INFO:Calculating mean and std
2023-06-07 21:23:37,319:INFO:Creating metrics dataframe
2023-06-07 21:23:37,671:INFO:Uploading results into container
2023-06-07 21:23:37,672:INFO:Uploading model into container now
2023-06-07 21:23:37,672:INFO:_master_model_container: 7
2023-06-07 21:23:37,672:INFO:_display_container: 2
2023-06-07 21:23:37,673:INFO:OrthogonalMatchingPursuit()
2023-06-07 21:23:37,673:INFO:create_model() successfully completed......................................
2023-06-07 21:23:37,806:INFO:SubProcess create_model() end ==================================
2023-06-07 21:23:37,806:INFO:Creating metrics dataframe
2023-06-07 21:23:37,822:INFO:Initializing Bayesian Ridge
2023-06-07 21:23:37,823:INFO:Total runtime is 1.4529781540234885 minutes
2023-06-07 21:23:37,830:INFO:SubProcess create_model() called ==================================
2023-06-07 21:23:37,831:INFO:Initializing create_model()
2023-06-07 21:23:37,831:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022130C72C50>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002213070F5B0>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 21:23:37,831:INFO:Checking exceptions
2023-06-07 21:23:37,831:INFO:Importing libraries
2023-06-07 21:23:37,832:INFO:Copying training dataset
2023-06-07 21:23:37,898:INFO:Defining folds
2023-06-07 21:23:37,899:INFO:Declaring metric variables
2023-06-07 21:23:37,904:INFO:Importing untrained model
2023-06-07 21:23:37,912:INFO:Bayesian Ridge Imported successfully
2023-06-07 21:23:37,923:INFO:Starting cross validation
2023-06-07 21:23:37,926:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 21:23:41,462:INFO:Calculating mean and std
2023-06-07 21:23:41,463:INFO:Creating metrics dataframe
2023-06-07 21:23:41,770:INFO:Uploading results into container
2023-06-07 21:23:41,771:INFO:Uploading model into container now
2023-06-07 21:23:41,772:INFO:_master_model_container: 8
2023-06-07 21:23:41,772:INFO:_display_container: 2
2023-06-07 21:23:41,773:INFO:BayesianRidge()
2023-06-07 21:23:41,773:INFO:create_model() successfully completed......................................
2023-06-07 21:23:41,917:INFO:SubProcess create_model() end ==================================
2023-06-07 21:23:41,917:INFO:Creating metrics dataframe
2023-06-07 21:23:41,935:INFO:Initializing Passive Aggressive Regressor
2023-06-07 21:23:41,936:INFO:Total runtime is 1.5215212623278302 minutes
2023-06-07 21:23:41,941:INFO:SubProcess create_model() called ==================================
2023-06-07 21:23:41,942:INFO:Initializing create_model()
2023-06-07 21:23:41,943:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022130C72C50>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002213070F5B0>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 21:23:41,943:INFO:Checking exceptions
2023-06-07 21:23:41,944:INFO:Importing libraries
2023-06-07 21:23:41,944:INFO:Copying training dataset
2023-06-07 21:23:41,999:INFO:Defining folds
2023-06-07 21:23:41,999:INFO:Declaring metric variables
2023-06-07 21:23:42,006:INFO:Importing untrained model
2023-06-07 21:23:42,012:INFO:Passive Aggressive Regressor Imported successfully
2023-06-07 21:23:42,021:INFO:Starting cross validation
2023-06-07 21:23:42,022:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 21:23:45,650:INFO:Calculating mean and std
2023-06-07 21:23:45,651:INFO:Creating metrics dataframe
2023-06-07 21:23:45,960:INFO:Uploading results into container
2023-06-07 21:23:45,961:INFO:Uploading model into container now
2023-06-07 21:23:45,962:INFO:_master_model_container: 9
2023-06-07 21:23:45,962:INFO:_display_container: 2
2023-06-07 21:23:45,962:INFO:PassiveAggressiveRegressor(random_state=123)
2023-06-07 21:23:45,963:INFO:create_model() successfully completed......................................
2023-06-07 21:23:46,088:INFO:SubProcess create_model() end ==================================
2023-06-07 21:23:46,088:INFO:Creating metrics dataframe
2023-06-07 21:23:46,105:INFO:Initializing Huber Regressor
2023-06-07 21:23:46,105:INFO:Total runtime is 1.591015732288361 minutes
2023-06-07 21:23:46,111:INFO:SubProcess create_model() called ==================================
2023-06-07 21:23:46,112:INFO:Initializing create_model()
2023-06-07 21:23:46,112:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022130C72C50>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002213070F5B0>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 21:23:46,112:INFO:Checking exceptions
2023-06-07 21:23:46,112:INFO:Importing libraries
2023-06-07 21:23:46,112:INFO:Copying training dataset
2023-06-07 21:23:46,168:INFO:Defining folds
2023-06-07 21:23:46,169:INFO:Declaring metric variables
2023-06-07 21:23:46,174:INFO:Importing untrained model
2023-06-07 21:23:46,181:INFO:Huber Regressor Imported successfully
2023-06-07 21:23:46,189:INFO:Starting cross validation
2023-06-07 21:23:46,191:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 21:23:51,860:INFO:Calculating mean and std
2023-06-07 21:23:51,862:INFO:Creating metrics dataframe
2023-06-07 21:23:52,178:INFO:Uploading results into container
2023-06-07 21:23:52,179:INFO:Uploading model into container now
2023-06-07 21:23:52,180:INFO:_master_model_container: 10
2023-06-07 21:23:52,180:INFO:_display_container: 2
2023-06-07 21:23:52,181:INFO:HuberRegressor()
2023-06-07 21:23:52,181:INFO:create_model() successfully completed......................................
2023-06-07 21:23:52,334:INFO:SubProcess create_model() end ==================================
2023-06-07 21:23:52,335:INFO:Creating metrics dataframe
2023-06-07 21:23:52,356:INFO:Initializing K Neighbors Regressor
2023-06-07 21:23:52,356:INFO:Total runtime is 1.6951892217000328 minutes
2023-06-07 21:23:52,362:INFO:SubProcess create_model() called ==================================
2023-06-07 21:23:52,362:INFO:Initializing create_model()
2023-06-07 21:23:52,363:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022130C72C50>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002213070F5B0>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 21:23:52,363:INFO:Checking exceptions
2023-06-07 21:23:52,363:INFO:Importing libraries
2023-06-07 21:23:52,364:INFO:Copying training dataset
2023-06-07 21:23:52,419:INFO:Defining folds
2023-06-07 21:23:52,419:INFO:Declaring metric variables
2023-06-07 21:23:52,424:INFO:Importing untrained model
2023-06-07 21:23:52,431:INFO:K Neighbors Regressor Imported successfully
2023-06-07 21:23:52,441:INFO:Starting cross validation
2023-06-07 21:23:52,443:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 21:23:56,555:INFO:Calculating mean and std
2023-06-07 21:23:56,557:INFO:Creating metrics dataframe
2023-06-07 21:23:56,874:INFO:Uploading results into container
2023-06-07 21:23:56,876:INFO:Uploading model into container now
2023-06-07 21:23:56,877:INFO:_master_model_container: 11
2023-06-07 21:23:56,877:INFO:_display_container: 2
2023-06-07 21:23:56,877:INFO:KNeighborsRegressor(n_jobs=-1)
2023-06-07 21:23:56,877:INFO:create_model() successfully completed......................................
2023-06-07 21:23:57,011:INFO:SubProcess create_model() end ==================================
2023-06-07 21:23:57,011:INFO:Creating metrics dataframe
2023-06-07 21:23:57,029:INFO:Initializing Decision Tree Regressor
2023-06-07 21:23:57,029:INFO:Total runtime is 1.7730721871058148 minutes
2023-06-07 21:23:57,034:INFO:SubProcess create_model() called ==================================
2023-06-07 21:23:57,035:INFO:Initializing create_model()
2023-06-07 21:23:57,035:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022130C72C50>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002213070F5B0>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 21:23:57,035:INFO:Checking exceptions
2023-06-07 21:23:57,035:INFO:Importing libraries
2023-06-07 21:23:57,035:INFO:Copying training dataset
2023-06-07 21:23:57,091:INFO:Defining folds
2023-06-07 21:23:57,091:INFO:Declaring metric variables
2023-06-07 21:23:57,098:INFO:Importing untrained model
2023-06-07 21:23:57,102:INFO:Decision Tree Regressor Imported successfully
2023-06-07 21:23:57,113:INFO:Starting cross validation
2023-06-07 21:23:57,114:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 21:24:01,469:INFO:Calculating mean and std
2023-06-07 21:24:01,471:INFO:Creating metrics dataframe
2023-06-07 21:24:01,791:INFO:Uploading results into container
2023-06-07 21:24:01,793:INFO:Uploading model into container now
2023-06-07 21:24:01,793:INFO:_master_model_container: 12
2023-06-07 21:24:01,794:INFO:_display_container: 2
2023-06-07 21:24:01,794:INFO:DecisionTreeRegressor(random_state=123)
2023-06-07 21:24:01,794:INFO:create_model() successfully completed......................................
2023-06-07 21:24:01,919:INFO:SubProcess create_model() end ==================================
2023-06-07 21:24:01,919:INFO:Creating metrics dataframe
2023-06-07 21:24:01,938:INFO:Initializing Random Forest Regressor
2023-06-07 21:24:01,938:INFO:Total runtime is 1.8548879702885948 minutes
2023-06-07 21:24:01,944:INFO:SubProcess create_model() called ==================================
2023-06-07 21:24:01,945:INFO:Initializing create_model()
2023-06-07 21:24:01,945:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022130C72C50>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002213070F5B0>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 21:24:01,945:INFO:Checking exceptions
2023-06-07 21:24:01,945:INFO:Importing libraries
2023-06-07 21:24:01,946:INFO:Copying training dataset
2023-06-07 21:24:01,991:INFO:Defining folds
2023-06-07 21:24:01,991:INFO:Declaring metric variables
2023-06-07 21:24:01,998:INFO:Importing untrained model
2023-06-07 21:24:02,004:INFO:Random Forest Regressor Imported successfully
2023-06-07 21:24:02,013:INFO:Starting cross validation
2023-06-07 21:24:02,015:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 21:24:22,539:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 2.44s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-07 21:24:22,720:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 2.26s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-07 21:24:23,018:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.25s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-07 21:24:23,476:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.31s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-07 21:24:41,100:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.94s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-07 21:24:41,121:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.96s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-07 21:25:00,051:INFO:Calculating mean and std
2023-06-07 21:25:00,086:INFO:Creating metrics dataframe
2023-06-07 21:25:00,482:INFO:Uploading results into container
2023-06-07 21:25:00,486:INFO:Uploading model into container now
2023-06-07 21:25:00,488:INFO:_master_model_container: 13
2023-06-07 21:25:00,488:INFO:_display_container: 2
2023-06-07 21:25:00,491:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2023-06-07 21:25:00,491:INFO:create_model() successfully completed......................................
2023-06-07 21:25:00,876:INFO:SubProcess create_model() end ==================================
2023-06-07 21:25:00,877:INFO:Creating metrics dataframe
2023-06-07 21:25:00,898:INFO:Initializing Extra Trees Regressor
2023-06-07 21:25:00,898:INFO:Total runtime is 2.837561198075613 minutes
2023-06-07 21:25:00,903:INFO:SubProcess create_model() called ==================================
2023-06-07 21:25:00,903:INFO:Initializing create_model()
2023-06-07 21:25:00,904:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022130C72C50>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002213070F5B0>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 21:25:00,904:INFO:Checking exceptions
2023-06-07 21:25:00,904:INFO:Importing libraries
2023-06-07 21:25:00,904:INFO:Copying training dataset
2023-06-07 21:25:00,962:INFO:Defining folds
2023-06-07 21:25:00,962:INFO:Declaring metric variables
2023-06-07 21:25:00,968:INFO:Importing untrained model
2023-06-07 21:25:00,972:INFO:Extra Trees Regressor Imported successfully
2023-06-07 21:25:00,981:INFO:Starting cross validation
2023-06-07 21:25:00,982:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 21:26:37,797:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 33.48s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-07 21:26:42,047:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.03s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-07 21:26:45,856:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 4.94s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-07 21:26:55,966:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.08s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-07 21:26:58,022:INFO:Calculating mean and std
2023-06-07 21:26:58,066:INFO:Creating metrics dataframe
2023-06-07 21:26:58,441:INFO:Uploading results into container
2023-06-07 21:26:58,466:INFO:Uploading model into container now
2023-06-07 21:26:58,471:INFO:_master_model_container: 14
2023-06-07 21:26:58,471:INFO:_display_container: 2
2023-06-07 21:26:58,478:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2023-06-07 21:26:58,478:INFO:create_model() successfully completed......................................
2023-06-07 21:26:59,169:INFO:SubProcess create_model() end ==================================
2023-06-07 21:26:59,169:INFO:Creating metrics dataframe
2023-06-07 21:26:59,215:INFO:Initializing AdaBoost Regressor
2023-06-07 21:26:59,215:INFO:Total runtime is 4.809513409932455 minutes
2023-06-07 21:26:59,221:INFO:SubProcess create_model() called ==================================
2023-06-07 21:26:59,222:INFO:Initializing create_model()
2023-06-07 21:26:59,222:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022130C72C50>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002213070F5B0>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 21:26:59,223:INFO:Checking exceptions
2023-06-07 21:26:59,223:INFO:Importing libraries
2023-06-07 21:26:59,224:INFO:Copying training dataset
2023-06-07 21:26:59,337:INFO:Defining folds
2023-06-07 21:26:59,337:INFO:Declaring metric variables
2023-06-07 21:26:59,343:INFO:Importing untrained model
2023-06-07 21:26:59,348:INFO:AdaBoost Regressor Imported successfully
2023-06-07 21:26:59,360:INFO:Starting cross validation
2023-06-07 21:26:59,361:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 21:27:21,907:INFO:Calculating mean and std
2023-06-07 21:27:21,910:INFO:Creating metrics dataframe
2023-06-07 21:27:22,221:INFO:Uploading results into container
2023-06-07 21:27:22,222:INFO:Uploading model into container now
2023-06-07 21:27:22,222:INFO:_master_model_container: 15
2023-06-07 21:27:22,222:INFO:_display_container: 2
2023-06-07 21:27:22,223:INFO:AdaBoostRegressor(random_state=123)
2023-06-07 21:27:22,223:INFO:create_model() successfully completed......................................
2023-06-07 21:27:22,354:INFO:SubProcess create_model() end ==================================
2023-06-07 21:27:22,355:INFO:Creating metrics dataframe
2023-06-07 21:27:22,376:INFO:Initializing Gradient Boosting Regressor
2023-06-07 21:27:22,376:INFO:Total runtime is 5.195535377661388 minutes
2023-06-07 21:27:22,382:INFO:SubProcess create_model() called ==================================
2023-06-07 21:27:22,382:INFO:Initializing create_model()
2023-06-07 21:27:22,382:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022130C72C50>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002213070F5B0>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 21:27:22,382:INFO:Checking exceptions
2023-06-07 21:27:22,383:INFO:Importing libraries
2023-06-07 21:27:22,383:INFO:Copying training dataset
2023-06-07 21:27:22,436:INFO:Defining folds
2023-06-07 21:27:22,437:INFO:Declaring metric variables
2023-06-07 21:27:22,442:INFO:Importing untrained model
2023-06-07 21:27:22,449:INFO:Gradient Boosting Regressor Imported successfully
2023-06-07 21:27:22,461:INFO:Starting cross validation
2023-06-07 21:27:22,463:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 21:28:13,219:INFO:Calculating mean and std
2023-06-07 21:28:13,220:INFO:Creating metrics dataframe
2023-06-07 21:28:13,532:INFO:Uploading results into container
2023-06-07 21:28:13,533:INFO:Uploading model into container now
2023-06-07 21:28:13,533:INFO:_master_model_container: 16
2023-06-07 21:28:13,534:INFO:_display_container: 2
2023-06-07 21:28:13,534:INFO:GradientBoostingRegressor(random_state=123)
2023-06-07 21:28:13,535:INFO:create_model() successfully completed......................................
2023-06-07 21:28:13,659:INFO:SubProcess create_model() end ==================================
2023-06-07 21:28:13,660:INFO:Creating metrics dataframe
2023-06-07 21:28:13,682:INFO:Initializing Light Gradient Boosting Machine
2023-06-07 21:28:13,683:INFO:Total runtime is 6.050641194979351 minutes
2023-06-07 21:28:13,687:INFO:SubProcess create_model() called ==================================
2023-06-07 21:28:13,688:INFO:Initializing create_model()
2023-06-07 21:28:13,688:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022130C72C50>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002213070F5B0>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 21:28:13,688:INFO:Checking exceptions
2023-06-07 21:28:13,688:INFO:Importing libraries
2023-06-07 21:28:13,689:INFO:Copying training dataset
2023-06-07 21:28:13,739:INFO:Defining folds
2023-06-07 21:28:13,739:INFO:Declaring metric variables
2023-06-07 21:28:13,745:INFO:Importing untrained model
2023-06-07 21:28:13,750:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-07 21:28:13,758:INFO:Starting cross validation
2023-06-07 21:28:13,759:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 21:28:22,819:INFO:Calculating mean and std
2023-06-07 21:28:22,821:INFO:Creating metrics dataframe
2023-06-07 21:28:23,140:INFO:Uploading results into container
2023-06-07 21:28:23,141:INFO:Uploading model into container now
2023-06-07 21:28:23,142:INFO:_master_model_container: 17
2023-06-07 21:28:23,142:INFO:_display_container: 2
2023-06-07 21:28:23,142:INFO:LGBMRegressor(random_state=123)
2023-06-07 21:28:23,144:INFO:create_model() successfully completed......................................
2023-06-07 21:28:23,269:INFO:SubProcess create_model() end ==================================
2023-06-07 21:28:23,269:INFO:Creating metrics dataframe
2023-06-07 21:28:23,294:INFO:Initializing Dummy Regressor
2023-06-07 21:28:23,295:INFO:Total runtime is 6.210852201779685 minutes
2023-06-07 21:28:23,299:INFO:SubProcess create_model() called ==================================
2023-06-07 21:28:23,300:INFO:Initializing create_model()
2023-06-07 21:28:23,300:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022130C72C50>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002213070F5B0>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 21:28:23,300:INFO:Checking exceptions
2023-06-07 21:28:23,300:INFO:Importing libraries
2023-06-07 21:28:23,301:INFO:Copying training dataset
2023-06-07 21:28:23,353:INFO:Defining folds
2023-06-07 21:28:23,355:INFO:Declaring metric variables
2023-06-07 21:28:23,361:INFO:Importing untrained model
2023-06-07 21:28:23,366:INFO:Dummy Regressor Imported successfully
2023-06-07 21:28:23,375:INFO:Starting cross validation
2023-06-07 21:28:23,377:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 21:28:26,764:INFO:Calculating mean and std
2023-06-07 21:28:26,766:INFO:Creating metrics dataframe
2023-06-07 21:28:27,084:INFO:Uploading results into container
2023-06-07 21:28:27,085:INFO:Uploading model into container now
2023-06-07 21:28:27,086:INFO:_master_model_container: 18
2023-06-07 21:28:27,086:INFO:_display_container: 2
2023-06-07 21:28:27,086:INFO:DummyRegressor()
2023-06-07 21:28:27,087:INFO:create_model() successfully completed......................................
2023-06-07 21:28:27,210:INFO:SubProcess create_model() end ==================================
2023-06-07 21:28:27,211:INFO:Creating metrics dataframe
2023-06-07 21:28:27,248:INFO:Initializing create_model()
2023-06-07 21:28:27,249:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022130C72C50>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-07 21:28:27,249:INFO:Checking exceptions
2023-06-07 21:28:27,253:INFO:Importing libraries
2023-06-07 21:28:27,253:INFO:Copying training dataset
2023-06-07 21:28:27,304:INFO:Defining folds
2023-06-07 21:28:27,304:INFO:Declaring metric variables
2023-06-07 21:28:27,304:INFO:Importing untrained model
2023-06-07 21:28:27,304:INFO:Declaring custom model
2023-06-07 21:28:27,305:INFO:Extra Trees Regressor Imported successfully
2023-06-07 21:28:27,307:INFO:Cross validation set to False
2023-06-07 21:28:27,307:INFO:Fitting Model
2023-06-07 21:28:34,782:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2023-06-07 21:28:34,782:INFO:create_model() successfully completed......................................
2023-06-07 21:28:35,148:INFO:_master_model_container: 18
2023-06-07 21:28:35,148:INFO:_display_container: 2
2023-06-07 21:28:35,149:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2023-06-07 21:28:35,149:INFO:compare_models() successfully completed......................................
2023-06-07 21:28:55,034:INFO:Initializing plot_model()
2023-06-07 21:28:55,034:INFO:plot_model(plot=residuals, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022130C72C50>, system=True)
2023-06-07 21:28:55,034:INFO:Checking exceptions
2023-06-07 21:28:55,149:INFO:Preloading libraries
2023-06-07 21:28:56,296:INFO:Copying training dataset
2023-06-07 21:28:56,296:INFO:Plot type: residuals
2023-06-07 21:28:56,742:INFO:Fitting Model
2023-06-07 21:29:00,595:INFO:Scoring test/hold-out set
2023-06-07 21:29:04,731:INFO:Visual Rendered Successfully
2023-06-07 21:29:04,870:INFO:plot_model() successfully completed......................................
2023-06-07 21:30:21,865:INFO:Initializing plot_model()
2023-06-07 21:30:21,865:INFO:plot_model(plot=feature, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022130C72C50>, system=True)
2023-06-07 21:30:21,865:INFO:Checking exceptions
2023-06-07 21:30:22,084:INFO:Preloading libraries
2023-06-07 21:30:25,071:INFO:Copying training dataset
2023-06-07 21:30:25,095:INFO:Plot type: feature
2023-06-07 21:30:25,186:WARNING:No coef_ found. Trying feature_importances_
2023-06-07 21:30:26,027:INFO:Visual Rendered Successfully
2023-06-07 21:30:26,670:INFO:plot_model() successfully completed......................................
2023-06-07 21:31:11,067:INFO:Initializing predict_model()
2023-06-07 21:31:11,067:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022130C72C50>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022133AFFF40>)
2023-06-07 21:31:11,067:INFO:Checking exceptions
2023-06-07 21:31:11,067:INFO:Preloading libraries
2023-06-07 21:31:55,146:INFO:Initializing predict_model()
2023-06-07 21:31:55,146:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022130C72C50>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022133AFF7F0>)
2023-06-07 21:31:55,154:INFO:Checking exceptions
2023-06-07 21:31:55,154:INFO:Preloading libraries
2023-06-07 21:31:55,162:INFO:Set up data.
2023-06-07 21:31:55,258:INFO:Set up index.
2023-06-07 21:33:14,834:INFO:Initializing save_model()
2023-06-07 21:33:14,834:INFO:save_model(model=ExtraTreesRegressor(n_jobs=-1, random_state=123), model_name=model, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\CROSSD~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['SN', 'Commodity', 'Date', 'Unit'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent')))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2023-06-07 21:33:14,834:INFO:Adding model into prep_pipe
2023-06-07 21:33:16,963:INFO:model.pkl saved in current working directory
2023-06-07 21:33:16,971:INFO:Pipeline(memory=FastMemory(location=C:\Users\CROSSD~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['SN', 'Commodity', 'Date', 'Unit'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))])
2023-06-07 21:33:16,971:INFO:save_model() successfully completed......................................
2023-06-07 21:41:57,718:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-07 21:41:57,718:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-07 21:41:57,718:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-07 21:41:57,718:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-07 21:42:00,672:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-07 21:42:29,346:INFO:Initializing load_model()
2023-06-07 21:42:29,346:INFO:load_model(model_name=./model, platform=None, authentication=None, verbose=True)
2023-06-07 21:42:33,498:INFO:Initializing predict_model()
2023-06-07 21:42:33,498:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C537C55660>, estimator=Pipeline(memory=FastMemory(location=C:\Users\CROSSD~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['SN', 'Commodity', 'Date', 'Unit'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001C540A2ED40>)
2023-06-07 21:42:33,498:INFO:Checking exceptions
2023-06-07 21:42:33,498:INFO:Preloading libraries
2023-06-07 21:42:33,498:INFO:Set up data.
2023-06-07 21:42:33,538:INFO:Set up index.
2023-06-07 21:44:38,160:INFO:Initializing load_model()
2023-06-07 21:44:38,160:INFO:load_model(model_name=./model, platform=None, authentication=None, verbose=True)
2023-06-07 21:44:42,318:INFO:Initializing predict_model()
2023-06-07 21:44:42,318:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C540E96170>, estimator=Pipeline(memory=FastMemory(location=C:\Users\CROSSD~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['SN', 'Commodity', 'Date', 'Unit'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001C53742D870>)
2023-06-07 21:44:42,318:INFO:Checking exceptions
2023-06-07 21:44:42,318:INFO:Preloading libraries
2023-06-07 21:44:42,318:INFO:Set up data.
2023-06-07 21:44:42,385:INFO:Set up index.
2023-06-07 21:44:57,535:INFO:Initializing load_model()
2023-06-07 21:44:57,535:INFO:load_model(model_name=./model, platform=None, authentication=None, verbose=True)
2023-06-07 21:44:59,740:INFO:Initializing predict_model()
2023-06-07 21:44:59,740:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C5376E8760>, estimator=Pipeline(memory=FastMemory(location=C:\Users\CROSSD~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['SN', 'Commodity', 'Date', 'Unit'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001C540FBAE60>)
2023-06-07 21:44:59,740:INFO:Checking exceptions
2023-06-07 21:44:59,740:INFO:Preloading libraries
2023-06-07 21:44:59,740:INFO:Set up data.
2023-06-07 21:44:59,898:INFO:Set up index.
2023-06-07 21:54:43,508:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-07 21:54:43,508:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-07 21:54:43,508:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-07 21:54:43,508:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-07 21:54:46,061:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-07 21:54:52,534:INFO:PyCaret RegressionExperiment
2023-06-07 21:54:52,534:INFO:Logging name: reg-default-name
2023-06-07 21:54:52,534:INFO:ML Usecase: MLUsecase.REGRESSION
2023-06-07 21:54:52,534:INFO:version 3.0.2
2023-06-07 21:54:52,534:INFO:Initializing setup()
2023-06-07 21:54:52,534:INFO:self.USI: 4906
2023-06-07 21:54:52,534:INFO:self._variable_keys: {'log_plots_param', 'exp_id', 'X_train', 'logging_param', 'gpu_param', 'y_test', 'target_param', 'data', 'exp_name_log', 'html_param', 'idx', 'seed', 'fold_groups_param', 'memory', 'X', 'USI', '_ml_usecase', 'transform_target_param', 'fold_shuffle_param', '_available_plots', 'y_train', 'n_jobs_param', 'X_test', 'gpu_n_jobs_param', 'fold_generator', 'pipeline', 'y'}
2023-06-07 21:54:52,534:INFO:Checking environment
2023-06-07 21:54:52,534:INFO:python_version: 3.10.9
2023-06-07 21:54:52,534:INFO:python_build: ('main', 'Mar  1 2023 18:18:15')
2023-06-07 21:54:52,534:INFO:machine: AMD64
2023-06-07 21:54:52,534:INFO:platform: Windows-10-10.0.19041-SP0
2023-06-07 21:54:52,534:INFO:Memory: svmem(total=6378106880, available=1033277440, percent=83.8, used=5344829440, free=1033277440)
2023-06-07 21:54:52,542:INFO:Physical Core: 4
2023-06-07 21:54:52,542:INFO:Logical Core: 8
2023-06-07 21:54:52,542:INFO:Checking libraries
2023-06-07 21:54:52,542:INFO:System:
2023-06-07 21:54:52,542:INFO:    python: 3.10.9 | packaged by Anaconda, Inc. | (main, Mar  1 2023, 18:18:15) [MSC v.1916 64 bit (AMD64)]
2023-06-07 21:54:52,542:INFO:executable: c:\Users\Crossddelta\anaconda3\python.exe
2023-06-07 21:54:52,542:INFO:   machine: Windows-10-10.0.19041-SP0
2023-06-07 21:54:52,542:INFO:PyCaret required dependencies:
2023-06-07 21:54:52,542:INFO:                 pip: 22.3.1
2023-06-07 21:54:52,542:INFO:          setuptools: 65.6.3
2023-06-07 21:54:52,542:INFO:             pycaret: 3.0.2
2023-06-07 21:54:52,542:INFO:             IPython: 8.10.0
2023-06-07 21:54:52,542:INFO:          ipywidgets: 7.6.5
2023-06-07 21:54:52,542:INFO:                tqdm: 4.64.1
2023-06-07 21:54:52,542:INFO:               numpy: 1.23.5
2023-06-07 21:54:52,542:INFO:              pandas: 1.5.3
2023-06-07 21:54:52,542:INFO:              jinja2: 3.1.2
2023-06-07 21:54:52,542:INFO:               scipy: 1.10.0
2023-06-07 21:54:52,542:INFO:              joblib: 1.2.0
2023-06-07 21:54:52,542:INFO:             sklearn: 1.2.1
2023-06-07 21:54:52,542:INFO:                pyod: 1.0.9
2023-06-07 21:54:52,542:INFO:            imblearn: 0.10.1
2023-06-07 21:54:52,542:INFO:   category_encoders: 2.6.1
2023-06-07 21:54:52,542:INFO:            lightgbm: 3.3.5
2023-06-07 21:54:52,542:INFO:               numba: 0.56.4
2023-06-07 21:54:52,542:INFO:            requests: 2.28.1
2023-06-07 21:54:52,542:INFO:          matplotlib: 3.7.0
2023-06-07 21:54:52,542:INFO:          scikitplot: 0.3.7
2023-06-07 21:54:52,542:INFO:         yellowbrick: 1.5
2023-06-07 21:54:52,542:INFO:              plotly: 5.9.0
2023-06-07 21:54:52,542:INFO:             kaleido: 0.2.1
2023-06-07 21:54:52,542:INFO:         statsmodels: 0.13.5
2023-06-07 21:54:52,542:INFO:              sktime: 0.17.0
2023-06-07 21:54:52,542:INFO:               tbats: 1.1.3
2023-06-07 21:54:52,542:INFO:            pmdarima: 2.0.3
2023-06-07 21:54:52,542:INFO:              psutil: 5.9.0
2023-06-07 21:54:52,542:INFO:PyCaret optional dependencies:
2023-06-07 21:54:52,576:INFO:                shap: Not installed
2023-06-07 21:54:52,576:INFO:           interpret: Not installed
2023-06-07 21:54:52,576:INFO:                umap: Not installed
2023-06-07 21:54:52,576:INFO:    pandas_profiling: Not installed
2023-06-07 21:54:52,576:INFO:  explainerdashboard: Not installed
2023-06-07 21:54:52,576:INFO:             autoviz: Not installed
2023-06-07 21:54:52,576:INFO:           fairlearn: Not installed
2023-06-07 21:54:52,576:INFO:             xgboost: Not installed
2023-06-07 21:54:52,576:INFO:            catboost: Not installed
2023-06-07 21:54:52,576:INFO:              kmodes: Not installed
2023-06-07 21:54:52,576:INFO:             mlxtend: Not installed
2023-06-07 21:54:52,576:INFO:       statsforecast: Not installed
2023-06-07 21:54:52,576:INFO:        tune_sklearn: Not installed
2023-06-07 21:54:52,576:INFO:                 ray: Not installed
2023-06-07 21:54:52,584:INFO:            hyperopt: Not installed
2023-06-07 21:54:52,584:INFO:              optuna: Not installed
2023-06-07 21:54:52,584:INFO:               skopt: Not installed
2023-06-07 21:54:52,584:INFO:              mlflow: Not installed
2023-06-07 21:54:52,584:INFO:              gradio: Not installed
2023-06-07 21:54:52,584:INFO:             fastapi: Not installed
2023-06-07 21:54:52,584:INFO:             uvicorn: Not installed
2023-06-07 21:54:52,584:INFO:              m2cgen: Not installed
2023-06-07 21:54:52,584:INFO:           evidently: Not installed
2023-06-07 21:54:52,584:INFO:               fugue: Not installed
2023-06-07 21:54:52,584:INFO:           streamlit: 1.23.1
2023-06-07 21:54:52,584:INFO:             prophet: Not installed
2023-06-07 21:54:52,584:INFO:None
2023-06-07 21:54:52,584:INFO:Set up data.
2023-06-07 21:54:52,718:INFO:Set up train/test split.
2023-06-07 21:54:52,776:INFO:Set up index.
2023-06-07 21:54:52,792:INFO:Set up folding strategy.
2023-06-07 21:54:52,792:INFO:Assigning column types.
2023-06-07 21:54:52,819:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-07 21:54:52,819:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-07 21:54:52,835:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-07 21:54:52,843:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-07 21:54:53,050:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 21:54:53,168:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-07 21:54:53,168:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 21:54:53,875:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 21:54:53,875:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-07 21:54:53,885:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-07 21:54:53,901:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-07 21:54:54,101:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 21:54:54,209:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-07 21:54:54,209:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 21:54:54,209:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 21:54:54,209:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-06-07 21:54:54,225:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-07 21:54:54,233:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-07 21:54:54,435:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 21:54:54,543:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-07 21:54:54,551:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 21:54:54,551:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 21:54:54,559:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-07 21:54:54,568:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-07 21:54:54,767:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 21:54:54,875:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-07 21:54:54,875:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 21:54:54,875:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 21:54:54,883:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-06-07 21:54:54,901:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-07 21:54:55,092:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 21:54:55,208:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-07 21:54:55,208:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 21:54:55,208:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 21:54:55,234:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-07 21:54:55,425:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 21:54:55,535:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-07 21:54:55,535:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 21:54:55,543:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 21:54:55,543:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-06-07 21:54:55,759:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 21:54:55,868:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-07 21:54:55,868:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 21:54:55,876:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 21:54:56,085:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 21:54:56,203:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-07 21:54:56,203:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 21:54:56,203:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 21:54:56,203:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-07 21:54:56,444:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 21:54:56,559:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 21:54:56,559:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 21:54:56,785:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 21:54:56,892:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 21:54:56,892:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 21:54:56,892:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-06-07 21:54:57,258:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 21:54:57,258:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 21:54:57,626:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 21:54:57,626:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 21:54:57,657:INFO:Preparing preprocessing pipeline...
2023-06-07 21:54:57,657:INFO:Set up simple imputation.
2023-06-07 21:54:57,716:INFO:Set up encoding of categorical features.
2023-06-07 21:54:59,834:INFO:Finished creating preprocessing pipeline.
2023-06-07 21:54:59,859:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\CROSSD~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['SN', 'Minimum', 'Maximum'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Commodity', 'Date', 'Unit'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Unit'],
                                    transformer=OneHotEncoder(cols=['Unit'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['Commodity', 'Date'],
                                    transformer=TargetEncoder(cols=['Commodity',
                                                                    'Date'],
                                                              handle_missing='return_nan')))])
2023-06-07 21:54:59,859:INFO:Creating final display dataframe.
2023-06-07 21:55:02,035:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target           Average
2                   Target type        Regression
3           Original data shape       (187303, 7)
4        Transformed data shape      (187303, 10)
5   Transformed train set shape      (131112, 10)
6    Transformed test set shape       (56191, 10)
7              Numeric features                 3
8          Categorical features                 3
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15               Fold Generator             KFold
16                  Fold Number                10
17                     CPU Jobs                -1
18                      Use GPU             False
19               Log Experiment             False
20              Experiment Name  reg-default-name
21                          USI              4906
2023-06-07 21:55:02,426:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 21:55:02,426:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 21:55:02,852:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 21:55:02,852:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 21:55:02,852:INFO:setup() successfully completed in 10.89s...............
2023-06-07 21:55:02,973:INFO:Initializing compare_models()
2023-06-07 21:55:02,973:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A419572B90>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000001A419572B90>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2023-06-07 21:55:02,973:INFO:Checking exceptions
2023-06-07 21:55:03,029:INFO:Preparing display monitor
2023-06-07 21:55:03,133:INFO:Initializing Linear Regression
2023-06-07 21:55:03,133:INFO:Total runtime is 0.0 minutes
2023-06-07 21:55:03,149:INFO:SubProcess create_model() called ==================================
2023-06-07 21:55:03,149:INFO:Initializing create_model()
2023-06-07 21:55:03,149:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A419572B90>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A419572680>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 21:55:03,157:INFO:Checking exceptions
2023-06-07 21:55:03,157:INFO:Importing libraries
2023-06-07 21:55:03,157:INFO:Copying training dataset
2023-06-07 21:55:03,453:INFO:Defining folds
2023-06-07 21:55:03,453:INFO:Declaring metric variables
2023-06-07 21:55:03,469:INFO:Importing untrained model
2023-06-07 21:55:03,477:INFO:Linear Regression Imported successfully
2023-06-07 21:55:03,493:INFO:Starting cross validation
2023-06-07 21:55:03,517:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 21:55:33,298:INFO:Calculating mean and std
2023-06-07 21:55:33,298:INFO:Creating metrics dataframe
2023-06-07 21:55:34,175:INFO:Uploading results into container
2023-06-07 21:55:34,175:INFO:Uploading model into container now
2023-06-07 21:55:34,175:INFO:_master_model_container: 1
2023-06-07 21:55:34,175:INFO:_display_container: 2
2023-06-07 21:55:34,175:INFO:LinearRegression(n_jobs=-1)
2023-06-07 21:55:34,175:INFO:create_model() successfully completed......................................
2023-06-07 21:55:34,432:INFO:SubProcess create_model() end ==================================
2023-06-07 21:55:34,432:INFO:Creating metrics dataframe
2023-06-07 21:55:34,456:INFO:Initializing Lasso Regression
2023-06-07 21:55:34,456:INFO:Total runtime is 0.5220365246136983 minutes
2023-06-07 21:55:34,464:INFO:SubProcess create_model() called ==================================
2023-06-07 21:55:34,472:INFO:Initializing create_model()
2023-06-07 21:55:34,472:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A419572B90>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A419572680>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 21:55:34,472:INFO:Checking exceptions
2023-06-07 21:55:34,472:INFO:Importing libraries
2023-06-07 21:55:34,472:INFO:Copying training dataset
2023-06-07 21:55:34,568:INFO:Defining folds
2023-06-07 21:55:34,568:INFO:Declaring metric variables
2023-06-07 21:55:34,576:INFO:Importing untrained model
2023-06-07 21:55:34,600:INFO:Lasso Regression Imported successfully
2023-06-07 21:55:34,632:INFO:Starting cross validation
2023-06-07 21:55:34,640:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 21:55:55,119:INFO:Calculating mean and std
2023-06-07 21:55:55,119:INFO:Creating metrics dataframe
2023-06-07 21:55:56,144:INFO:Uploading results into container
2023-06-07 21:55:56,144:INFO:Uploading model into container now
2023-06-07 21:55:56,144:INFO:_master_model_container: 2
2023-06-07 21:55:56,152:INFO:_display_container: 2
2023-06-07 21:55:56,152:INFO:Lasso(random_state=123)
2023-06-07 21:55:56,152:INFO:create_model() successfully completed......................................
2023-06-07 21:55:56,411:INFO:SubProcess create_model() end ==================================
2023-06-07 21:55:56,411:INFO:Creating metrics dataframe
2023-06-07 21:55:56,451:INFO:Initializing Ridge Regression
2023-06-07 21:55:56,451:INFO:Total runtime is 0.8886284907658895 minutes
2023-06-07 21:55:56,467:INFO:SubProcess create_model() called ==================================
2023-06-07 21:55:56,467:INFO:Initializing create_model()
2023-06-07 21:55:56,467:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A419572B90>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A419572680>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 21:55:56,467:INFO:Checking exceptions
2023-06-07 21:55:56,467:INFO:Importing libraries
2023-06-07 21:55:56,467:INFO:Copying training dataset
2023-06-07 21:55:56,547:INFO:Defining folds
2023-06-07 21:55:56,547:INFO:Declaring metric variables
2023-06-07 21:55:56,555:INFO:Importing untrained model
2023-06-07 21:55:56,579:INFO:Ridge Regression Imported successfully
2023-06-07 21:55:56,627:INFO:Starting cross validation
2023-06-07 21:55:56,643:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 21:56:06,108:INFO:Calculating mean and std
2023-06-07 21:56:06,108:INFO:Creating metrics dataframe
2023-06-07 21:56:07,101:INFO:Uploading results into container
2023-06-07 21:56:07,101:INFO:Uploading model into container now
2023-06-07 21:56:07,109:INFO:_master_model_container: 3
2023-06-07 21:56:07,109:INFO:_display_container: 2
2023-06-07 21:56:07,109:INFO:Ridge(random_state=123)
2023-06-07 21:56:07,109:INFO:create_model() successfully completed......................................
2023-06-07 21:56:07,349:INFO:SubProcess create_model() end ==================================
2023-06-07 21:56:07,349:INFO:Creating metrics dataframe
2023-06-07 21:56:07,373:INFO:Initializing Elastic Net
2023-06-07 21:56:07,373:INFO:Total runtime is 1.0706613659858704 minutes
2023-06-07 21:56:07,389:INFO:SubProcess create_model() called ==================================
2023-06-07 21:56:07,389:INFO:Initializing create_model()
2023-06-07 21:56:07,389:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A419572B90>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A419572680>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 21:56:07,389:INFO:Checking exceptions
2023-06-07 21:56:07,389:INFO:Importing libraries
2023-06-07 21:56:07,389:INFO:Copying training dataset
2023-06-07 21:56:07,485:INFO:Defining folds
2023-06-07 21:56:07,485:INFO:Declaring metric variables
2023-06-07 21:56:07,501:INFO:Importing untrained model
2023-06-07 21:56:07,509:INFO:Elastic Net Imported successfully
2023-06-07 21:56:07,541:INFO:Starting cross validation
2023-06-07 21:56:07,549:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 21:56:19,365:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.50s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-07 21:56:27,112:INFO:Calculating mean and std
2023-06-07 21:56:27,112:INFO:Creating metrics dataframe
2023-06-07 21:56:28,016:INFO:Uploading results into container
2023-06-07 21:56:28,024:INFO:Uploading model into container now
2023-06-07 21:56:28,024:INFO:_master_model_container: 4
2023-06-07 21:56:28,024:INFO:_display_container: 2
2023-06-07 21:56:28,024:INFO:ElasticNet(random_state=123)
2023-06-07 21:56:28,024:INFO:create_model() successfully completed......................................
2023-06-07 21:56:28,288:INFO:SubProcess create_model() end ==================================
2023-06-07 21:56:28,288:INFO:Creating metrics dataframe
2023-06-07 21:56:28,312:INFO:Initializing Least Angle Regression
2023-06-07 21:56:28,312:INFO:Total runtime is 1.4196489135424297 minutes
2023-06-07 21:56:28,320:INFO:SubProcess create_model() called ==================================
2023-06-07 21:56:28,320:INFO:Initializing create_model()
2023-06-07 21:56:28,320:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A419572B90>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A419572680>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 21:56:28,320:INFO:Checking exceptions
2023-06-07 21:56:28,320:INFO:Importing libraries
2023-06-07 21:56:28,320:INFO:Copying training dataset
2023-06-07 21:56:28,432:INFO:Defining folds
2023-06-07 21:56:28,432:INFO:Declaring metric variables
2023-06-07 21:56:28,448:INFO:Importing untrained model
2023-06-07 21:56:28,456:INFO:Least Angle Regression Imported successfully
2023-06-07 21:56:28,488:INFO:Starting cross validation
2023-06-07 21:56:28,496:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 21:56:38,232:INFO:Calculating mean and std
2023-06-07 21:56:38,232:INFO:Creating metrics dataframe
2023-06-07 21:56:39,312:INFO:Uploading results into container
2023-06-07 21:56:39,312:INFO:Uploading model into container now
2023-06-07 21:56:39,312:INFO:_master_model_container: 5
2023-06-07 21:56:39,312:INFO:_display_container: 2
2023-06-07 21:56:39,320:INFO:Lars(random_state=123)
2023-06-07 21:56:39,320:INFO:create_model() successfully completed......................................
2023-06-07 21:56:39,568:INFO:SubProcess create_model() end ==================================
2023-06-07 21:56:39,568:INFO:Creating metrics dataframe
2023-06-07 21:56:39,600:INFO:Initializing Lasso Least Angle Regression
2023-06-07 21:56:39,600:INFO:Total runtime is 1.6077788869539897 minutes
2023-06-07 21:56:39,616:INFO:SubProcess create_model() called ==================================
2023-06-07 21:56:39,624:INFO:Initializing create_model()
2023-06-07 21:56:39,624:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A419572B90>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A419572680>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 21:56:39,624:INFO:Checking exceptions
2023-06-07 21:56:39,624:INFO:Importing libraries
2023-06-07 21:56:39,624:INFO:Copying training dataset
2023-06-07 21:56:39,712:INFO:Defining folds
2023-06-07 21:56:39,712:INFO:Declaring metric variables
2023-06-07 21:56:39,728:INFO:Importing untrained model
2023-06-07 21:56:39,745:INFO:Lasso Least Angle Regression Imported successfully
2023-06-07 21:56:39,768:INFO:Starting cross validation
2023-06-07 21:56:39,776:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 21:56:50,012:INFO:Calculating mean and std
2023-06-07 21:56:50,012:INFO:Creating metrics dataframe
2023-06-07 21:56:50,993:INFO:Uploading results into container
2023-06-07 21:56:51,001:INFO:Uploading model into container now
2023-06-07 21:56:51,001:INFO:_master_model_container: 6
2023-06-07 21:56:51,001:INFO:_display_container: 2
2023-06-07 21:56:51,001:INFO:LassoLars(random_state=123)
2023-06-07 21:56:51,001:INFO:create_model() successfully completed......................................
2023-06-07 21:56:51,257:INFO:SubProcess create_model() end ==================================
2023-06-07 21:56:51,257:INFO:Creating metrics dataframe
2023-06-07 21:56:51,305:INFO:Initializing Orthogonal Matching Pursuit
2023-06-07 21:56:51,305:INFO:Total runtime is 1.8028556267420452 minutes
2023-06-07 21:56:51,313:INFO:SubProcess create_model() called ==================================
2023-06-07 21:56:51,313:INFO:Initializing create_model()
2023-06-07 21:56:51,313:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A419572B90>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A419572680>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 21:56:51,313:INFO:Checking exceptions
2023-06-07 21:56:51,313:INFO:Importing libraries
2023-06-07 21:56:51,313:INFO:Copying training dataset
2023-06-07 21:56:51,401:INFO:Defining folds
2023-06-07 21:56:51,401:INFO:Declaring metric variables
2023-06-07 21:56:51,409:INFO:Importing untrained model
2023-06-07 21:56:51,433:INFO:Orthogonal Matching Pursuit Imported successfully
2023-06-07 21:56:51,457:INFO:Starting cross validation
2023-06-07 21:56:51,473:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 21:57:01,295:INFO:Calculating mean and std
2023-06-07 21:57:01,295:INFO:Creating metrics dataframe
2023-06-07 21:57:02,231:INFO:Uploading results into container
2023-06-07 21:57:02,231:INFO:Uploading model into container now
2023-06-07 21:57:02,239:INFO:_master_model_container: 7
2023-06-07 21:57:02,239:INFO:_display_container: 2
2023-06-07 21:57:02,239:INFO:OrthogonalMatchingPursuit()
2023-06-07 21:57:02,239:INFO:create_model() successfully completed......................................
2023-06-07 21:57:02,479:INFO:SubProcess create_model() end ==================================
2023-06-07 21:57:02,479:INFO:Creating metrics dataframe
2023-06-07 21:57:02,519:INFO:Initializing Bayesian Ridge
2023-06-07 21:57:02,527:INFO:Total runtime is 1.9897647261619569 minutes
2023-06-07 21:57:02,535:INFO:SubProcess create_model() called ==================================
2023-06-07 21:57:02,535:INFO:Initializing create_model()
2023-06-07 21:57:02,535:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A419572B90>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A419572680>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 21:57:02,535:INFO:Checking exceptions
2023-06-07 21:57:02,535:INFO:Importing libraries
2023-06-07 21:57:02,543:INFO:Copying training dataset
2023-06-07 21:57:02,631:INFO:Defining folds
2023-06-07 21:57:02,631:INFO:Declaring metric variables
2023-06-07 21:57:02,639:INFO:Importing untrained model
2023-06-07 21:57:02,655:INFO:Bayesian Ridge Imported successfully
2023-06-07 21:57:02,679:INFO:Starting cross validation
2023-06-07 21:57:02,679:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 21:57:17,008:INFO:Calculating mean and std
2023-06-07 21:57:17,008:INFO:Creating metrics dataframe
2023-06-07 21:57:18,129:INFO:Uploading results into container
2023-06-07 21:57:18,129:INFO:Uploading model into container now
2023-06-07 21:57:18,129:INFO:_master_model_container: 8
2023-06-07 21:57:18,129:INFO:_display_container: 2
2023-06-07 21:57:18,129:INFO:BayesianRidge()
2023-06-07 21:57:18,129:INFO:create_model() successfully completed......................................
2023-06-07 21:57:18,377:INFO:SubProcess create_model() end ==================================
2023-06-07 21:57:18,377:INFO:Creating metrics dataframe
2023-06-07 21:57:18,409:INFO:Initializing Passive Aggressive Regressor
2023-06-07 21:57:18,409:INFO:Total runtime is 2.25459600687027 minutes
2023-06-07 21:57:18,425:INFO:SubProcess create_model() called ==================================
2023-06-07 21:57:18,425:INFO:Initializing create_model()
2023-06-07 21:57:18,425:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A419572B90>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A419572680>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 21:57:18,425:INFO:Checking exceptions
2023-06-07 21:57:18,425:INFO:Importing libraries
2023-06-07 21:57:18,425:INFO:Copying training dataset
2023-06-07 21:57:18,513:INFO:Defining folds
2023-06-07 21:57:18,513:INFO:Declaring metric variables
2023-06-07 21:57:18,537:INFO:Importing untrained model
2023-06-07 21:57:18,553:INFO:Passive Aggressive Regressor Imported successfully
2023-06-07 21:57:18,577:INFO:Starting cross validation
2023-06-07 21:57:18,585:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 21:57:29,542:INFO:Calculating mean and std
2023-06-07 21:57:29,542:INFO:Creating metrics dataframe
2023-06-07 21:57:30,656:INFO:Uploading results into container
2023-06-07 21:57:30,664:INFO:Uploading model into container now
2023-06-07 21:57:30,664:INFO:_master_model_container: 9
2023-06-07 21:57:30,664:INFO:_display_container: 2
2023-06-07 21:57:30,664:INFO:PassiveAggressiveRegressor(random_state=123)
2023-06-07 21:57:30,664:INFO:create_model() successfully completed......................................
2023-06-07 21:57:30,952:INFO:SubProcess create_model() end ==================================
2023-06-07 21:57:30,952:INFO:Creating metrics dataframe
2023-06-07 21:57:30,984:INFO:Initializing Huber Regressor
2023-06-07 21:57:30,984:INFO:Total runtime is 2.464176646868388 minutes
2023-06-07 21:57:30,992:INFO:SubProcess create_model() called ==================================
2023-06-07 21:57:30,992:INFO:Initializing create_model()
2023-06-07 21:57:31,000:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A419572B90>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A419572680>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 21:57:31,000:INFO:Checking exceptions
2023-06-07 21:57:31,000:INFO:Importing libraries
2023-06-07 21:57:31,000:INFO:Copying training dataset
2023-06-07 21:57:31,104:INFO:Defining folds
2023-06-07 21:57:31,104:INFO:Declaring metric variables
2023-06-07 21:57:31,120:INFO:Importing untrained model
2023-06-07 21:57:31,128:INFO:Huber Regressor Imported successfully
2023-06-07 21:57:31,168:INFO:Starting cross validation
2023-06-07 21:57:31,176:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 21:57:40,875:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-06-07 21:57:41,899:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.50s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-07 21:57:41,979:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.56s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-07 21:57:42,139:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-06-07 21:57:42,243:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-06-07 21:57:42,347:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-06-07 21:57:46,027:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-06-07 21:57:46,360:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-06-07 21:57:48,352:INFO:Calculating mean and std
2023-06-07 21:57:48,352:INFO:Creating metrics dataframe
2023-06-07 21:57:49,352:INFO:Uploading results into container
2023-06-07 21:57:49,360:INFO:Uploading model into container now
2023-06-07 21:57:49,360:INFO:_master_model_container: 10
2023-06-07 21:57:49,360:INFO:_display_container: 2
2023-06-07 21:57:49,360:INFO:HuberRegressor()
2023-06-07 21:57:49,360:INFO:create_model() successfully completed......................................
2023-06-07 21:57:49,656:INFO:SubProcess create_model() end ==================================
2023-06-07 21:57:49,656:INFO:Creating metrics dataframe
2023-06-07 21:57:49,688:INFO:Initializing K Neighbors Regressor
2023-06-07 21:57:49,688:INFO:Total runtime is 2.775915781656901 minutes
2023-06-07 21:57:49,696:INFO:SubProcess create_model() called ==================================
2023-06-07 21:57:49,696:INFO:Initializing create_model()
2023-06-07 21:57:49,704:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A419572B90>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A419572680>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 21:57:49,704:INFO:Checking exceptions
2023-06-07 21:57:49,704:INFO:Importing libraries
2023-06-07 21:57:49,704:INFO:Copying training dataset
2023-06-07 21:57:49,840:INFO:Defining folds
2023-06-07 21:57:49,848:INFO:Declaring metric variables
2023-06-07 21:57:49,856:INFO:Importing untrained model
2023-06-07 21:57:49,872:INFO:K Neighbors Regressor Imported successfully
2023-06-07 21:57:49,888:INFO:Starting cross validation
2023-06-07 21:57:49,896:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 21:58:02,636:INFO:Calculating mean and std
2023-06-07 21:58:02,636:INFO:Creating metrics dataframe
2023-06-07 21:58:03,748:INFO:Uploading results into container
2023-06-07 21:58:03,748:INFO:Uploading model into container now
2023-06-07 21:58:03,748:INFO:_master_model_container: 11
2023-06-07 21:58:03,748:INFO:_display_container: 2
2023-06-07 21:58:03,748:INFO:KNeighborsRegressor(n_jobs=-1)
2023-06-07 21:58:03,756:INFO:create_model() successfully completed......................................
2023-06-07 21:58:04,001:INFO:SubProcess create_model() end ==================================
2023-06-07 21:58:04,001:INFO:Creating metrics dataframe
2023-06-07 21:58:04,049:INFO:Initializing Decision Tree Regressor
2023-06-07 21:58:04,049:INFO:Total runtime is 3.01525631348292 minutes
2023-06-07 21:58:04,065:INFO:SubProcess create_model() called ==================================
2023-06-07 21:58:04,065:INFO:Initializing create_model()
2023-06-07 21:58:04,065:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A419572B90>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A419572680>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 21:58:04,065:INFO:Checking exceptions
2023-06-07 21:58:04,065:INFO:Importing libraries
2023-06-07 21:58:04,065:INFO:Copying training dataset
2023-06-07 21:58:04,153:INFO:Defining folds
2023-06-07 21:58:04,153:INFO:Declaring metric variables
2023-06-07 21:58:04,169:INFO:Importing untrained model
2023-06-07 21:58:04,185:INFO:Decision Tree Regressor Imported successfully
2023-06-07 21:58:04,209:INFO:Starting cross validation
2023-06-07 21:58:04,217:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 21:58:16,109:INFO:Calculating mean and std
2023-06-07 21:58:16,109:INFO:Creating metrics dataframe
2023-06-07 21:58:17,218:INFO:Uploading results into container
2023-06-07 21:58:17,226:INFO:Uploading model into container now
2023-06-07 21:58:17,226:INFO:_master_model_container: 12
2023-06-07 21:58:17,226:INFO:_display_container: 2
2023-06-07 21:58:17,226:INFO:DecisionTreeRegressor(random_state=123)
2023-06-07 21:58:17,226:INFO:create_model() successfully completed......................................
2023-06-07 21:58:17,475:INFO:SubProcess create_model() end ==================================
2023-06-07 21:58:17,475:INFO:Creating metrics dataframe
2023-06-07 21:58:17,499:INFO:Initializing Random Forest Regressor
2023-06-07 21:58:17,499:INFO:Total runtime is 3.239422317345937 minutes
2023-06-07 21:58:17,507:INFO:SubProcess create_model() called ==================================
2023-06-07 21:58:17,507:INFO:Initializing create_model()
2023-06-07 21:58:17,515:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A419572B90>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A419572680>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 21:58:17,515:INFO:Checking exceptions
2023-06-07 21:58:17,515:INFO:Importing libraries
2023-06-07 21:58:17,515:INFO:Copying training dataset
2023-06-07 21:58:17,595:INFO:Defining folds
2023-06-07 21:58:17,595:INFO:Declaring metric variables
2023-06-07 21:58:17,611:INFO:Importing untrained model
2023-06-07 21:58:17,627:INFO:Random Forest Regressor Imported successfully
2023-06-07 21:58:17,651:INFO:Starting cross validation
2023-06-07 21:58:17,651:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 21:59:31,442:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.81s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-07 21:59:31,514:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.81s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-07 21:59:54,449:INFO:Calculating mean and std
2023-06-07 21:59:54,449:INFO:Creating metrics dataframe
2023-06-07 21:59:55,297:INFO:Uploading results into container
2023-06-07 21:59:55,297:INFO:Uploading model into container now
2023-06-07 21:59:55,297:INFO:_master_model_container: 13
2023-06-07 21:59:55,297:INFO:_display_container: 2
2023-06-07 21:59:55,297:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2023-06-07 21:59:55,297:INFO:create_model() successfully completed......................................
2023-06-07 21:59:55,521:INFO:SubProcess create_model() end ==================================
2023-06-07 21:59:55,521:INFO:Creating metrics dataframe
2023-06-07 21:59:55,593:INFO:Initializing Extra Trees Regressor
2023-06-07 21:59:55,601:INFO:Total runtime is 4.87446916103363 minutes
2023-06-07 21:59:55,610:INFO:SubProcess create_model() called ==================================
2023-06-07 21:59:55,610:INFO:Initializing create_model()
2023-06-07 21:59:55,610:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A419572B90>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A419572680>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 21:59:55,610:INFO:Checking exceptions
2023-06-07 21:59:55,618:INFO:Importing libraries
2023-06-07 21:59:55,618:INFO:Copying training dataset
2023-06-07 21:59:55,738:INFO:Defining folds
2023-06-07 21:59:55,738:INFO:Declaring metric variables
2023-06-07 21:59:55,754:INFO:Importing untrained model
2023-06-07 21:59:55,770:INFO:Extra Trees Regressor Imported successfully
2023-06-07 21:59:55,802:INFO:Starting cross validation
2023-06-07 21:59:55,810:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 22:00:48,316:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.90s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-07 22:00:48,404:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.98s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-07 22:00:50,773:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.53s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-07 22:01:05,534:INFO:Calculating mean and std
2023-06-07 22:01:05,534:INFO:Creating metrics dataframe
2023-06-07 22:01:06,350:INFO:Uploading results into container
2023-06-07 22:01:06,350:INFO:Uploading model into container now
2023-06-07 22:01:06,350:INFO:_master_model_container: 14
2023-06-07 22:01:06,350:INFO:_display_container: 2
2023-06-07 22:01:06,350:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2023-06-07 22:01:06,350:INFO:create_model() successfully completed......................................
2023-06-07 22:01:06,582:INFO:SubProcess create_model() end ==================================
2023-06-07 22:01:06,582:INFO:Creating metrics dataframe
2023-06-07 22:01:06,630:INFO:Initializing AdaBoost Regressor
2023-06-07 22:01:06,630:INFO:Total runtime is 6.058277992407481 minutes
2023-06-07 22:01:06,638:INFO:SubProcess create_model() called ==================================
2023-06-07 22:01:06,638:INFO:Initializing create_model()
2023-06-07 22:01:06,638:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A419572B90>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A419572680>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 22:01:06,638:INFO:Checking exceptions
2023-06-07 22:01:06,638:INFO:Importing libraries
2023-06-07 22:01:06,638:INFO:Copying training dataset
2023-06-07 22:01:06,742:INFO:Defining folds
2023-06-07 22:01:06,742:INFO:Declaring metric variables
2023-06-07 22:01:06,758:INFO:Importing untrained model
2023-06-07 22:01:06,766:INFO:AdaBoost Regressor Imported successfully
2023-06-07 22:01:06,798:INFO:Starting cross validation
2023-06-07 22:01:06,806:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 22:01:34,307:INFO:Calculating mean and std
2023-06-07 22:01:34,307:INFO:Creating metrics dataframe
2023-06-07 22:01:35,323:INFO:Uploading results into container
2023-06-07 22:01:35,323:INFO:Uploading model into container now
2023-06-07 22:01:35,323:INFO:_master_model_container: 15
2023-06-07 22:01:35,323:INFO:_display_container: 2
2023-06-07 22:01:35,323:INFO:AdaBoostRegressor(random_state=123)
2023-06-07 22:01:35,323:INFO:create_model() successfully completed......................................
2023-06-07 22:01:35,571:INFO:SubProcess create_model() end ==================================
2023-06-07 22:01:35,571:INFO:Creating metrics dataframe
2023-06-07 22:01:35,619:INFO:Initializing Gradient Boosting Regressor
2023-06-07 22:01:35,619:INFO:Total runtime is 6.541429467995962 minutes
2023-06-07 22:01:35,635:INFO:SubProcess create_model() called ==================================
2023-06-07 22:01:35,635:INFO:Initializing create_model()
2023-06-07 22:01:35,635:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A419572B90>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A419572680>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 22:01:35,635:INFO:Checking exceptions
2023-06-07 22:01:35,635:INFO:Importing libraries
2023-06-07 22:01:35,635:INFO:Copying training dataset
2023-06-07 22:01:35,731:INFO:Defining folds
2023-06-07 22:01:35,731:INFO:Declaring metric variables
2023-06-07 22:01:35,739:INFO:Importing untrained model
2023-06-07 22:01:35,755:INFO:Gradient Boosting Regressor Imported successfully
2023-06-07 22:01:35,779:INFO:Starting cross validation
2023-06-07 22:01:35,787:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 22:02:53,660:INFO:Calculating mean and std
2023-06-07 22:02:53,660:INFO:Creating metrics dataframe
2023-06-07 22:02:54,754:INFO:Uploading results into container
2023-06-07 22:02:54,754:INFO:Uploading model into container now
2023-06-07 22:02:54,754:INFO:_master_model_container: 16
2023-06-07 22:02:54,754:INFO:_display_container: 2
2023-06-07 22:02:54,754:INFO:GradientBoostingRegressor(random_state=123)
2023-06-07 22:02:54,754:INFO:create_model() successfully completed......................................
2023-06-07 22:02:55,013:INFO:SubProcess create_model() end ==================================
2023-06-07 22:02:55,013:INFO:Creating metrics dataframe
2023-06-07 22:02:55,061:INFO:Initializing Light Gradient Boosting Machine
2023-06-07 22:02:55,069:INFO:Total runtime is 7.8654623389244085 minutes
2023-06-07 22:02:55,077:INFO:SubProcess create_model() called ==================================
2023-06-07 22:02:55,077:INFO:Initializing create_model()
2023-06-07 22:02:55,085:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A419572B90>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A419572680>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 22:02:55,085:INFO:Checking exceptions
2023-06-07 22:02:55,085:INFO:Importing libraries
2023-06-07 22:02:55,087:INFO:Copying training dataset
2023-06-07 22:02:55,178:INFO:Defining folds
2023-06-07 22:02:55,178:INFO:Declaring metric variables
2023-06-07 22:02:55,195:INFO:Importing untrained model
2023-06-07 22:02:55,211:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-07 22:02:55,238:INFO:Starting cross validation
2023-06-07 22:02:55,238:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 22:03:14,976:INFO:Calculating mean and std
2023-06-07 22:03:14,976:INFO:Creating metrics dataframe
2023-06-07 22:03:16,234:INFO:Uploading results into container
2023-06-07 22:03:16,234:INFO:Uploading model into container now
2023-06-07 22:03:16,234:INFO:_master_model_container: 17
2023-06-07 22:03:16,234:INFO:_display_container: 2
2023-06-07 22:03:16,234:INFO:LGBMRegressor(random_state=123)
2023-06-07 22:03:16,234:INFO:create_model() successfully completed......................................
2023-06-07 22:03:16,509:INFO:SubProcess create_model() end ==================================
2023-06-07 22:03:16,509:INFO:Creating metrics dataframe
2023-06-07 22:03:16,573:INFO:Initializing Dummy Regressor
2023-06-07 22:03:16,573:INFO:Total runtime is 8.223998796939851 minutes
2023-06-07 22:03:16,581:INFO:SubProcess create_model() called ==================================
2023-06-07 22:03:16,589:INFO:Initializing create_model()
2023-06-07 22:03:16,589:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A419572B90>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A419572680>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 22:03:16,589:INFO:Checking exceptions
2023-06-07 22:03:16,589:INFO:Importing libraries
2023-06-07 22:03:16,589:INFO:Copying training dataset
2023-06-07 22:03:16,688:INFO:Defining folds
2023-06-07 22:03:16,688:INFO:Declaring metric variables
2023-06-07 22:03:16,704:INFO:Importing untrained model
2023-06-07 22:03:16,712:INFO:Dummy Regressor Imported successfully
2023-06-07 22:03:16,737:INFO:Starting cross validation
2023-06-07 22:03:16,745:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 22:03:31,527:INFO:Calculating mean and std
2023-06-07 22:03:31,527:INFO:Creating metrics dataframe
2023-06-07 22:03:33,229:INFO:Uploading results into container
2023-06-07 22:03:33,229:INFO:Uploading model into container now
2023-06-07 22:03:33,229:INFO:_master_model_container: 18
2023-06-07 22:03:33,229:INFO:_display_container: 2
2023-06-07 22:03:33,229:INFO:DummyRegressor()
2023-06-07 22:03:33,229:INFO:create_model() successfully completed......................................
2023-06-07 22:03:33,528:INFO:SubProcess create_model() end ==================================
2023-06-07 22:03:33,528:INFO:Creating metrics dataframe
2023-06-07 22:03:33,609:INFO:Initializing create_model()
2023-06-07 22:03:33,609:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A419572B90>, estimator=LinearRegression(n_jobs=-1), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-07 22:03:33,609:INFO:Checking exceptions
2023-06-07 22:03:33,625:INFO:Importing libraries
2023-06-07 22:03:33,625:INFO:Copying training dataset
2023-06-07 22:03:33,781:INFO:Defining folds
2023-06-07 22:03:33,781:INFO:Declaring metric variables
2023-06-07 22:03:33,781:INFO:Importing untrained model
2023-06-07 22:03:33,781:INFO:Declaring custom model
2023-06-07 22:03:33,781:INFO:Linear Regression Imported successfully
2023-06-07 22:03:33,789:INFO:Cross validation set to False
2023-06-07 22:03:33,789:INFO:Fitting Model
2023-06-07 22:03:37,010:INFO:LinearRegression(n_jobs=-1)
2023-06-07 22:03:37,010:INFO:create_model() successfully completed......................................
2023-06-07 22:03:37,460:INFO:_master_model_container: 18
2023-06-07 22:03:37,460:INFO:_display_container: 2
2023-06-07 22:03:37,460:INFO:LinearRegression(n_jobs=-1)
2023-06-07 22:03:37,460:INFO:compare_models() successfully completed......................................
2023-06-07 22:03:40,186:INFO:Initializing plot_model()
2023-06-07 22:03:40,186:INFO:plot_model(plot=residuals, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LinearRegression(n_jobs=-1), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A419572B90>, system=True)
2023-06-07 22:03:40,186:INFO:Checking exceptions
2023-06-07 22:03:40,252:INFO:Preloading libraries
2023-06-07 22:03:40,252:INFO:Copying training dataset
2023-06-07 22:03:40,252:INFO:Plot type: residuals
2023-06-07 22:03:41,086:INFO:Fitting Model
2023-06-07 22:03:41,273:INFO:Scoring test/hold-out set
2023-06-07 22:03:50,761:INFO:Visual Rendered Successfully
2023-06-07 22:03:51,035:INFO:plot_model() successfully completed......................................
2023-06-07 22:03:51,304:INFO:Initializing plot_model()
2023-06-07 22:03:51,312:INFO:plot_model(plot=feature, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LinearRegression(n_jobs=-1), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A419572B90>, system=True)
2023-06-07 22:03:51,312:INFO:Checking exceptions
2023-06-07 22:03:51,370:INFO:Preloading libraries
2023-06-07 22:03:51,370:INFO:Copying training dataset
2023-06-07 22:03:51,370:INFO:Plot type: feature
2023-06-07 22:03:52,179:INFO:Visual Rendered Successfully
2023-06-07 22:03:52,420:INFO:plot_model() successfully completed......................................
2023-06-07 22:03:52,564:INFO:Initializing predict_model()
2023-06-07 22:03:52,564:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A419572B90>, estimator=LinearRegression(n_jobs=-1), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001A41BC46320>)
2023-06-07 22:03:52,564:INFO:Checking exceptions
2023-06-07 22:03:52,564:INFO:Preloading libraries
2023-06-07 22:03:53,296:INFO:Initializing predict_model()
2023-06-07 22:03:53,296:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A419572B90>, estimator=LinearRegression(n_jobs=-1), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001A41BC46440>)
2023-06-07 22:03:53,296:INFO:Checking exceptions
2023-06-07 22:03:53,296:INFO:Preloading libraries
2023-06-07 22:03:53,304:INFO:Set up data.
2023-06-07 22:03:53,344:INFO:Set up index.
2023-06-07 22:07:15,573:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-07 22:07:15,573:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-07 22:07:15,573:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-07 22:07:15,573:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-07 22:07:18,552:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-07 22:10:19,852:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-07 22:10:19,853:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-07 22:10:19,853:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-07 22:10:19,853:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-07 22:10:20,931:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-07 22:10:23,606:INFO:PyCaret RegressionExperiment
2023-06-07 22:10:23,606:INFO:Logging name: reg-default-name
2023-06-07 22:10:23,606:INFO:ML Usecase: MLUsecase.REGRESSION
2023-06-07 22:10:23,606:INFO:version 3.0.2
2023-06-07 22:10:23,606:INFO:Initializing setup()
2023-06-07 22:10:23,606:INFO:self.USI: bf43
2023-06-07 22:10:23,606:INFO:self._variable_keys: {'fold_groups_param', 'n_jobs_param', 'data', 'X_test', 'gpu_n_jobs_param', 'logging_param', 'y', 'gpu_param', 'fold_generator', 'exp_id', 'transform_target_param', 'pipeline', 'log_plots_param', 'seed', 'X_train', 'memory', '_available_plots', 'fold_shuffle_param', 'html_param', 'X', 'USI', 'idx', 'y_test', 'y_train', '_ml_usecase', 'target_param', 'exp_name_log'}
2023-06-07 22:10:23,606:INFO:Checking environment
2023-06-07 22:10:23,607:INFO:python_version: 3.10.9
2023-06-07 22:10:23,607:INFO:python_build: ('main', 'Mar  1 2023 18:18:15')
2023-06-07 22:10:23,607:INFO:machine: AMD64
2023-06-07 22:10:23,607:INFO:platform: Windows-10-10.0.19041-SP0
2023-06-07 22:10:23,607:INFO:Memory: svmem(total=6378106880, available=2397126656, percent=62.4, used=3980980224, free=2397126656)
2023-06-07 22:10:23,607:INFO:Physical Core: 4
2023-06-07 22:10:23,607:INFO:Logical Core: 8
2023-06-07 22:10:23,607:INFO:Checking libraries
2023-06-07 22:10:23,607:INFO:System:
2023-06-07 22:10:23,607:INFO:    python: 3.10.9 | packaged by Anaconda, Inc. | (main, Mar  1 2023, 18:18:15) [MSC v.1916 64 bit (AMD64)]
2023-06-07 22:10:23,607:INFO:executable: c:\Users\Crossddelta\anaconda3\python.exe
2023-06-07 22:10:23,607:INFO:   machine: Windows-10-10.0.19041-SP0
2023-06-07 22:10:23,607:INFO:PyCaret required dependencies:
2023-06-07 22:10:23,608:INFO:                 pip: 22.3.1
2023-06-07 22:10:23,608:INFO:          setuptools: 65.6.3
2023-06-07 22:10:23,608:INFO:             pycaret: 3.0.2
2023-06-07 22:10:23,608:INFO:             IPython: 8.10.0
2023-06-07 22:10:23,608:INFO:          ipywidgets: 7.6.5
2023-06-07 22:10:23,608:INFO:                tqdm: 4.64.1
2023-06-07 22:10:23,608:INFO:               numpy: 1.23.5
2023-06-07 22:10:23,608:INFO:              pandas: 1.5.3
2023-06-07 22:10:23,608:INFO:              jinja2: 3.1.2
2023-06-07 22:10:23,608:INFO:               scipy: 1.10.0
2023-06-07 22:10:23,608:INFO:              joblib: 1.2.0
2023-06-07 22:10:23,609:INFO:             sklearn: 1.2.1
2023-06-07 22:10:23,609:INFO:                pyod: 1.0.9
2023-06-07 22:10:23,609:INFO:            imblearn: 0.10.1
2023-06-07 22:10:23,609:INFO:   category_encoders: 2.6.1
2023-06-07 22:10:23,609:INFO:            lightgbm: 3.3.5
2023-06-07 22:10:23,609:INFO:               numba: 0.56.4
2023-06-07 22:10:23,609:INFO:            requests: 2.28.1
2023-06-07 22:10:23,609:INFO:          matplotlib: 3.7.0
2023-06-07 22:10:23,609:INFO:          scikitplot: 0.3.7
2023-06-07 22:10:23,609:INFO:         yellowbrick: 1.5
2023-06-07 22:10:23,609:INFO:              plotly: 5.9.0
2023-06-07 22:10:23,609:INFO:             kaleido: 0.2.1
2023-06-07 22:10:23,609:INFO:         statsmodels: 0.13.5
2023-06-07 22:10:23,609:INFO:              sktime: 0.17.0
2023-06-07 22:10:23,609:INFO:               tbats: 1.1.3
2023-06-07 22:10:23,610:INFO:            pmdarima: 2.0.3
2023-06-07 22:10:23,610:INFO:              psutil: 5.9.0
2023-06-07 22:10:23,610:INFO:PyCaret optional dependencies:
2023-06-07 22:10:23,631:INFO:                shap: Not installed
2023-06-07 22:10:23,632:INFO:           interpret: Not installed
2023-06-07 22:10:23,632:INFO:                umap: Not installed
2023-06-07 22:10:23,632:INFO:    pandas_profiling: Not installed
2023-06-07 22:10:23,632:INFO:  explainerdashboard: Not installed
2023-06-07 22:10:23,632:INFO:             autoviz: Not installed
2023-06-07 22:10:23,632:INFO:           fairlearn: Not installed
2023-06-07 22:10:23,632:INFO:             xgboost: Not installed
2023-06-07 22:10:23,632:INFO:            catboost: Not installed
2023-06-07 22:10:23,632:INFO:              kmodes: Not installed
2023-06-07 22:10:23,632:INFO:             mlxtend: Not installed
2023-06-07 22:10:23,632:INFO:       statsforecast: Not installed
2023-06-07 22:10:23,632:INFO:        tune_sklearn: Not installed
2023-06-07 22:10:23,632:INFO:                 ray: Not installed
2023-06-07 22:10:23,632:INFO:            hyperopt: Not installed
2023-06-07 22:10:23,632:INFO:              optuna: Not installed
2023-06-07 22:10:23,633:INFO:               skopt: Not installed
2023-06-07 22:10:23,633:INFO:              mlflow: Not installed
2023-06-07 22:10:23,633:INFO:              gradio: Not installed
2023-06-07 22:10:23,633:INFO:             fastapi: Not installed
2023-06-07 22:10:23,633:INFO:             uvicorn: Not installed
2023-06-07 22:10:23,633:INFO:              m2cgen: Not installed
2023-06-07 22:10:23,633:INFO:           evidently: Not installed
2023-06-07 22:10:23,633:INFO:               fugue: Not installed
2023-06-07 22:10:23,633:INFO:           streamlit: 1.23.1
2023-06-07 22:10:23,633:INFO:             prophet: Not installed
2023-06-07 22:10:23,633:INFO:None
2023-06-07 22:10:23,633:INFO:Set up data.
2023-06-07 22:10:23,703:INFO:Set up train/test split.
2023-06-07 22:10:23,731:INFO:Set up index.
2023-06-07 22:10:23,735:INFO:Set up folding strategy.
2023-06-07 22:10:23,735:INFO:Assigning column types.
2023-06-07 22:10:23,746:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-07 22:10:23,746:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-07 22:10:23,753:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-07 22:10:23,761:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-07 22:10:23,883:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 22:10:23,953:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-07 22:10:23,954:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 22:10:24,297:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 22:10:24,298:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-07 22:10:24,305:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-07 22:10:24,312:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-07 22:10:24,421:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 22:10:24,491:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-07 22:10:24,492:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 22:10:24,493:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 22:10:24,493:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-06-07 22:10:24,500:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-07 22:10:24,508:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-07 22:10:24,617:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 22:10:24,686:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-07 22:10:24,687:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 22:10:24,687:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 22:10:24,694:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-07 22:10:24,702:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-07 22:10:24,812:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 22:10:24,880:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-07 22:10:24,880:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 22:10:24,881:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 22:10:24,881:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-06-07 22:10:24,895:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-07 22:10:25,007:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 22:10:25,080:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-07 22:10:25,081:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 22:10:25,082:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 22:10:25,096:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-07 22:10:25,213:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 22:10:25,280:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-07 22:10:25,281:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 22:10:25,281:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 22:10:25,281:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-06-07 22:10:25,399:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 22:10:25,469:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-07 22:10:25,470:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 22:10:25,470:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 22:10:25,613:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 22:10:25,685:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-07 22:10:25,686:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 22:10:25,686:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 22:10:25,687:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-07 22:10:25,832:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 22:10:25,906:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 22:10:25,906:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 22:10:26,047:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-07 22:10:26,120:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 22:10:26,121:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 22:10:26,122:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-06-07 22:10:26,342:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 22:10:26,343:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 22:10:26,556:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 22:10:26,557:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 22:10:26,561:INFO:Preparing preprocessing pipeline...
2023-06-07 22:10:26,561:INFO:Set up simple imputation.
2023-06-07 22:10:26,581:INFO:Set up encoding of categorical features.
2023-06-07 22:10:27,510:INFO:Finished creating preprocessing pipeline.
2023-06-07 22:10:27,524:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\CROSSD~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['SN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Commodity', 'Date', 'Unit'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Unit'],
                                    transformer=OneHotEncoder(cols=['Unit'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['Commodity', 'Date'],
                                    transformer=TargetEncoder(cols=['Commodity',
                                                                    'Date'],
                                                              handle_missing='return_nan')))])
2023-06-07 22:10:27,524:INFO:Creating final display dataframe.
2023-06-07 22:10:28,616:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target           Average
2                   Target type        Regression
3           Original data shape       (187303, 5)
4        Transformed data shape       (187303, 8)
5   Transformed train set shape       (131112, 8)
6    Transformed test set shape        (56191, 8)
7              Numeric features                 1
8          Categorical features                 3
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15               Fold Generator             KFold
16                  Fold Number                10
17                     CPU Jobs                -1
18                      Use GPU             False
19               Log Experiment             False
20              Experiment Name  reg-default-name
21                          USI              bf43
2023-06-07 22:10:28,844:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 22:10:28,844:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 22:10:29,063:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 22:10:29,063:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-07 22:10:29,064:INFO:setup() successfully completed in 6.05s...............
2023-06-07 22:10:29,123:INFO:Initializing compare_models()
2023-06-07 22:10:29,123:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000146DE7D5B40>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x00000146DE7D5B40>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2023-06-07 22:10:29,124:INFO:Checking exceptions
2023-06-07 22:10:29,144:INFO:Preparing display monitor
2023-06-07 22:10:29,191:INFO:Initializing Linear Regression
2023-06-07 22:10:29,192:INFO:Total runtime is 1.6677379608154298e-05 minutes
2023-06-07 22:10:29,202:INFO:SubProcess create_model() called ==================================
2023-06-07 22:10:29,203:INFO:Initializing create_model()
2023-06-07 22:10:29,204:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000146DE7D5B40>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000146E3B024D0>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 22:10:29,205:INFO:Checking exceptions
2023-06-07 22:10:29,206:INFO:Importing libraries
2023-06-07 22:10:29,207:INFO:Copying training dataset
2023-06-07 22:10:29,335:INFO:Defining folds
2023-06-07 22:10:29,336:INFO:Declaring metric variables
2023-06-07 22:10:29,345:INFO:Importing untrained model
2023-06-07 22:10:29,352:INFO:Linear Regression Imported successfully
2023-06-07 22:10:29,368:INFO:Starting cross validation
2023-06-07 22:10:29,382:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 22:10:50,636:INFO:Calculating mean and std
2023-06-07 22:10:50,639:INFO:Creating metrics dataframe
2023-06-07 22:10:51,250:INFO:Uploading results into container
2023-06-07 22:10:51,251:INFO:Uploading model into container now
2023-06-07 22:10:51,252:INFO:_master_model_container: 1
2023-06-07 22:10:51,252:INFO:_display_container: 2
2023-06-07 22:10:51,252:INFO:LinearRegression(n_jobs=-1)
2023-06-07 22:10:51,253:INFO:create_model() successfully completed......................................
2023-06-07 22:10:51,389:INFO:SubProcess create_model() end ==================================
2023-06-07 22:10:51,390:INFO:Creating metrics dataframe
2023-06-07 22:10:51,403:INFO:Initializing Lasso Regression
2023-06-07 22:10:51,403:INFO:Total runtime is 0.3701988259951273 minutes
2023-06-07 22:10:51,409:INFO:SubProcess create_model() called ==================================
2023-06-07 22:10:51,410:INFO:Initializing create_model()
2023-06-07 22:10:51,410:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000146DE7D5B40>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000146E3B024D0>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 22:10:51,410:INFO:Checking exceptions
2023-06-07 22:10:51,410:INFO:Importing libraries
2023-06-07 22:10:51,410:INFO:Copying training dataset
2023-06-07 22:10:51,448:INFO:Defining folds
2023-06-07 22:10:51,448:INFO:Declaring metric variables
2023-06-07 22:10:51,454:INFO:Importing untrained model
2023-06-07 22:10:51,461:INFO:Lasso Regression Imported successfully
2023-06-07 22:10:51,472:INFO:Starting cross validation
2023-06-07 22:10:51,474:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 22:10:59,989:INFO:Calculating mean and std
2023-06-07 22:10:59,991:INFO:Creating metrics dataframe
2023-06-07 22:11:00,650:INFO:Uploading results into container
2023-06-07 22:11:00,654:INFO:Uploading model into container now
2023-06-07 22:11:00,655:INFO:_master_model_container: 2
2023-06-07 22:11:00,655:INFO:_display_container: 2
2023-06-07 22:11:00,656:INFO:Lasso(random_state=123)
2023-06-07 22:11:00,656:INFO:create_model() successfully completed......................................
2023-06-07 22:11:00,784:INFO:SubProcess create_model() end ==================================
2023-06-07 22:11:00,784:INFO:Creating metrics dataframe
2023-06-07 22:11:00,798:INFO:Initializing Ridge Regression
2023-06-07 22:11:00,799:INFO:Total runtime is 0.5268078009287516 minutes
2023-06-07 22:11:00,804:INFO:SubProcess create_model() called ==================================
2023-06-07 22:11:00,804:INFO:Initializing create_model()
2023-06-07 22:11:00,805:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000146DE7D5B40>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000146E3B024D0>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 22:11:00,806:INFO:Checking exceptions
2023-06-07 22:11:00,806:INFO:Importing libraries
2023-06-07 22:11:00,807:INFO:Copying training dataset
2023-06-07 22:11:00,845:INFO:Defining folds
2023-06-07 22:11:00,846:INFO:Declaring metric variables
2023-06-07 22:11:00,852:INFO:Importing untrained model
2023-06-07 22:11:00,859:INFO:Ridge Regression Imported successfully
2023-06-07 22:11:00,868:INFO:Starting cross validation
2023-06-07 22:11:00,871:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 22:11:08,039:INFO:Calculating mean and std
2023-06-07 22:11:08,041:INFO:Creating metrics dataframe
2023-06-07 22:11:08,724:INFO:Uploading results into container
2023-06-07 22:11:08,725:INFO:Uploading model into container now
2023-06-07 22:11:08,726:INFO:_master_model_container: 3
2023-06-07 22:11:08,726:INFO:_display_container: 2
2023-06-07 22:11:08,727:INFO:Ridge(random_state=123)
2023-06-07 22:11:08,727:INFO:create_model() successfully completed......................................
2023-06-07 22:11:08,850:INFO:SubProcess create_model() end ==================================
2023-06-07 22:11:08,851:INFO:Creating metrics dataframe
2023-06-07 22:11:08,865:INFO:Initializing Elastic Net
2023-06-07 22:11:08,865:INFO:Total runtime is 0.6612417618433634 minutes
2023-06-07 22:11:08,871:INFO:SubProcess create_model() called ==================================
2023-06-07 22:11:08,872:INFO:Initializing create_model()
2023-06-07 22:11:08,872:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000146DE7D5B40>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000146E3B024D0>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 22:11:08,872:INFO:Checking exceptions
2023-06-07 22:11:08,873:INFO:Importing libraries
2023-06-07 22:11:08,873:INFO:Copying training dataset
2023-06-07 22:11:08,913:INFO:Defining folds
2023-06-07 22:11:08,913:INFO:Declaring metric variables
2023-06-07 22:11:08,920:INFO:Importing untrained model
2023-06-07 22:11:08,927:INFO:Elastic Net Imported successfully
2023-06-07 22:11:08,936:INFO:Starting cross validation
2023-06-07 22:11:08,941:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 22:11:17,938:INFO:Calculating mean and std
2023-06-07 22:11:17,940:INFO:Creating metrics dataframe
2023-06-07 22:11:18,580:INFO:Uploading results into container
2023-06-07 22:11:18,581:INFO:Uploading model into container now
2023-06-07 22:11:18,582:INFO:_master_model_container: 4
2023-06-07 22:11:18,582:INFO:_display_container: 2
2023-06-07 22:11:18,583:INFO:ElasticNet(random_state=123)
2023-06-07 22:11:18,583:INFO:create_model() successfully completed......................................
2023-06-07 22:11:18,714:INFO:SubProcess create_model() end ==================================
2023-06-07 22:11:18,715:INFO:Creating metrics dataframe
2023-06-07 22:11:18,732:INFO:Initializing Least Angle Regression
2023-06-07 22:11:18,732:INFO:Total runtime is 0.8256872733434041 minutes
2023-06-07 22:11:18,737:INFO:SubProcess create_model() called ==================================
2023-06-07 22:11:18,738:INFO:Initializing create_model()
2023-06-07 22:11:18,738:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000146DE7D5B40>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000146E3B024D0>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 22:11:18,739:INFO:Checking exceptions
2023-06-07 22:11:18,739:INFO:Importing libraries
2023-06-07 22:11:18,739:INFO:Copying training dataset
2023-06-07 22:11:18,791:INFO:Defining folds
2023-06-07 22:11:18,791:INFO:Declaring metric variables
2023-06-07 22:11:18,796:INFO:Importing untrained model
2023-06-07 22:11:18,806:INFO:Least Angle Regression Imported successfully
2023-06-07 22:11:18,818:INFO:Starting cross validation
2023-06-07 22:11:18,821:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 22:11:26,151:INFO:Calculating mean and std
2023-06-07 22:11:26,152:INFO:Creating metrics dataframe
2023-06-07 22:11:26,797:INFO:Uploading results into container
2023-06-07 22:11:26,798:INFO:Uploading model into container now
2023-06-07 22:11:26,799:INFO:_master_model_container: 5
2023-06-07 22:11:26,799:INFO:_display_container: 2
2023-06-07 22:11:26,799:INFO:Lars(random_state=123)
2023-06-07 22:11:26,800:INFO:create_model() successfully completed......................................
2023-06-07 22:11:26,924:INFO:SubProcess create_model() end ==================================
2023-06-07 22:11:26,924:INFO:Creating metrics dataframe
2023-06-07 22:11:26,940:INFO:Initializing Lasso Least Angle Regression
2023-06-07 22:11:26,940:INFO:Total runtime is 0.9624800642331441 minutes
2023-06-07 22:11:26,945:INFO:SubProcess create_model() called ==================================
2023-06-07 22:11:26,946:INFO:Initializing create_model()
2023-06-07 22:11:26,946:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000146DE7D5B40>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000146E3B024D0>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 22:11:26,946:INFO:Checking exceptions
2023-06-07 22:11:26,946:INFO:Importing libraries
2023-06-07 22:11:26,946:INFO:Copying training dataset
2023-06-07 22:11:26,985:INFO:Defining folds
2023-06-07 22:11:26,985:INFO:Declaring metric variables
2023-06-07 22:11:26,993:INFO:Importing untrained model
2023-06-07 22:11:26,999:INFO:Lasso Least Angle Regression Imported successfully
2023-06-07 22:11:27,010:INFO:Starting cross validation
2023-06-07 22:11:27,012:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 22:11:34,135:INFO:Calculating mean and std
2023-06-07 22:11:34,137:INFO:Creating metrics dataframe
2023-06-07 22:11:34,781:INFO:Uploading results into container
2023-06-07 22:11:34,782:INFO:Uploading model into container now
2023-06-07 22:11:34,783:INFO:_master_model_container: 6
2023-06-07 22:11:34,783:INFO:_display_container: 2
2023-06-07 22:11:34,784:INFO:LassoLars(random_state=123)
2023-06-07 22:11:34,784:INFO:create_model() successfully completed......................................
2023-06-07 22:11:34,911:INFO:SubProcess create_model() end ==================================
2023-06-07 22:11:34,911:INFO:Creating metrics dataframe
2023-06-07 22:11:34,927:INFO:Initializing Orthogonal Matching Pursuit
2023-06-07 22:11:34,927:INFO:Total runtime is 1.0955939491589863 minutes
2023-06-07 22:11:34,932:INFO:SubProcess create_model() called ==================================
2023-06-07 22:11:34,932:INFO:Initializing create_model()
2023-06-07 22:11:34,933:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000146DE7D5B40>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000146E3B024D0>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 22:11:34,933:INFO:Checking exceptions
2023-06-07 22:11:34,933:INFO:Importing libraries
2023-06-07 22:11:34,933:INFO:Copying training dataset
2023-06-07 22:11:34,973:INFO:Defining folds
2023-06-07 22:11:34,973:INFO:Declaring metric variables
2023-06-07 22:11:34,980:INFO:Importing untrained model
2023-06-07 22:11:34,985:INFO:Orthogonal Matching Pursuit Imported successfully
2023-06-07 22:11:34,994:INFO:Starting cross validation
2023-06-07 22:11:34,997:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 22:11:42,119:INFO:Calculating mean and std
2023-06-07 22:11:42,120:INFO:Creating metrics dataframe
2023-06-07 22:11:42,768:INFO:Uploading results into container
2023-06-07 22:11:42,770:INFO:Uploading model into container now
2023-06-07 22:11:42,770:INFO:_master_model_container: 7
2023-06-07 22:11:42,770:INFO:_display_container: 2
2023-06-07 22:11:42,771:INFO:OrthogonalMatchingPursuit()
2023-06-07 22:11:42,772:INFO:create_model() successfully completed......................................
2023-06-07 22:11:42,896:INFO:SubProcess create_model() end ==================================
2023-06-07 22:11:42,896:INFO:Creating metrics dataframe
2023-06-07 22:11:42,913:INFO:Initializing Bayesian Ridge
2023-06-07 22:11:42,913:INFO:Total runtime is 1.2286938230196633 minutes
2023-06-07 22:11:42,918:INFO:SubProcess create_model() called ==================================
2023-06-07 22:11:42,918:INFO:Initializing create_model()
2023-06-07 22:11:42,918:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000146DE7D5B40>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000146E3B024D0>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 22:11:42,918:INFO:Checking exceptions
2023-06-07 22:11:42,919:INFO:Importing libraries
2023-06-07 22:11:42,919:INFO:Copying training dataset
2023-06-07 22:11:42,956:INFO:Defining folds
2023-06-07 22:11:42,956:INFO:Declaring metric variables
2023-06-07 22:11:42,963:INFO:Importing untrained model
2023-06-07 22:11:42,968:INFO:Bayesian Ridge Imported successfully
2023-06-07 22:11:42,979:INFO:Starting cross validation
2023-06-07 22:11:42,981:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 22:11:50,457:INFO:Calculating mean and std
2023-06-07 22:11:50,459:INFO:Creating metrics dataframe
2023-06-07 22:11:51,109:INFO:Uploading results into container
2023-06-07 22:11:51,111:INFO:Uploading model into container now
2023-06-07 22:11:51,111:INFO:_master_model_container: 8
2023-06-07 22:11:51,111:INFO:_display_container: 2
2023-06-07 22:11:51,112:INFO:BayesianRidge()
2023-06-07 22:11:51,112:INFO:create_model() successfully completed......................................
2023-06-07 22:11:51,276:INFO:SubProcess create_model() end ==================================
2023-06-07 22:11:51,276:INFO:Creating metrics dataframe
2023-06-07 22:11:51,292:INFO:Initializing Passive Aggressive Regressor
2023-06-07 22:11:51,293:INFO:Total runtime is 1.3683691978454589 minutes
2023-06-07 22:11:51,299:INFO:SubProcess create_model() called ==================================
2023-06-07 22:11:51,299:INFO:Initializing create_model()
2023-06-07 22:11:51,300:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000146DE7D5B40>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000146E3B024D0>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 22:11:51,300:INFO:Checking exceptions
2023-06-07 22:11:51,300:INFO:Importing libraries
2023-06-07 22:11:51,300:INFO:Copying training dataset
2023-06-07 22:11:51,337:INFO:Defining folds
2023-06-07 22:11:51,338:INFO:Declaring metric variables
2023-06-07 22:11:51,345:INFO:Importing untrained model
2023-06-07 22:11:51,350:INFO:Passive Aggressive Regressor Imported successfully
2023-06-07 22:11:51,361:INFO:Starting cross validation
2023-06-07 22:11:51,363:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 22:11:59,031:INFO:Calculating mean and std
2023-06-07 22:11:59,032:INFO:Creating metrics dataframe
2023-06-07 22:11:59,695:INFO:Uploading results into container
2023-06-07 22:11:59,696:INFO:Uploading model into container now
2023-06-07 22:11:59,697:INFO:_master_model_container: 9
2023-06-07 22:11:59,697:INFO:_display_container: 2
2023-06-07 22:11:59,697:INFO:PassiveAggressiveRegressor(random_state=123)
2023-06-07 22:11:59,697:INFO:create_model() successfully completed......................................
2023-06-07 22:11:59,822:INFO:SubProcess create_model() end ==================================
2023-06-07 22:11:59,823:INFO:Creating metrics dataframe
2023-06-07 22:11:59,840:INFO:Initializing Huber Regressor
2023-06-07 22:11:59,840:INFO:Total runtime is 1.5108133236567178 minutes
2023-06-07 22:11:59,847:INFO:SubProcess create_model() called ==================================
2023-06-07 22:11:59,847:INFO:Initializing create_model()
2023-06-07 22:11:59,847:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000146DE7D5B40>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000146E3B024D0>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 22:11:59,847:INFO:Checking exceptions
2023-06-07 22:11:59,848:INFO:Importing libraries
2023-06-07 22:11:59,848:INFO:Copying training dataset
2023-06-07 22:11:59,891:INFO:Defining folds
2023-06-07 22:11:59,891:INFO:Declaring metric variables
2023-06-07 22:11:59,897:INFO:Importing untrained model
2023-06-07 22:11:59,903:INFO:Huber Regressor Imported successfully
2023-06-07 22:11:59,913:INFO:Starting cross validation
2023-06-07 22:11:59,915:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 22:12:10,683:INFO:Calculating mean and std
2023-06-07 22:12:10,684:INFO:Creating metrics dataframe
2023-06-07 22:12:11,361:INFO:Uploading results into container
2023-06-07 22:12:11,362:INFO:Uploading model into container now
2023-06-07 22:12:11,363:INFO:_master_model_container: 10
2023-06-07 22:12:11,363:INFO:_display_container: 2
2023-06-07 22:12:11,364:INFO:HuberRegressor()
2023-06-07 22:12:11,364:INFO:create_model() successfully completed......................................
2023-06-07 22:12:11,495:INFO:SubProcess create_model() end ==================================
2023-06-07 22:12:11,495:INFO:Creating metrics dataframe
2023-06-07 22:12:11,511:INFO:Initializing K Neighbors Regressor
2023-06-07 22:12:11,512:INFO:Total runtime is 1.7053459763526915 minutes
2023-06-07 22:12:11,517:INFO:SubProcess create_model() called ==================================
2023-06-07 22:12:11,517:INFO:Initializing create_model()
2023-06-07 22:12:11,517:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000146DE7D5B40>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000146E3B024D0>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 22:12:11,517:INFO:Checking exceptions
2023-06-07 22:12:11,517:INFO:Importing libraries
2023-06-07 22:12:11,518:INFO:Copying training dataset
2023-06-07 22:12:11,559:INFO:Defining folds
2023-06-07 22:12:11,559:INFO:Declaring metric variables
2023-06-07 22:12:11,564:INFO:Importing untrained model
2023-06-07 22:12:11,569:INFO:K Neighbors Regressor Imported successfully
2023-06-07 22:12:11,579:INFO:Starting cross validation
2023-06-07 22:12:11,582:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 22:12:21,054:INFO:Calculating mean and std
2023-06-07 22:12:21,055:INFO:Creating metrics dataframe
2023-06-07 22:12:21,744:INFO:Uploading results into container
2023-06-07 22:12:21,745:INFO:Uploading model into container now
2023-06-07 22:12:21,746:INFO:_master_model_container: 11
2023-06-07 22:12:21,746:INFO:_display_container: 2
2023-06-07 22:12:21,746:INFO:KNeighborsRegressor(n_jobs=-1)
2023-06-07 22:12:21,747:INFO:create_model() successfully completed......................................
2023-06-07 22:12:21,869:INFO:SubProcess create_model() end ==================================
2023-06-07 22:12:21,869:INFO:Creating metrics dataframe
2023-06-07 22:12:21,886:INFO:Initializing Decision Tree Regressor
2023-06-07 22:12:21,887:INFO:Total runtime is 1.8782748262087503 minutes
2023-06-07 22:12:21,893:INFO:SubProcess create_model() called ==================================
2023-06-07 22:12:21,894:INFO:Initializing create_model()
2023-06-07 22:12:21,894:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000146DE7D5B40>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000146E3B024D0>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 22:12:21,894:INFO:Checking exceptions
2023-06-07 22:12:21,894:INFO:Importing libraries
2023-06-07 22:12:21,894:INFO:Copying training dataset
2023-06-07 22:12:21,932:INFO:Defining folds
2023-06-07 22:12:21,932:INFO:Declaring metric variables
2023-06-07 22:12:21,939:INFO:Importing untrained model
2023-06-07 22:12:21,945:INFO:Decision Tree Regressor Imported successfully
2023-06-07 22:12:21,954:INFO:Starting cross validation
2023-06-07 22:12:21,958:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 22:12:30,906:INFO:Calculating mean and std
2023-06-07 22:12:30,908:INFO:Creating metrics dataframe
2023-06-07 22:12:31,631:INFO:Uploading results into container
2023-06-07 22:12:31,633:INFO:Uploading model into container now
2023-06-07 22:12:31,633:INFO:_master_model_container: 12
2023-06-07 22:12:31,634:INFO:_display_container: 2
2023-06-07 22:12:31,634:INFO:DecisionTreeRegressor(random_state=123)
2023-06-07 22:12:31,634:INFO:create_model() successfully completed......................................
2023-06-07 22:12:31,760:INFO:SubProcess create_model() end ==================================
2023-06-07 22:12:31,760:INFO:Creating metrics dataframe
2023-06-07 22:12:31,778:INFO:Initializing Random Forest Regressor
2023-06-07 22:12:31,778:INFO:Total runtime is 2.0431113918622335 minutes
2023-06-07 22:12:31,783:INFO:SubProcess create_model() called ==================================
2023-06-07 22:12:31,784:INFO:Initializing create_model()
2023-06-07 22:12:31,784:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000146DE7D5B40>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000146E3B024D0>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 22:12:31,784:INFO:Checking exceptions
2023-06-07 22:12:31,784:INFO:Importing libraries
2023-06-07 22:12:31,785:INFO:Copying training dataset
2023-06-07 22:12:31,824:INFO:Defining folds
2023-06-07 22:12:31,825:INFO:Declaring metric variables
2023-06-07 22:12:31,831:INFO:Importing untrained model
2023-06-07 22:12:31,838:INFO:Random Forest Regressor Imported successfully
2023-06-07 22:12:31,851:INFO:Starting cross validation
2023-06-07 22:12:31,854:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 22:14:00,716:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 6.32s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-07 22:14:07,026:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 4.83s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-07 22:14:10,152:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 4.01s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-07 22:14:18,014:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.21s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-07 22:14:18,175:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.84s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-07 22:14:18,281:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.84s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-07 22:14:18,336:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.70s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-07 22:14:18,597:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 2.16s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-07 22:14:18,634:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.81s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-07 22:14:20,498:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.56s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-07 22:14:20,550:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.54s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-07 22:14:20,696:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.65s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-07 22:14:20,778:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.62s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-07 22:14:21,517:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.94s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-07 22:14:50,167:INFO:Calculating mean and std
2023-06-07 22:14:51,567:INFO:Creating metrics dataframe
2023-06-07 22:14:53,529:INFO:Uploading results into container
2023-06-07 22:14:53,533:INFO:Uploading model into container now
2023-06-07 22:14:53,536:INFO:_master_model_container: 13
2023-06-07 22:14:53,536:INFO:_display_container: 2
2023-06-07 22:14:53,542:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2023-06-07 22:14:53,543:INFO:create_model() successfully completed......................................
2023-06-07 22:14:53,904:INFO:SubProcess create_model() end ==================================
2023-06-07 22:14:53,904:INFO:Creating metrics dataframe
2023-06-07 22:14:54,149:INFO:Initializing Extra Trees Regressor
2023-06-07 22:14:54,149:INFO:Total runtime is 4.415963820616405 minutes
2023-06-07 22:14:54,154:INFO:SubProcess create_model() called ==================================
2023-06-07 22:14:54,155:INFO:Initializing create_model()
2023-06-07 22:14:54,155:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000146DE7D5B40>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000146E3B024D0>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 22:14:54,155:INFO:Checking exceptions
2023-06-07 22:14:54,155:INFO:Importing libraries
2023-06-07 22:14:54,155:INFO:Copying training dataset
2023-06-07 22:14:54,803:INFO:Defining folds
2023-06-07 22:14:54,803:INFO:Declaring metric variables
2023-06-07 22:14:54,809:INFO:Importing untrained model
2023-06-07 22:14:54,814:INFO:Extra Trees Regressor Imported successfully
2023-06-07 22:14:54,824:INFO:Starting cross validation
2023-06-07 22:14:54,826:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 22:17:55,958:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 52.02s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-07 22:17:55,985:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 38.84s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-07 22:17:58,350:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 38.04s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-07 22:17:58,640:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 41.43s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-07 22:17:58,921:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 39.29s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-07 22:17:59,303:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 36.38s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-07 22:18:00,228:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 37.33s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-07 22:18:01,170:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 39.98s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-07 22:18:58,421:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 29.25s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-07 22:18:58,432:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 30.64s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-07 22:18:58,533:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 28.04s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-07 22:19:03,144:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 30.91s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-07 22:19:07,070:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 34.88s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-07 22:19:09,550:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 35.51s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-07 22:19:18,750:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 43.94s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-07 22:19:20,794:WARNING:c:\Users\Crossddelta\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 46.53s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-07 22:19:50,797:INFO:Calculating mean and std
2023-06-07 22:19:50,862:INFO:Creating metrics dataframe
2023-06-07 22:19:51,407:INFO:Uploading results into container
2023-06-07 22:19:51,413:INFO:Uploading model into container now
2023-06-07 22:19:51,419:INFO:_master_model_container: 14
2023-06-07 22:19:51,419:INFO:_display_container: 2
2023-06-07 22:19:51,433:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2023-06-07 22:19:51,434:INFO:create_model() successfully completed......................................
2023-06-07 22:19:51,999:INFO:SubProcess create_model() end ==================================
2023-06-07 22:19:51,999:INFO:Creating metrics dataframe
2023-06-07 22:19:52,026:INFO:Initializing AdaBoost Regressor
2023-06-07 22:19:52,026:INFO:Total runtime is 9.380590319633484 minutes
2023-06-07 22:19:52,032:INFO:SubProcess create_model() called ==================================
2023-06-07 22:19:52,033:INFO:Initializing create_model()
2023-06-07 22:19:52,033:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000146DE7D5B40>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000146E3B024D0>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 22:19:52,034:INFO:Checking exceptions
2023-06-07 22:19:52,034:INFO:Importing libraries
2023-06-07 22:19:52,034:INFO:Copying training dataset
2023-06-07 22:19:52,107:INFO:Defining folds
2023-06-07 22:19:52,107:INFO:Declaring metric variables
2023-06-07 22:19:52,112:INFO:Importing untrained model
2023-06-07 22:19:52,117:INFO:AdaBoost Regressor Imported successfully
2023-06-07 22:19:52,126:INFO:Starting cross validation
2023-06-07 22:19:52,129:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 22:20:18,595:INFO:Calculating mean and std
2023-06-07 22:20:18,597:INFO:Creating metrics dataframe
2023-06-07 22:20:19,072:INFO:Uploading results into container
2023-06-07 22:20:19,074:INFO:Uploading model into container now
2023-06-07 22:20:19,074:INFO:_master_model_container: 15
2023-06-07 22:20:19,075:INFO:_display_container: 2
2023-06-07 22:20:19,075:INFO:AdaBoostRegressor(random_state=123)
2023-06-07 22:20:19,075:INFO:create_model() successfully completed......................................
2023-06-07 22:20:19,201:INFO:SubProcess create_model() end ==================================
2023-06-07 22:20:19,201:INFO:Creating metrics dataframe
2023-06-07 22:20:19,222:INFO:Initializing Gradient Boosting Regressor
2023-06-07 22:20:19,222:INFO:Total runtime is 9.833851714928945 minutes
2023-06-07 22:20:19,230:INFO:SubProcess create_model() called ==================================
2023-06-07 22:20:19,231:INFO:Initializing create_model()
2023-06-07 22:20:19,231:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000146DE7D5B40>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000146E3B024D0>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 22:20:19,231:INFO:Checking exceptions
2023-06-07 22:20:19,231:INFO:Importing libraries
2023-06-07 22:20:19,231:INFO:Copying training dataset
2023-06-07 22:20:19,267:INFO:Defining folds
2023-06-07 22:20:19,268:INFO:Declaring metric variables
2023-06-07 22:20:19,274:INFO:Importing untrained model
2023-06-07 22:20:19,280:INFO:Gradient Boosting Regressor Imported successfully
2023-06-07 22:20:19,290:INFO:Starting cross validation
2023-06-07 22:20:19,294:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 22:21:05,510:INFO:Calculating mean and std
2023-06-07 22:21:05,512:INFO:Creating metrics dataframe
2023-06-07 22:21:05,992:INFO:Uploading results into container
2023-06-07 22:21:05,993:INFO:Uploading model into container now
2023-06-07 22:21:05,993:INFO:_master_model_container: 16
2023-06-07 22:21:05,993:INFO:_display_container: 2
2023-06-07 22:21:05,997:INFO:GradientBoostingRegressor(random_state=123)
2023-06-07 22:21:05,998:INFO:create_model() successfully completed......................................
2023-06-07 22:21:06,125:INFO:SubProcess create_model() end ==================================
2023-06-07 22:21:06,125:INFO:Creating metrics dataframe
2023-06-07 22:21:06,147:INFO:Initializing Light Gradient Boosting Machine
2023-06-07 22:21:06,147:INFO:Total runtime is 10.615939446290335 minutes
2023-06-07 22:21:06,154:INFO:SubProcess create_model() called ==================================
2023-06-07 22:21:06,154:INFO:Initializing create_model()
2023-06-07 22:21:06,155:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000146DE7D5B40>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000146E3B024D0>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 22:21:06,155:INFO:Checking exceptions
2023-06-07 22:21:06,155:INFO:Importing libraries
2023-06-07 22:21:06,155:INFO:Copying training dataset
2023-06-07 22:21:06,200:INFO:Defining folds
2023-06-07 22:21:06,200:INFO:Declaring metric variables
2023-06-07 22:21:06,204:INFO:Importing untrained model
2023-06-07 22:21:06,212:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-07 22:21:06,223:INFO:Starting cross validation
2023-06-07 22:21:06,227:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 22:21:17,544:INFO:Calculating mean and std
2023-06-07 22:21:17,546:INFO:Creating metrics dataframe
2023-06-07 22:21:18,032:INFO:Uploading results into container
2023-06-07 22:21:18,033:INFO:Uploading model into container now
2023-06-07 22:21:18,033:INFO:_master_model_container: 17
2023-06-07 22:21:18,034:INFO:_display_container: 2
2023-06-07 22:21:18,034:INFO:LGBMRegressor(random_state=123)
2023-06-07 22:21:18,035:INFO:create_model() successfully completed......................................
2023-06-07 22:21:18,160:INFO:SubProcess create_model() end ==================================
2023-06-07 22:21:18,160:INFO:Creating metrics dataframe
2023-06-07 22:21:18,182:INFO:Initializing Dummy Regressor
2023-06-07 22:21:18,182:INFO:Total runtime is 10.816513065497082 minutes
2023-06-07 22:21:18,187:INFO:SubProcess create_model() called ==================================
2023-06-07 22:21:18,188:INFO:Initializing create_model()
2023-06-07 22:21:18,188:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000146DE7D5B40>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000146E3B024D0>, model_only=True, return_train_score=False, kwargs={})
2023-06-07 22:21:18,188:INFO:Checking exceptions
2023-06-07 22:21:18,188:INFO:Importing libraries
2023-06-07 22:21:18,188:INFO:Copying training dataset
2023-06-07 22:21:18,233:INFO:Defining folds
2023-06-07 22:21:18,233:INFO:Declaring metric variables
2023-06-07 22:21:18,238:INFO:Importing untrained model
2023-06-07 22:21:18,243:INFO:Dummy Regressor Imported successfully
2023-06-07 22:21:18,251:INFO:Starting cross validation
2023-06-07 22:21:18,254:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-07 22:21:23,966:INFO:Calculating mean and std
2023-06-07 22:21:23,967:INFO:Creating metrics dataframe
2023-06-07 22:21:24,514:INFO:Uploading results into container
2023-06-07 22:21:24,515:INFO:Uploading model into container now
2023-06-07 22:21:24,516:INFO:_master_model_container: 18
2023-06-07 22:21:24,516:INFO:_display_container: 2
2023-06-07 22:21:24,516:INFO:DummyRegressor()
2023-06-07 22:21:24,516:INFO:create_model() successfully completed......................................
2023-06-07 22:21:24,639:INFO:SubProcess create_model() end ==================================
2023-06-07 22:21:24,641:INFO:Creating metrics dataframe
2023-06-07 22:21:24,681:INFO:Initializing create_model()
2023-06-07 22:21:24,682:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000146DE7D5B40>, estimator=RandomForestRegressor(n_jobs=-1, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-07 22:21:24,682:INFO:Checking exceptions
2023-06-07 22:21:24,688:INFO:Importing libraries
2023-06-07 22:21:24,688:INFO:Copying training dataset
2023-06-07 22:21:24,726:INFO:Defining folds
2023-06-07 22:21:24,727:INFO:Declaring metric variables
2023-06-07 22:21:24,727:INFO:Importing untrained model
2023-06-07 22:21:24,727:INFO:Declaring custom model
2023-06-07 22:21:24,728:INFO:Random Forest Regressor Imported successfully
2023-06-07 22:21:24,731:INFO:Cross validation set to False
2023-06-07 22:21:24,731:INFO:Fitting Model
2023-06-07 22:21:38,275:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2023-06-07 22:21:38,275:INFO:create_model() successfully completed......................................
2023-06-07 22:21:38,454:INFO:_master_model_container: 18
2023-06-07 22:21:38,455:INFO:_display_container: 2
2023-06-07 22:21:38,456:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2023-06-07 22:21:38,456:INFO:compare_models() successfully completed......................................
2023-06-07 22:21:40,513:INFO:Initializing plot_model()
2023-06-07 22:21:40,513:INFO:plot_model(plot=residuals, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=RandomForestRegressor(n_jobs=-1, random_state=123), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x00000146DE7D5B40>, system=True)
2023-06-07 22:21:40,514:INFO:Checking exceptions
2023-06-07 22:21:40,593:INFO:Preloading libraries
2023-06-07 22:21:41,247:INFO:Copying training dataset
2023-06-07 22:21:41,247:INFO:Plot type: residuals
2023-06-07 22:21:42,346:INFO:Fitting Model
2023-06-07 22:21:45,180:INFO:Scoring test/hold-out set
2023-06-07 22:21:48,912:INFO:Visual Rendered Successfully
2023-06-07 22:21:49,048:INFO:plot_model() successfully completed......................................
2023-06-07 22:21:49,322:INFO:Initializing plot_model()
2023-06-07 22:21:49,322:INFO:plot_model(plot=feature, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=RandomForestRegressor(n_jobs=-1, random_state=123), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x00000146DE7D5B40>, system=True)
2023-06-07 22:21:49,322:INFO:Checking exceptions
2023-06-07 22:21:49,406:INFO:Preloading libraries
2023-06-07 22:21:49,920:INFO:Copying training dataset
2023-06-07 22:21:49,921:INFO:Plot type: feature
2023-06-07 22:21:49,921:WARNING:No coef_ found. Trying feature_importances_
2023-06-07 22:21:50,253:INFO:Visual Rendered Successfully
2023-06-07 22:21:50,398:INFO:plot_model() successfully completed......................................
2023-06-07 22:21:50,649:INFO:Initializing predict_model()
2023-06-07 22:21:50,650:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000146DE7D5B40>, estimator=RandomForestRegressor(n_jobs=-1, random_state=123), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000146E274FA30>)
2023-06-07 22:21:50,650:INFO:Checking exceptions
2023-06-07 22:21:50,650:INFO:Preloading libraries
2023-06-07 22:21:51,622:INFO:Initializing predict_model()
2023-06-07 22:21:51,623:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000146DE7D5B40>, estimator=RandomForestRegressor(n_jobs=-1, random_state=123), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000146E274F6D0>)
2023-06-07 22:21:51,623:INFO:Checking exceptions
2023-06-07 22:21:51,623:INFO:Preloading libraries
2023-06-07 22:21:51,626:INFO:Set up data.
2023-06-07 22:21:51,642:INFO:Set up index.
2023-06-07 22:22:54,011:INFO:Initializing save_model()
2023-06-07 22:22:54,011:INFO:save_model(model=RandomForestRegressor(n_jobs=-1, random_state=123), model_name=model, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\CROSSD~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['SN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Commodity', 'Date', 'Unit'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Unit'],
                                    transformer=OneHotEncoder(cols=['Unit'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['Commodity', 'Date'],
                                    transformer=TargetEncoder(cols=['Commodity',
                                                                    'Date'],
                                                              handle_missing='return_nan')))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2023-06-07 22:22:54,011:INFO:Adding model into prep_pipe
2023-06-07 22:22:55,041:INFO:model.pkl saved in current working directory
2023-06-07 22:22:55,058:INFO:Pipeline(memory=FastMemory(location=C:\Users\CROSSD~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['SN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Commodity', 'Date', 'Unit'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Unit'],
                                    transformer=OneHotEncoder(cols=['Unit'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['Commodity', 'Date'],
                                    transformer=TargetEncoder(cols=['Commodity',
                                                                    'Date'],
                                                              handle_missing='return_nan'))),
                ('trained_model',
                 RandomForestRegressor(n_jobs=-1, random_state=123))])
2023-06-07 22:22:55,058:INFO:save_model() successfully completed......................................
2023-06-07 22:27:06,611:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-07 22:27:06,611:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-07 22:27:06,611:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-07 22:27:06,611:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-07 22:27:08,083:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-07 22:27:54,298:INFO:Initializing load_model()
2023-06-07 22:27:54,299:INFO:load_model(model_name=./model, platform=None, authentication=None, verbose=True)
2023-06-07 22:27:55,095:INFO:Initializing predict_model()
2023-06-07 22:27:55,096:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002EB6AACBFD0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\CROSSD~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['SN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Commodity', 'Date', 'Unit'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Unit'],
                                    transformer=OneHotEncoder(cols=['Unit'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['Commodity', 'Date'],
                                    transformer=TargetEncoder(cols=['Commodity',
                                                                    'Date'],
                                                              handle_missing='return_nan'))),
                ('trained_model',
                 RandomForestRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002EB610ED870>)
2023-06-07 22:27:55,096:INFO:Checking exceptions
2023-06-07 22:27:55,096:INFO:Preloading libraries
2023-06-07 22:27:55,096:INFO:Set up data.
2023-06-07 22:27:55,104:INFO:Set up index.
2023-06-07 22:28:11,827:INFO:Initializing load_model()
2023-06-07 22:28:11,827:INFO:load_model(model_name=./model, platform=None, authentication=None, verbose=True)
2023-06-07 22:28:12,530:INFO:Initializing predict_model()
2023-06-07 22:28:12,530:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002EB6ABB5060>, estimator=Pipeline(memory=FastMemory(location=C:\Users\CROSSD~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['SN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Commodity', 'Date', 'Unit'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Unit'],
                                    transformer=OneHotEncoder(cols=['Unit'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['Commodity', 'Date'],
                                    transformer=TargetEncoder(cols=['Commodity',
                                                                    'Date'],
                                                              handle_missing='return_nan'))),
                ('trained_model',
                 RandomForestRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002EB6AAA44C0>)
2023-06-07 22:28:12,530:INFO:Checking exceptions
2023-06-07 22:28:12,530:INFO:Preloading libraries
2023-06-07 22:28:12,531:INFO:Set up data.
2023-06-07 22:28:12,593:INFO:Set up index.
2023-06-07 22:30:18,728:INFO:Initializing load_model()
2023-06-07 22:30:18,728:INFO:load_model(model_name=./model, platform=None, authentication=None, verbose=True)
2023-06-07 22:30:19,460:INFO:Initializing predict_model()
2023-06-07 22:30:19,460:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002EB6ABB4F40>, estimator=Pipeline(memory=FastMemory(location=C:\Users\CROSSD~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['SN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Commodity', 'Date', 'Unit'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Unit'],
                                    transformer=OneHotEncoder(cols=['Unit'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['Commodity', 'Date'],
                                    transformer=TargetEncoder(cols=['Commodity',
                                                                    'Date'],
                                                              handle_missing='return_nan'))),
                ('trained_model',
                 RandomForestRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002EB6AAA7AC0>)
2023-06-07 22:30:19,460:INFO:Checking exceptions
2023-06-07 22:30:19,460:INFO:Preloading libraries
2023-06-07 22:30:19,460:INFO:Set up data.
2023-06-07 22:30:19,528:INFO:Set up index.
2023-06-07 22:30:33,095:INFO:Initializing load_model()
2023-06-07 22:30:33,095:INFO:load_model(model_name=./model, platform=None, authentication=None, verbose=True)
2023-06-07 22:30:33,791:INFO:Initializing predict_model()
2023-06-07 22:30:33,791:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002EB6A89F220>, estimator=Pipeline(memory=FastMemory(location=C:\Users\CROSSD~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['SN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Commodity', 'Date', 'Unit'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Unit'],
                                    transformer=OneHotEncoder(cols=['Unit'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['Commodity', 'Date'],
                                    transformer=TargetEncoder(cols=['Commodity',
                                                                    'Date'],
                                                              handle_missing='return_nan'))),
                ('trained_model',
                 RandomForestRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002EB007128C0>)
2023-06-07 22:30:33,792:INFO:Checking exceptions
2023-06-07 22:30:33,792:INFO:Preloading libraries
2023-06-07 22:30:33,792:INFO:Set up data.
2023-06-07 22:30:33,862:INFO:Set up index.
2023-06-07 22:37:09,368:INFO:Initializing load_model()
2023-06-07 22:37:09,368:INFO:load_model(model_name=./model, platform=None, authentication=None, verbose=True)
2023-06-07 22:37:10,109:INFO:Initializing predict_model()
2023-06-07 22:37:10,109:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002EB61373D60>, estimator=Pipeline(memory=FastMemory(location=C:\Users\CROSSD~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['SN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Commodity', 'Date', 'Unit'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Unit'],
                                    transformer=OneHotEncoder(cols=['Unit'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['Commodity', 'Date'],
                                    transformer=TargetEncoder(cols=['Commodity',
                                                                    'Date'],
                                                              handle_missing='return_nan'))),
                ('trained_model',
                 RandomForestRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002EB6AAA6EF0>)
2023-06-07 22:37:10,109:INFO:Checking exceptions
2023-06-07 22:37:10,110:INFO:Preloading libraries
2023-06-07 22:37:10,110:INFO:Set up data.
2023-06-07 22:37:10,181:INFO:Set up index.
2023-06-07 22:37:22,015:INFO:Initializing load_model()
2023-06-07 22:37:22,015:INFO:load_model(model_name=./model, platform=None, authentication=None, verbose=True)
2023-06-07 22:37:22,717:INFO:Initializing predict_model()
2023-06-07 22:37:22,718:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002EB6ABD64D0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\CROSSD~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['SN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Commodity', 'Date', 'Unit'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Unit'],
                                    transformer=OneHotEncoder(cols=['Unit'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['Commodity', 'Date'],
                                    transformer=TargetEncoder(cols=['Commodity',
                                                                    'Date'],
                                                              handle_missing='return_nan'))),
                ('trained_model',
                 RandomForestRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002EB00712F80>)
2023-06-07 22:37:22,718:INFO:Checking exceptions
2023-06-07 22:37:22,718:INFO:Preloading libraries
2023-06-07 22:37:22,718:INFO:Set up data.
2023-06-07 22:37:22,796:INFO:Set up index.
2023-06-07 22:39:15,418:INFO:Initializing load_model()
2023-06-07 22:39:15,418:INFO:load_model(model_name=./model, platform=None, authentication=None, verbose=True)
2023-06-07 22:39:16,232:INFO:Initializing predict_model()
2023-06-07 22:39:16,232:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002EB6ABD4220>, estimator=Pipeline(memory=FastMemory(location=C:\Users\CROSSD~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['SN'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Commodity', 'Date', 'Unit'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Unit'],
                                    transformer=OneHotEncoder(cols=['Unit'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['Commodity', 'Date'],
                                    transformer=TargetEncoder(cols=['Commodity',
                                                                    'Date'],
                                                              handle_missing='return_nan'))),
                ('trained_model',
                 RandomForestRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002EB007136D0>)
2023-06-07 22:39:16,232:INFO:Checking exceptions
2023-06-07 22:39:16,232:INFO:Preloading libraries
2023-06-07 22:39:16,232:INFO:Set up data.
2023-06-07 22:39:16,332:INFO:Set up index.
